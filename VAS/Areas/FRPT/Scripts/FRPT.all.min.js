/* Version 2.3.8.1*/FRPT = window.FRPT || {}, function (n, t) { function i() { function u(n) { ti.css("display", n ? "block" : "none") } function vr() { r.load(VIS.Application.contextUrl + "FRPT/AccountingGroup/Index/?windowno=" + i.windowNo, function () { u(!0); r.append(ti); yr(); window.setTimeout(function () { u(!1) }, 500) }) } function yr() { function vr(n) { n ? (vt.removeClass("col-lg-8 col-md-8").addClass("col-lg-4 col-md-4"), o.removeClass("frpt-td-cmb-minwidth").addClass("frpt-alldiv-dis-width"), v.removeClass("frpt-td-cmb-minwidth").addClass("frpt-alldiv-dis-width")) : (vt.removeClass("col-lg-4 col-md-4").addClass("col-lg-8 col-md-8"), o.removeClass("frpt-alldiv-dis-width").addClass("frpt-td-cmb-minwidth"), v.removeClass("frpt-alldiv-dis-width").addClass("frpt-td-cmb-minwidth")) } function nu(n, t) { var i = { to: w, className: "wsp-ui-effects-transfer" }; n.effect("transfer", i, 400, t) } function ar() { ot.val(""); st.val(""); dt.val(""); ht.prop("selectedIndex", 0); tt.val("N"); ct.prop("checked", !0); g.prop("selectedIndex", 0); nt.prop("selectedIndex", 0); lt.prop("selectedIndex", 0) } function eu() { ar(); a = 0; w.css("display", "none"); vr(!1) } function tu(n) { n ? (ui.css("display", "flex"), ri.css("display", "none"), c.css("display", "none"), l.css("display", "none"), y.css("display", "none"), h.css("display", "none"), rt.css("display", "none"), eu()) : (ui.css("display", "none"), ri.css("display", "flex"), c.css("display", "block"), l.css("display", "block"), y.css("display", "flex"), h.css("display", "block"), rt.css("display", "block")) } function dr(n) { n ? (ei.css("display", "block"), oi.css("display", "none"), d.css("display", "none"), ut.css("display", "none"), wt.css("display", "none")) : (ei.css("display", "none"), oi.css("display", "block"), d.css("display", "block"), ut.css("display", "block")) } function iu() { var n = VIS.Env.getCtx().getAD_Client_ID(); t.ajax({ type: "GET", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/LoadLegerSettings", async: !1, dataType: "json", data: { AD_CLIENT_ID: n }, success: function (n) { n ? pu(n.ClientInfo, n.OrgInfo, n.AccountTypeInfo, n.AccountSignInfo, n.AccountGroupInfo, n.MasterAccountTypeInfo) : VIS.ADialog.info("FRPT_LodingProblem", !0, "", "") } }) } function yu() { t.ajax({ type: "GET", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/GetAccountType", async: !1, dataType: "json", success: function (n) { n ? (bt.empty(), yr(v, n.AccountTypeInfo), ft.append(bt), ft.append(rr)) : VIS.ADialog.info("FRPT_LodingProblem", !0, "", "") } }) } function pu(n, t, i, r, u, f) { yr(ht, i); yr(tt, r); tt.val("N"); yr(g, u, !0, -1); yr(lt, f, !0, "") } function yr(n, t, i, r) { n.empty(); for (var u = 0; u < t.length; u++)i && u == 0 && n.append(" <option value='" + r + "' ><\/option>"), n.append(" <option value='" + t[u].Key + "' >" + VIS.Utility.encodeText(t[u].Name) + "<\/option>"), n == v && bt.append("<li><input type='checkbox' value='" + t[u].Key + "'><label>" + VIS.Utility.encodeText(t[u].Name) + "<\/label><\/li>"); n.prop("selectedIndex", 0) } function ou() { var t = f.data("kendoTreeView").select(), n; if (a = t.find(".data-id").val(), a > 0) { y.css("opacity", "1"); y.removeAttr("disabled"); try { n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/LoadLeger", { ID: a }); n != null && Object.keys(n).length > 0 && (ot.val(n.name), st.val(n.value), ht.val(n.accounttype), tt.val(n.accountsign), ct.prop("checked", n.isactive == "Y" ? !0 : !1), it.prop("checked", n.issummary == "Y" ? !0 : !1), g.val(n.c_accountgroup_id), nt.val(n.c_accountsubgroup_id), lt.val(n.masteraccounttype), dt.val("")) } catch (i) { } it.prop("checked") ? (at.text(c.val()), c.css("opacity", "1"), c.removeAttr("disabled"), l.css("opacity", "1"), l.removeAttr("disabled")) : (at.text(l.val()), c.css("opacity", "0.5"), c.attr("disabled", !0), l.css("opacity", "0.5"), l.attr("disabled", !0)) } else y.css("opacity", "0.5"), y.attr("disabled", !0), c.css("opacity", "1"), c.removeAttr("disabled"), l.css("opacity", "1"), l.removeAttr("disabled"), ar() } function wu(n) { var t = f.data("kendoTreeView").select(); t.length == 0 && (t = null); f.data("kendoTreeView").append({ text: VIS.Utility.encodeText(n.text), NodeID: n.NodeID, IsSummary: n.IsSummary, ImageSource: n.ImageSource, color: n.color, "data-treeid=": ii }, t) } function su() { var n, t, i; s.empty(); try { if (n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/loadAccountElement", null), n != null) for (t = 0; t < n.length; t++)s.append("<option value=" + VIS.Utility.Util.getValueOfInt(n[t].Id) + ">" + VIS.Utility.encodeText(n[t].Name) + "<\/option>"); s.prop("selectedIndex", 0); s.find("option").length > 0 && (ni.css("opacity", "1"), ni.removeAttr("disabled")); i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/GetElementId", null); i && s.val(i) } catch (r) { } } function wr() { u(!0); var r = s.find("option:selected").val(), n = 0; o.val() > 0 && (n = o.val()); t.ajax({ type: "GET", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/LoadTree", dataType: "json", data: { elementId: r, windowNo: i.windowNo, groupID: n }, success: function (n) { var t = JSON.parse(n); t && (ii = t[0].AD_Tree_ID, bu(t)) } }) } function bu(n) { f.data("kendoTreeView") != undefined && (f.data("kendoTreeView").destroy(), f.empty()); f.kendoTreeView({ dragAndDrop: !0, dataSource: n, change: lu, drop: cu, select: du, template: "<i class='#= item.className # #= item.ImageSource #'><\/i><p>#= item.text #<\/p><input type='hidden' class='data-id' value='#= item.NodeID #'data-summary='#= item.IsSummary #'  data-treeid='" + n[0].AD_Tree_ID + "' />" }).data("kendoTreeView"); f.data("kendoTreeView").select(f.find(".k-item").first()); hu() } function hu() { window.setTimeout(function () { t(f.find("span")[1]).hasClass("k-state-selected") ? (f.find(".frpt-select-rightTreeNode").removeClass("frpt-select-rightTreeNode"), f.find(".frpt-select-leftTreeNode").removeClass("frpt-select-leftTreeNode"), window.setTimeout(function () { f.find(".k-state-selected").addClass("frpt-select-rightTreeNode"); u(!1) }, 1)) : (f.find(".frpt-select-rightTreeNode").removeClass("frpt-select-rightTreeNode"), f.find(".frpt-select-leftTreeNode").removeClass("frpt-select-leftTreeNode"), window.setTimeout(function () { f.find(".k-state-selected").addClass("frpt-select-leftTreeNode"); u(!1) }, 1)) }, 20) } function ku(n, t, i) { if (n > 0) { var r = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/UpdateTree", { ParentNodeId: t, TreeId: i, NodeID: n }); r > 0 } } function cu(n) { var h = t(n.sourceNode), f = t(n.destinationNode), r, o, u, i, s, c; if (!n.valid) { n.preventDefault(); return } if (n.destinationNode == undefined) { n.preventDefault(); return } if (r = this.dataItem(n.destinationNode), f.find(".data-id").val() == h.find(".data-id").val()) { n.preventDefault(); return } if (h.find(".data-id").val() == 0) { n.preventDefault(); return } if (h.find(".data-id").data("treeid") == f.find(".data-id").data("treeid")) { if (r) { if (!r.toJSON().IsSummary && f.find(".data-id").val() != 0) { n.preventDefault(); return } if (!r.toJSON().IsSummary && f.find(".data-id").val() == 0 && n.dropPosition == "before") { n.preventDefault(); return } ku(this.dataItem(n.sourceNode).toJSON().NodeID, r.toJSON().NodeID, h.find(".data-id").data("treeid")) } } else n.preventDefault(), o = e.data("kendoTreeView"), r = o.dataItem(n.destinationNode), r && n.valid && f.length > 0 && n.dropPosition == "over" && r.IsSummary == null && (u = this.dataItem(n.sourceNode).toJSON(), i = {}, i.id = 0, i.parentId = null, i.SubGroupLineId = null, i.SubGroupId = r.SubGroupId, i.AccountTypeId = r.AccountTypeId, i.SubGroupName = u.text, i.ElementName = u.text, i.ElementValueId = u.NodeID, i.IsSummary = u.IsSummary, i.IsRefRecord = !1, i.expanded = u.expanded, i.Sequence = null, i.selected = !1, i.color = "#515975", i.ImageSource = i.IsSummary ? "fa fa-folder-o frpt-tree-yellow-ico" : "vis vis-m-window frpt-tree-yellow-ico", i.EditDisplay = "none", i.DeleteDisplay = "block", i.CssClass = "frpt-default-img1", u.items && u.items.length > 0 && (i.items = au(r.SubGroupId, r.AccountTypeId, u.items, o.dataItem(n.destinationNode).toJSON())), o.append(i, f), o.expand(n.destinationNode), s = {}, s.SubGroupID = r.SubGroupId, s.Name = u.text, s.ElementValueId = u.NodeID, ti.push(s), c = t(n.sourceNode).find(".frpt-default-img"), c.length > 0 && c.removeClass("frpt-default-img").addClass("frpt-disablegray-img"), b.css("opacity", "1"), b.removeAttr("disabled"), k.css("opacity", "1"), k.removeAttr("disabled")) } function du() { hu() } function lu(n) { n.sender._ariaId.contains("treeview-left") && (gt || ou()) } function ru() { t(window).width() <= 1024 ? (vt.css("display", "none"), w.removeClass("col-lg-4 col-md-4").addClass("col-lg-8 col-md-8")) : w.removeClass("col-lg-8 col-md-8").addClass("col-lg-4 col-md-4") } function uu() { pt.val(""); v.prop("selectedIndex", 0) } function gu() { if (ti.length > 0) { var n = s.find("option:selected").val(); u(!0); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/SaveGroupLines", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ lines: ti, elementId: n }), success: function (n) { if (n.result) { ti = []; var t = e.find(".frpt-default-img1"); t.length > 0 && t.removeClass("frpt-default-img1").addClass("frpt-default-img"); gr(""); k.css("opacity", "0.5"); k.attr("disabled", !0); b.css("opacity", "0.5"); b.attr("disabled", !0) } else VIS.ADialog.info("FRPT_GroupLinesNotSaved", !0, "", ""); u(!1) } }) } } function au(n, t, i, r) { for (var u, e = [], f = 0; f < i.length; f++)u = {}, u.id = 0, u.parentId = null, u.SubGroupLineId = null, u.SubGroupId = n, u.AccountTypeId = t, u.SubGroupName = i[f].text, u.ElementName = i[f].text, u.ElementValueId = i[f].NodeID, u.IsSummary = i[f].IsSummary, u.IsRefRecord = !0, u.expanded = i[f].expanded, u.Sequence = null, u.selected = !1, u.CssClass = "frpt-default-img1", u.IsSummary ? (u.color = "#515975", u.ImageSource = "fa fa-folder-o frpt-tree-yellow-ico", u.EditDisplay = "none", u.DeleteDisplay = "none") : (u.color = "#515975", u.ImageSource = "vis vis-m-window frpt-tree-yellow-ico", u.EditDisplay = "none", u.DeleteDisplay = "none"), i[f].items ? i[f].items.length > 0 && (u.items = au(n, t, i[f].items, r)) : u.items = null, e.push(u); return e } function vu() { var i = s.find("option:selected").val(), n, t; if (i > 0) { o.empty(); try { if (n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/loadMainGroup", null), o.append("<option value='-1' ><\/option>"), n != null && n.length > 0) for (t = 0; t < n.length; t++)o.append(" <option value='" + VIS.Utility.Util.getValueOfInt(n[t].Id) + "' >" + VIS.Utility.encodeText(n[t].Name) + "<\/option>"); o.prop("selectedIndex", 1); o.find("option").length > 1 ? (o.trigger("change"), d.css("opacity", "1"), d.removeAttr("disabled")) : (d.css("opacity", "0.5"), d.prop("disabled", !0)) } catch (r) { } } } function nf() { v.empty(); yu() } function gr(n) { var i, r; if (u(!0), i = o.find("option:selected").val(), i <= 0) { e.data("kendoTreeView") != undefined && (e.data("kendoTreeView").destroy(), e.empty()); u(!1); return } r = s.find("option:selected").val(); n == undefined && (n = ""); t.ajax({ type: "GET", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/LoadRptSubGrop", dataType: "json", data: { groupID: i, accountType: n, elementId: r }, success: function (n) { if (u(!0), n) { var t = JSON.parse(n); rf(t, i); t && tf(t) } else VIS.ADialog.info("FRPT_GroupNotSaved", !0, "", ""); window.setTimeout(function () { u(!1) }, 900) } }) } function tf(n) { for (var i, r, s, u, h, o = f.data("kendoTreeView"), e = 0; e < n.length; e++)if (i = n[e].ElementValuelist, i) for (r = 0; r < i.length; r++)s = i[r], u = o.findByText(s), o.expand(u), u && (h = u.find(".frpt-default-img"), t(h).removeClass("frpt-default-img").addClass("frpt-disablegray-img")) } function rf(n, t) { e.data("kendoTreeView") != undefined && (e.data("kendoTreeView").destroy(), e.empty()); e.kendoTreeView({ dragAndDrop: !0, loadOnDemand: !1, dataSource: n, dataTextField: ["SubGroupName"], change: lu, drop: cu, select: function () { e.find(".frpt-select-rightTreeNode").removeClass("frpt-select-rightTreeNode"); window.setTimeout(function () { e.find(".k-state-selected").addClass("frpt-select-rightTreeNode") }, 1) }, template: "<div style='float: left;'><i class='#= item.CssClass # #= item.ImageSource #'><\/i><p>#= item.SubGroupName #<\/p><input type='hidden' class='data-id' value='#= item.parentId #' data-summary='#= item.IsSummary #' data-SubGroupId='#= item.SubGroupId #' data-AccountTypeId='#= item.AccountTypeId #' data-SubGroupLineId='#= item.SubGroupLineId #' data-ElementValueId='#= item.ElementValueId #' data-Sequence='#= item.Sequence #' data-id='#= item.id #' data-IsRefRecord='#= item.IsRefRecord #' data-SubGroupId='#= item.SubGroupId #' data-treeid='" + t + "' /><\/div><div style='float:left'><a style='display: #= item.DeleteDisplay #' title='" + VIS.Msg.getMsg("Delete") + "' class='frpt-delete-anchorimg vis vis-mark' ><\/a><a style='display:#= item.EditDisplay #' title='" + VIS.Msg.getMsg("Edit") + "'  class='frpt-edit-anchorimg vis vis-pencil' ><\/a><\/div>" }).data("kendoTreeView") } function uf(n, t, i) { pt.val(VIS.Utility.decodeText(n)); v.val(t); fi = i } function ff(n, i) { i > 0 && t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/DeleteReportGroupsRecord", dataType: "json", data: { isSubGroup: n, id: i }, success: function (n) { n.result; u(!1) } }) } function br() { t(this).val().trim().length > 0 ? t(this).removeClass("vis-ev-col-mandatory") : t(this).addClass("vis-ev-col-mandatory") } function fu() { u(!0); uu(); var n = f.find(".frpt-disablegray-img"); n.length > 0 && n.removeClass("frpt-disablegray-img").addClass("frpt-default-img"); gr("") } function kr() { var n, i, t; if (k.css("opacity", "0.5"), k.attr("disabled", !0), b.css("opacity", "0.5"), b.attr("disabled", !0), ti) { for (u(!0), n = e.data("kendoTreeView"), i = f.data("kendoTreeView"), t = 0; t < ti.length; t++) { var r = ti[t], s = n.findByText(r.Name), h = i.findByText(r.Name), o = h.find(".frpt-disablegray-img"); o.length > 0 && o.removeClass("frpt-disablegray-img").addClass("frpt-default-img"); n.remove(s) } n.dataSource.read() } ti = [] } rr.append(tr).append(ir); fr = r.find("#accountDiv_" + i.windowNo); f = r.find("#treeview-left_" + i.windowNo); s = r.find("#cmbC_Element_" + i.windowNo); si = r.find("#btnAddElement_" + i.windowNo); hi = r.find("#btnLoadReportGroup_" + i.windowNo); ai = r.find("#txtSearch_" + i.windowNo); or = r.find("#txtrightSearch_" + i.windowNo); vi = r.find("#txtrightTopSearch_" + i.windowNo); sr = r.find("#btnRightSaveCancel_" + i.windowNo); hr = r.find("#rightbottomDiv_" + i.windowNo); c = r.find("#btnAddNode_" + i.windowNo); l = r.find("#btnAddAccount_" + i.windowNo); ri = r.find("#accountSelectDiv_" + i.windowNo); ui = r.find("#accountCreateDiv_" + i.windowNo); et = r.find("#txtAccountCreate_" + i.windowNo); ci = r.find("#btnAccCancel_" + i.windowNo); li = r.find("#btnAccSave_" + i.windowNo); er = r.find("#accountInnerDiv_" + i.windowNo); w = r.find("#legerCodeDiv_" + i.windowNo); cr = r.find("#cmbAD_Client_ID_" + i.windowNo); lr = r.find("#cmbAD_Org_ID_" + i.windowNo); ot = r.find("#txtLedgerName_" + i.windowNo); st = r.find("#txtLedgerCode_" + i.windowNo); ht = r.find("#cmbAccountType_" + i.windowNo); tt = r.find("#cmbAccountSign_" + i.windowNo); ct = r.find("#isActive_" + i.windowNo); it = r.find("#isSummary_" + i.windowNo); g = r.find("#cmbC_AccountGroup_ID_" + i.windowNo); nt = r.find("#cmbC_AccountSubGroup_ID_" + i.windowNo); lt = r.find("#cmbMasterAccountType_" + i.windowNo); dt = r.find("#txtdefaultCode_" + i.windowNo); yi = r.find("#btnCancel_" + i.windowNo); pi = r.find("#btnSave_" + i.windowNo); wi = r.find("#btnDelete_" + i.windowNo); at = r.find("#legerHeader_" + i.windowNo); var ti = []; vt = r.find("#hgbReportDiv_" + i.windowNo); e = r.find("#treeview-right_" + i.windowNo); ei = r.find("#rptGroupCreateDiv_" + i.windowNo); yt = r.find("#txtrptGroupName_" + i.windowNo); bi = r.find("#btnrptGroupSave_" + i.windowNo); ki = r.find("#btnrptGroupCancel_" + i.windowNo); oi = r.find("#rptGroupSelectDiv_" + i.windowNo); o = r.find("#cmbrptGroup_" + i.windowNo); ni = r.find("#btnAddRptGroup_" + i.windowNo); pt = r.find("#txtrptSubGroup_" + i.windowNo); v = r.find("#cmbrptAccType_" + i.windowNo); di = r.find("#btnrptSubGroupSave_" + i.windowNo); b = r.find("#btnGroupLineSave_" + i.windowNo); k = r.find("#btnGroupLineCancel_" + i.windowNo); h = r.find("#btnImportCOA_" + i.windowNo); rt = r.find("#btnLinkCOA_" + i.windowNo); y = r.find("#btnEditAccount_" + i.windowNo); gi = r.find("#btnAccTypefilter_" + i.windowNo); d = r.find("#btnAddSubGroup_" + i.windowNo); wt = r.find("#divrptSubGroup_" + i.windowNo); ut = r.find("#divAddSubGroup_" + i.windowNo); nr = r.find("#btnrptSubGroupCancel_" + i.windowNo); ft = r.find("#filterDiv_" + i.windowNo); ur = r.find("#btnGroupZoom_" + i.windowNo); vr(!1); ct.prop("checked", !0); su(); wr(); si.on("click", function () { u(!0); et.val(""); et.addClass("vis-ev-col-mandatory"); tu(!0); u(!1) }); c.on("click", function () { u(!0); gt = !0; w.css("display", "block"); at.text(c.val()); ru(); a = 0; it.prop("checked", !0); vr(!0); iu(); nu(c, ar); u(!1) }); l.on("click", function () { u(!0); gt = !0; w.css("display", "block"); ru(); at.text(l.val()); a = 0; it.prop("checked", !1); vr(!0); iu(); nu(l, ar); u(!1) }); pi.on("click", function () { var y = it.prop("checked"), n = f.data("kendoTreeView").select().find(".data-id").val(), i, c, o, r, l, v; if (!n) { VIS.ADialog.info("FRPT_SelectParentNode", !0, "", ""); return } !f.data("kendoTreeView").select().find(".data-id").data("summary") && n > 0 && a == 0 && (i = f.data("kendoTreeView").select().parent(), i && (c = t(i).parent().find(".data-id").val(), n = c, f.data("kendoTreeView").select(t(i).parent()))); u(!0); typeof n == "undefined" && (n = 0); var p = VIS.Env.getCtx().getAD_Client_ID(), w = VIS.Env.getCtx().getAD_Org_ID(), b = s.find("option:selected").val(), e = ot.val().trim(); if (e.length == 0) { VIS.ADialog.info("NameMandatory", !0, "", ""); u(!1); return } if (o = st.val().trim(), o.length == 0) { VIS.ADialog.info("FRPT_LedgerCodeMandatory", !0, "", ""); u(!1); return } var k = ht.find("option:selected").val(), d = tt.find("option:selected").val(), rt = ct.prop("checked"), h = g.find("option:selected").val(); typeof h == "undefined" && (h = -1); r = nt.find("option:selected").val(); typeof r == "undefined" && (r = -1); l = lt.find("option:selected").val(); v = dt.val().trim(); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/SaveElementValue", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ AD_Client_ID: p, AD_Org_ID: w, C_Element_ID: b, ledgerName: e, ledgerCode: o, AccountType: k, AccountSign: d, active: rt, IsSummary: y, C_AccountGroup_ID: h, C_AccountSubGroup_ID: r, MasterAccountType: l, defaultCode: v, parentNodeId: n, treeId: ii, elementValueID: a }), success: function (n) { if (n.result) { if (n.result.text) { if (a == 0) wu(n.result); else { var t = f.data("kendoTreeView"); t.dataItem(t.select()).set("text", VIS.Utility.encodeText(e)) } ar() } else VIS.ADialog.info("FRPT_AccNotSavedCheckDuplicateValue", !0, "", ""); u(!1); gt = !1 } } }) }); yi.on("click", function () { u(!0); eu(); vt.css("display", "block"); gt = !1; vi.css("width", "50%"); u(!1) }); ci.on("click", function () { u(!0); tu(!1); u(!1) }); li.on("click", function () { var n = et.val().trim(); if (n.length == 0) { VIS.ADialog.error(VIS.Msg.getMsg("NameMandatory")); return } u(!0); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountElement/CreateTreeAndElement", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ name: n }), success: function (n) { n.result ? typeof n.result == "number" ? (su(), s.val(n.result), tu(!1), s.trigger("change")) : VIS.ADialog.info(n.result, !0, "", "") : VIS.ADialog.info("FRPT_ElementNotSaveed", !0, "", ""); u(!1) } }) }); wi.on("click", function () { a <= 0 || VIS.ADialog.confirm("FRPT_DeleteIt", !0, "", "Confirm", function (n) { if (n) { u(!0); var i = f.data("kendoTreeView").select(); f.data("kendoTreeView").remove(i); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/DeleteElementValue", dataType: "json", data: { elementValueID: a, treeId: ii }, success: function (n) { n.result && wr(); ar(); u(!1) } }) } }) }); g.on("change", function () { var i, n, t; if (u(!0), nt.empty(), i = g.find("option:selected").val(), n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/GetAccountSubGroup", { AccountGroupId: i }), nt.append(" <option value='-1' ><\/option>"), n != null && n.length > 0) for (t = 0; t < n.length; t++)nt.append(" <option value='" + VIS.Utility.Util.getValueOfInt(n[t].Id) + "' >" + VIS.Utility.encodeText(n[t].Name) + "<\/option>"); u(!1) }); s.on("change", function () { wr(); fu(); kr(); ar() }); hi.on("click", function () { var n = s.find("option:selected").val(); n > 0 && (u(!0), wr(), fu(), kr(), ar(), window.setTimeout(function () { u(!1) }, 500)) }); ai.on("keyup", function () { var i; if (f.find("span.k-in").removeClass("frpt-Span-Search-BGColor"), t.trim(t(this).val()) != "") { var n = this.value.toUpperCase(), r = n.length, u = f.find("span.k-in"); u.each(function () { for (var u = t(this).text(), i = 0; (p = u.toUpperCase().indexOf(n, i)) >= 0;)i = p + r; i > 0 && (t(this).addClass("frpt-Span-Search-BGColor"), t(this).parentsUntil(".k-treeview").filter(".k-item").each(function () { f.data("kendoTreeView").expand(t(this)); t(this).data("search-term", n) })) }); i = f.find(".k-item"); i.each(function () { t(this).data("search-term") != n && f.data("kendoTreeView").collapse(t(this)) }) } }); or.on("keyup", function () { var i; if (e.find("span.k-in").removeClass("frpt-Span-Search-BGColor"), t.trim(t(this).val()) != "") { var n = this.value.toUpperCase(), r = n.length, u = e.find("span.k-in"); u.each(function () { for (var u = t(this).text(), i = 0; (p = u.toUpperCase().indexOf(n, i)) >= 0;)i = p + r; i > 0 && (t(this).addClass("frpt-Span-Search-BGColor"), t(this).parentsUntil(".k-treeview").filter(".k-item").each(function () { e.data("kendoTreeView").expand(t(this)); t(this).data("search-term", n) })) }); i = e.find(".k-item"); i.each(function () { t(this).data("search-term") != n && e.data("kendoTreeView").collapse(t(this)) }) } }); o.on("change", function () { fu(); wr() }); vu(); nf(); ni.on("click", function () { u(!0); yt.val(""); yt.addClass("vis-ev-col-mandatory"); dr(!0); u(!1) }); ki.on("click", function () { dr(!1) }); d.on("click", function () { ut.css("display", "none"); wt.css("display", "block"); uu() }); ur.on("click", function () { var t, i, n; if (u(!0), t = o.find("option:selected").val(), t > 0) try { kt == 0 && (i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/GetWindowNoForZoom", null), i > 0 && (kt = i)); kt > 0 && (n = new VIS.Query, n.addRestriction("FRPT_Group_ID", VIS.Query.prototype.EQUAL, t), n.setRecordCount(1), VIS.viewManager.startWindow(kt, n)) } catch (r) { this.log.log(VIS.Logging.Level.SEVERE, sql, r) } u(!1) }); tr.on("click", function () { ft.css("display", "none"); var n = ""; bt.find("li input[type=checkbox]:checked").each(function () { n = "'" + this.value + "'," + n }); bt.find("li input[type=checkbox]:checked").attr("checked", !1); n.length > 0 && (n = n.replace(/,\s*$/, "")); gr(n); kr() }); ir.on("click", function () { ft.css("display", "none") }); bi.on("click", function () { var n = yt.val().trim(); if (n.length == 0) { VIS.ADialog.error(VIS.Msg.getMsg("NameMandatory")); return } u(!0); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/CreateRptGrop", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ name: n }), success: function (n) { n.result ? (vu(), dr(!1), o.val(n.result), o.trigger("change")) : VIS.ADialog.info("FRPT_GroupNotSaved", !0, "", ""); u(!1) } }) }); di.on("click", function () { var r = o.find("option:selected").val(), n, i; if (r <= 0) { VIS.ADialog.error(VIS.Msg.getMsg("FRPT_SelectGroup")); return } if (n = v.find("option:selected").val(), n == undefined || n == "") { VIS.ADialog.error(VIS.Msg.getMsg("FRPT_SelectAccountType")); return } if (i = pt.val().trim(), i.length == 0) { VIS.ADialog.error(VIS.Msg.getMsg("NameMandatory")); return } u(!0); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/CreateRptSubGrop", dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ groupID: r, subGroupID: fi, name: i, accoutType: n }), success: function (n) { n.result ? (uu(), gr(""), fi = 0, kr()) : VIS.ADialog.info("FRPT_SubGroupNotSaved", !0, "", ""); u(!1) } }) }); nr.on("click", function () { ut.css("display", "block"); wt.css("display", "none") }); b.on("click", function () { t(this).attr("disabled") || gu() }); k.on("click", function () { t(this).attr("disabled") || (kr(), u(!1)) }); y.on("click", function () { t(this).attr("disabled") || (u(!0), w.css("display", "block"), ru(), a = 0, vr(!0), iu(), nu(y), ou(), pr(), u(!1)) }); h.on("click", function () { var n, t; try { if (u(!0), h.css("opacity", "0.5"), h.attr("disabled", !0), n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/GetImportCOA", null), n != null && Object.keys(n).length > 0) { var r = n.Process_ID, f = n.name, e = n.classname, o = n.entityType; r > 0 ? (t = new VIS.ParameterDialog(i.windowNo, i), t.initDialog(r, f, o, e, !1), t.onCloseMain = function (n) { n ? VIS.ADialog.info("FRPT_ProcessWait", !0, "", "") : (h.css("opacity", "1"), h.removeAttr("disabled")) }, t.showDialog(), t = null) : (VIS.ADialog.info("FRPT_ProcessNotFound", !0, "", ""), h.css("opacity", "1"), h.removeAttr("disabled")) } } catch (s) { h.css("opacity", "1"); h.removeAttr("disabled") } u(!1) }); rt.on("click", function () { var t = new n.LinkCoa(i.windowNo, s[0].innerHTML); t.showDialog(); t.onClose = function (n) { n }; t = null }); gi.on("click", function () { ft.css("display", "block") }); pt.on("focusout", br); et.on("focusout", br); ot.on("focusout", br); st.on("focusout", br); yt.on("focusout", br); e.on("click", ".frpt-delete-anchorimg", function (n) { var o; if (n.preventDefault(), VIS.ADialog.ask(VIS.Msg.getMsg("DeleteIt"))) { u(!0); var s = e.data("kendoTreeView"), r = t(this).closest(".k-item").find(".data-id"), h = !1, i = r.data("subgrouplineid"), l = t(this).closest(".k-item").find(".frpt-default-img1"); i == null && l.length == 0 && (h = !0, i = r.data("subgroupid")); var a = f.data("kendoTreeView"), v = a.findByText(s.text(t(this).closest(".k-item"))), c = v.find(".frpt-disablegray-img"); c.length > 0 && c.removeClass("frpt-disablegray-img").addClass("frpt-default-img"); s.remove(t(this).closest(".k-item")); ff(h, i); o = ti.map(function (n) { return n.ElementValueId == r.data("elementvalueid") && n.SubGroupID == i }).indexOf(!0); i == null && (o = ti.map(function (n) { return n.ElementValueId == r.data("elementvalueid") }).indexOf(!0)); ti.splice(o, 1); u(!1) } }); e.on("click", ".frpt-edit-anchorimg", function (n) { n.preventDefault(); u(!0); dr(!1); ut.css("display", "none"); wt.css("display", "block"); var r = e.data("kendoTreeView"), i = r.dataItem(t(this).closest(".k-item")), f = i.SubGroupId, o = i.AccountTypeId, s = i.SubGroupName; uf(s, o, f); u(!1) }) } function pr() { var n = hr.width() - sr.width(); vi.width(n - 10) } var i; this.frame; this.windowNo; i = this; this.log = VIS.Logging.VLogger.getVLogger("AccountingGroup"); var r = t("<div style='width: 100%; height: 100%; background-color: white;'>"), ti = t("<div class='vis-busyindicatorouterwrap'><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"), ii = null, a = 0, ar = 500, f = null, fr = null, s = null, kt = 0, si = null, hi = null, c = null, l = null, ri = null, ui = null, et = null, ci = null, li = null, er = null, ai = null, or = null, vi = null, sr = null, hr = null, w = null, cr = null, lr = null, ot = null, st = null, ht = null, tt = null, ct = null, it = null, g = null, nt = null, lt = null, dt = null, yi = null, pi = null, wi = null, at = null, gt = !1, fi = 0, e = null, vt = null, ei = null, yt = null, bi = null, ki = null, oi = null, o = null, ni = null, pt = null, v = null, di = null, b = null, k = null, h = null, rt = null, y = null, gi = null, d = null, wt = null, ut = null, nr = null, ft = null, tr = t("<span class='vis vis-markx' id='btnfilterGo_" + this.windowNo + "'><\/span>"), ir = t("<span class='vis vis-cross' id='btnfilterCancel_" + this.windowNo + "'><\/span>"), rr = t("<div class='frpt-acc-btns' style='margin-bottom: 5px;'><\/div>"), bt = t("<ul class='frpt-filter-ul'>"), ur = null, rt = null; this.Initialize = function () { vr() }; this.display = function () { }; this.getRoot = function () { return r.append(ti) }; this.lockUI = function () { }; this.unlockUI = function () { }; this.parentcall = function (n) { var i, t, r; n && (i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "AccountingGroup/GetParentcallDetails", null), t = new VIS.ProcessInfo("vrify", i.Process_ID, i.Window_ID, 0), t.setAD_User_ID(VIS.context.getAD_User_ID()), t.setAD_Client_ID(VIS.context.getAD_Client_ID()), r = new VIS.ProcessCtl(this, t, null), r.process(this.windowNo)); h.css("opacity", "1"); h.removeAttr("disabled"); rt.css("opacity", "1"); rt.removeAttr("disabled") }; this.disposeComponent = function () { this.windowNo = null; r = null; ti = null; this.getRoot = null; this.disposeComponent = null; i = null; this.log = null; ar = null; f = null; fr = null; s = null; si = null; hi = null; c = null; l = null; ri = null; ui = null; et = null; ci = null; li = null; er = null; ai = null; w = null; cr = null; lr = null; ot = null; st = null; ht = null; tt = null; ct = null; it = null; g = null; nt = null; lt = null; dt = null; yi = null; pi = null; wi = null; at = null; fi = null; e = null; vt = null; ei = null; yt = null; bi = null; ki = null; oi = null; o = null; ni = null; pt = null; v = null; di = null; b = null; k = null; h = null; rt = null; y = null; gi = null; d = null; wt = null; ut = null; nr = null; ft = null; tr = null; ir = null; rr = null; bt = null; ur = null; kt = null } } i.prototype.init = function (n, t) { this.frame = t; this.windowNo = n; try { var i = this.Initialize() } catch (r) { } this.frame.getContentGrid().append(this.getRoot()) }; i.prototype.dispose = function () { this.disposeComponent(); this.frame && this.frame.dispose(); this.frame = null }; n.AccountingGroup = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i() { function o() { n.load(VIS.Application.contextUrl + "AccountElement/Index/?windowno=" + i, function () { setBusy(!0); s(); setBusy(!1) }) } function s() { function o() { var i = txtName.val().trim(); if (i.length == 0) { VIS.ADialog.error(VIS.Msg.getMsg("FillMandatoryFields")); return } var r = cmbAD_Client_ID.find("option:selected").val(), u = cmbAD_Org_ID.find("option:selected").val(), f = cmbAccounttree.find("option:selected").val(), o = cmbAccountType.find("option:selected").val(); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "AccountElement/SaveElement", dataType: "json", data: { name: i, AD_CLIENT_ID: r, AD_ORG_ID: u, AD_TREE_ID: f, ELEMENTTYPE: o }, success: function (t) { returnValue = t.result; returnValue == "Ok" ? e.onClose() : VIS.ADialog.error(VIS.Msg.getMsg("NotSave")); n.close() } }) } function s(n, t, i, r) { f(cmbAD_Client_ID, n); f(cmbAD_Org_ID, t); f(cmbAccountType, i); f(cmbAccounttree, r) } function f(n, t) { for (var i = 0; i < t.length; i++)n.append(" <option value='" + t[i].Key + "' >" + t[i].Name + "<\/option>"); n.prop("selectedIndex", 0) } function h() { var n = VIS.context.getAD_Client_ID(); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "AccountElement/LoadValues", dataType: "json", data: { AD_CLIENT_ID: n }, success: function (n) { n ? s(n.ClientInfo, n.OrgInfo, n.TreeTypeInfo, n.TreeInfo) : VIS.ADialog.info("LodingProblem", !0, "", "") } }) } r = n.find("#btnSave_" + i); u = n.find("#btnCancel_" + i); cmbAD_Client_ID = n.find("#cmbAD_Client_ID_" + i); cmbAD_Org_ID = n.find("#cmbAD_Org_ID_" + i); txtName = n.find("#txtName_" + i); cmbAccountType = n.find("#cmbAccountType_" + i); cmbAccounttree = n.find("#cmbAccounttree_" + i); h(); r.on("click", function () { setBusy(!0); o(); setBusy(!1) }); u.on("click", function () { n.dialog("close") }) } this.onClose = null; var n = t("<div style='position:relative;'>"), f = t("<div class='vis-busyindicatorouterwrap'><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"), e = this; this.log = VIS.Logging.VLogger.getVLogger("AccountElement"); var i = VIS.Env.getWindowNo(), r = null, u = null; setBusy = function (n) { f.css("display", n ? "block" : "none") }; this.showDialog = function () { o(); var t = 600, i = 325; f.height(i); f.width(t); n.append(f); n.dialog({ modal: !1, resizable: !1, title: VIS.Msg.getMsg("AccountElement"), width: t, height: i, position: { at: "center top", of: window }, close: function () { e.dispose(); n.dialog("destroy"); n = null; e = null } }) }; this.disposeComponent = function () { r && r.off("click"); u && u.off("click"); i = null; this.log = null; r = null; u = null } } i.prototype.dispose = function () { this.disposeComponent() }; n.AccountElement = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function r() { function tg() { ls = t("<div class='vis-busyindicatorouterwrap'><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"); ls[0].style.visibility = "hidden"; ai.append(ls) } function s(n) { ls[0].style.visibility = n ? "visible" : "hidden" } function ig() { var n = t(window).height() * (92 / 100); np = t(' <div class="frpt-frf-top-wrap"><ul class="frpt-frf-report-btns"><li data-type="tab1" class="frpt-frf-selectedtabbtn">' + VIS.Msg.getMsg("FRPT_Report") + '<\/li><li data-type="tab2">' + VIS.Msg.getMsg("FRPT_LinkRowLine") + '<\/li><li data-type="tab3">' + VIS.Msg.getMsg("FRPT_LinkColumnSet") + '<\/li><li data-type="tab4">' + VIS.Msg.getMsg("FRPT_ReportPara") + '<\/li><\/ul><button class="frpt-genrate-report" title=' + VIS.Msg.getMsg("FRPT_GenerateReport") + '><span class="glyphicon glyphicon-export"><\/span><\/button><\/div>'); u = t('<div class="frpt-frf-main-content">'); vl = t('<label class="frpt-frf-titlelabel" style="display: none;"><\/label>'); ai.append(np.append(vl)).append(u); dw = ai.find(".frpt-genrate-report"); rg(); hg(); cg(); wg(0); ug(); st.css("display", "none"); fs.css("display", "none"); vg(); tl(); yg(); r.sizeChanged(); yd = !0 } function rg() { var v, b, o, k, f, i, e, w, d, l, a, g, nt, h, tt; dt = 1; te = t("<div class='frpt-frf-main-contentinner'>"); kh = t("<div class='frpt-frf-maindatasecwrp'>"); v = t("<div class='frpt-frf-maindatasecwrp frpt-frf-maindatarightsecwrp'>"); b = t(" <div class='frpt-frf-middle-wrap'><div class='frpt-left-toggle'><i class='frpt-toggle-btn fa fa-ellipsis-v'><\/i><\/div> <\/div>"); fc = t('<div class="frpt-frf-report-detail">'); fc.append("<h4>" + VIS.Msg.getMsg("FRPT_ReportNames") + "<\/h4>"); nh = t('<div class="ftpr-frf-li-lowerdiv">'); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReports", async: !1, success: function (n) { var f = JSON.parse(n), i, r, u; if (f) if (i = f.Report, kf = f.Types, kc = f.BalanceAggregation, i.length > 0) { for (r = 0; r < i.length; r++)u = VIS.Env.getCtx().getAD_Client_ID() != i[r].ADClientID ? '<div class="ftpr-frf-li-firstDiv frpt-frf-reports-gray" data-id="' + i[r].ID + '" data-tenantid="' + i[r].ADClientID + '"> <div class="frpt-frf-listradiowrap"><input type="radio"><\/div><div>  <div class="frpt-frf-li-firstDiv-spans">' : '<div class="ftpr-frf-li-firstDiv" data-id="' + i[r].ID + '" data-tenantid="' + i[r].ADClientID + '"> <div class="frpt-frf-listradiowrap"><input type="radio"><\/div><div>  <div class="frpt-frf-li-firstDiv-spans">', u += i[r].Active ? '<p class="frpt-frf-para">' + VIS.Utility.encodeText(i[r].Name) + "<\/p>" : '<p class="frpt-frf-para">' + VIS.Utility.encodeText(i[r].Name) + "<\/p>", u += "<\/div>", u += '  <span style="margin-top: 5px;float: left;">' + VIS.Utility.encodeText(i[r].Desc) + "<\/span>", + '</div></div>', nh.append(t(u)); nh.on("click", ".ftpr-frf-li-firstDiv", fb); t(nh.find(".ftpr-frf-li-firstDiv")[0]).trigger("click") } else cp = !0 }, error: function (n) { s(!1); VIS.ADialog.error("FRPT_ReportsNotLoaded"); console.log(n) } }); o = t('<div class="frpt-frf-top-right">'); o.append('<span class="frpt-frf-toptitlespan">' + VIS.Msg.getMsg("FRPT_ReportDetails") + "<\/span>"); k = "<div><label id='FR_labelR_" + r.windowNo + "' style='font-style: italic;visibility: hidden;font-weight: bold;'>Message<\/label><\/div> <div class='frpt-frf-right-icons'><span title=\"" + VIS.Msg.getMsg("FRPT_CopyNewRDetails") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-copy"><\/span><span title="' + VIS.Msg.getMsg("FRPT_AddNewRDetails") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-plus"><\/span><span title="' + VIS.Msg.getMsg("FRPT_Undo") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-ignore gly-rotate-180" style="display:none;"><\/span><span title="' + VIS.Msg.getMsg("FRPT_SaveRDetails") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-save"><\/span><span title="' + VIS.Msg.getMsg("FRPT_DeleteRDetails") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-delete"><\/span><\/div><\/div>'; o.append(t(k)); pl = o.find(".vis-copy"); pl.on("click", fg); yl = o.find(".vis-save"); oi = o.find(".vis-plus"); oi.on("click", sg); wl = o.find(".vis-delete"); ui = o.find(".vis-ignore"); ri = t('<input type="text" maxlength="60" data-placeholder="" placeholder=" ">'); ri.on("change", function (n) { n.originalEvent && (ri.val() != c.Name && (kt = !0), oi.css("display", "none"), ui.css("display", "inherit")); window.setTimeout(function () { ri.val().length > 0 ? (ri.removeClass("vis-ev-col-mandatory"), u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !1)) : (ri.addClass("vis-ev-col-mandatory"), u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !0)) }, 50) }); if (ae = t('<textarea type="text" data-placeholder="" placeholder=" ">'), yu = t('<select placeholder=" " data-placeholder="" >'), $cmbElementTypeHeader = t('<select placeholder=" " data-placeholder="">'), kf) for (f = 0; f < kf.length; f++)kf[f].ID != "AC" && $cmbElementTypeHeader.append(t('<option value="' + kf[f].ID + '">' + VIS.Utility.encodeText(kf[f].Name) + "<\/option>")); if (kc) for (yu.append(t('<option value="0"><\/option>')), f = 0; f < kc.length; f++)yu.append(t('<option value="' + kc[f].ID + '">' + VIS.Utility.encodeText(kc[f].Name) + "<\/option>")); gt = t('<div class="frpt-frf-rightfrminnerwrp ">'); i = t('<div class="input-group vis-input-wrap">'); e = t('<div class="vis-control-wrap">'); gt.append(t('<div class="frpt-frf-form-data" style="width: 100%; margin-top: 15px;">').append(i)); i.append(e); e.append(ri).append(t('<label class="frpt-mandatory-star">' + VIS.Msg.translate(VIS.Env.getCtx(), "Name") + "<\/label>")); i = t('<div class="input-group vis-input-wrap">'); e = t('<div class="vis-control-wrap">'); gt.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(i)); i.append(e); e.append(ae).append(t("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Description") + "<\/label>")); ky = t("<button class='input-group-text'><i class='vis vis-find' title='" + VIS.Msg.getMsg("FRPT_GoToWindow") + "'><\/i><\/button>"); var i = t('<div class="input-group vis-input-wrap">'), e = t('<div class="vis-control-wrap">'), y = t('<div class="input-group-append">'), p = t('<div class="frpt-frf-form-data frpt-frf-typenotinclude">').append(i); i.append(e); i.append(y); e.append(yu).append(t("<label>" + VIS.Msg.getMsg("FRPT_BalanceAggrigation") + "<\/label>")); y.append(ky); od = p; pd = yu; wd = p; var i = t('<div class="input-group vis-input-wrap">'), e = t('<div class="vis-control-wrap">'), y = t('<div class="input-group-append">'), it = t('<div class="frpt-frf-form-data frpt-frf-typenotinclude" style="padding-right: 0; padding-left: 5px; ">').append(i); i.append(e); i.append(y); e.append($cmbElementTypeHeader).append(t("<label>" + VIS.Msg.getMsg("FRPT_TypeNotInclude") + "<\/label>")); gt.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(p).append(it)); l = t("<div class='input-group vis-input-wrap frpt-precision-pdright mb-0'>"); a = t("<div class='vis-control-wrap'>"); l.append(a); w = t("<label class='frpt-mandatory-star'>"); d = new VIS.Controls.VNumTextBox("StdPrecision", !1, !1, !0, VIS.DisplayType.Integer, 3); ct = d.getControl().attr("placeholder", " ").attr("data-placeholder", ""); w.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_Precision")); a.append(ct).append(w); gt.append(t('<div class="frpt-frf-form-data">').append(l)); l = t("<div class='input-group vis-input-wrap mb-0'>"); a = t("<div class='vis-control-wrap'>"); l.append(a); g = new VIS.Controls.VNumTextBox("FRPT_NameColumnAfterIndex", !1, !1, !0, VIS.DisplayType.Integer, 3); iu = g.getControl().attr("placeholder", " ").attr("data-placeholder", ""); a.append(iu).append(t("<label>" + VIS.Msg.getMsg("FRPT_NameColumnAfterIndex") + "<\/label>")); gt.append(t('<div class="frpt-frf-form-data">').append(l)); of = t(' <input type="checkbox" class="frpt-checkbox-align">'); gt.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(of).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_IsNotUseAcctPrecision") + "<\/label> <\/div>")); ys = t(' <input type="checkbox" class="frpt-checkbox-align">'); gt.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(ys).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_MergeDescWithName") + "<\/label> <\/div>")); vr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RowLineFormatting"), undefined, us); pr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SubGroupLineFormatting"), undefined, us); yr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SourceLineFormatting"), undefined, us); wr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TrxLineFormatting"), undefined, us); kr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_DGLineFormatting"), undefined, us); ef = t(' <input type="checkbox">'); sh = t(' <input type="checkbox">'); hh = t(' <input type="checkbox">'); so = t(' <input type="checkbox" class="frpt-checkbox-align">'); ho = t(' <input type="checkbox" class="frpt-checkbox-align">'); oo = t(' <input type="checkbox" float: left;>'); gt.append(t('<div class="frpt-frf-check-wrap">').append(ef).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "ListSources") + "<\/label> <\/div>")); gt.append(t('<div class="frpt-frf-check-wrap">').append(sh).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ListSubGroup") + "<\/label> <\/div><\/br>")); gt.append(t('<div class="frpt-frf-check-wrap">').append(hh).append("<label>" + VIS.Msg.getMsg("FRPT_ListDesc") + "<\/label> <\/div><\/br>")); co = t(' <input type="checkbox" class="frpt-checkbox-align">'); gt.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(co).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RepeatHeader") + "<\/label> <\/div>")); gt.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(so).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SuppressLine") + "<\/label> <\/div>")); gt.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(ho).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SuppressLineAfterCF") + "<\/label> <\/div>")); gt.append(t('<div class="frpt-frf-check-wrap">').append(oo).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "IsActive") + "<\/label> <\/div>")); nt = t("<div class='frpt-frf-form-data frpt-frf-accordiontitlewrp' id='reportColorcontrolsHeaderDiv_" + r.windowNo + "'><span id='reportColorControlsHeaderSpan_" + r.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-right-arrow'><\/span><label>" + VIS.Msg.getMsg("FRPT_RowFormatting") + " <\/label><\/div>"); gt.append(nt); h = t("<div id='reportHeaderDisplayControlsDiv_" + r.windowNo + "' class='frpt-frf-formlineformattingwrp' style='display:none'>"); h.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(vr.getControl())); h.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(pr.getControl())); h.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(yr.getControl())); h.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(wr.getControl())); h.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(kr.getControl())); h.append(t("<\/div>")); gt.append(h); gt.append(t("<\/div>")); kh.append(fc).append(nh); v.append(o); v.append(gt); te.append(kh).append(b).append(v); u.append(te); nh.height(kh.height() - fc.height()); tt = t(window).height() - 208; gt.css({ height: tt }); cp == !0 && oi.trigger("click"); kh.resizable({ handles: "e", minWidth: 200, maxWidth: 950, resize: function (n, i) { var r = i.size.width; r > 197 && v.width(t(document).width() - (r + 27)) } }) } function ug() { var n, i; es = t("<div style='height:100%;margin:10px'>"); sl = t(" <div class='frpt-frf-grid'>"); n = t("<div style='display:inherit;height:20px;flex: 1;'><\/div>"); uv = t('<label style="float:right;font-style:italic;">' + VIS.Msg.getMsg("RecordSaved") + "<\/label>"); uv.css("visibility", "hidden"); n.append(uv); es.append(sl); i = t("<div style=''><\/div>"); tv = t(' <span title="' + VIS.Msg.getMsg("Save") + '"  class="frpt-fr-addRepline-icon">' + VIS.Msg.getMsg("Save") + "<\/span>"); es.append(t('<div class="frpt-frf-top-right">').append(n).append(tv)); u.append(es); t("#formBusy_" + r.windowNo).remove(); t("#formBusy_" + r.windowNo).css("visibility", "hidden"); ai.css("background-color", "#ffffff") } function h(n, t, i) { t != "undefined" && t.text(VIS.Msg.getMsg(n)); t.css("visibility", "visible"); i && t.css("color", i); window.setTimeout(function () { t != "undefined" && t.css("visibility", "hidden") }, 3e3) } function fb() { var u, n, i; VIS.Env.getCtx().getAD_Client_ID() != gl && (kt = !1, ui && ui.css("display", "none")); u = ot; s(!0); n = t(this); sb(); uy = n; i = n.parent().find(".frpt-whitepara"); i.removeAttr("style"); i.removeClass(".frpt-whitepara"); ot = n.data("id"); dh.setContext(r.windowNo, "PA_ReportID", ot); t(this).siblings("div").removeClass("ftpr-frf-li-firstDiv-selected"); t(this).addClass("ftpr-frf-li-firstDiv-selected"); t(t(t(this).siblings("div")).find("input")).prop("checked", !1); t(t(this).find("input")).prop("checked", !0); vp = !0; yp = !0; fy = !0; gl = n.data("tenantid"); vl.text(t(this).find(".frpt-frf-para").text()); kt ? oh = u : (wp(), oh = ot) } function na(n) { n == !0 ? (yl.css("opacity", "1"), wl.css("opacity", "1"), gt.find("input, select,textarea").attr("disabled", !1), dl = !0, vr.setReadOnly(!1), yr.setReadOnly(!1), pr.setReadOnly(!1), wr.setReadOnly(!1), kr.setReadOnly(!1)) : (yl.css("opacity", "0.5"), wl.css("opacity", "0.5"), gt.find("input, select,textarea").attr("disabled", !0), dl = !1, vr.setReadOnly(!0), yr.setReadOnly(!0), pr.setReadOnly(!0), wr.setReadOnly(!0), kr.setReadOnly(!0)) } function pp() { if ((pl.css("display", "inherit"), VIS.Env.getCtx().getAD_Client_ID() == te.find(".ftpr-frf-li-firstDiv-selected").attr("data-tenantid") || dl != !1) && uw()) { u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !1); dh.setContext(ot, "FRPT_IsRepeatHeader", co.prop("checked")); dh.setContext(ot, "ColumnAfterIndex", iu.val()); dh.setContext(ot, "FRPT_IsListSource", ef.prop("checked")); s(!0); var n = { Name: VIS.Utility.encodeText(ri.val()), Desc: VIS.Utility.encodeText(ae.val()), Precision: of.is(":checked") && ct.val() != null && ct.val() != "" && ct.val() >= 0 ? ct.val() : -1, Active: oo.prop("checked"), ListSubGroup: sh.prop("checked"), ListDesc: hh.prop("checked"), ListSource: ef.prop("checked"), SuppressLine: so.prop("checked"), SuppressLineAfterCF: ho.prop("checked"), MergeDescWithName: ys.prop("checked"), ColumnAftIndex: VIS.Utility.encodeText(iu.val()), IsRepeatHeader: co.prop("checked"), IsNotUseAcct: of.prop("checked"), RRowLineFormatting: VIS.Utility.encodeText(vr.getValue()), RSourceLineFormatting: VIS.Utility.encodeText(yr.getValue()), RSubColumn: VIS.Utility.encodeText(pr.getValue()), RTrxLineFormatting: VIS.Utility.encodeText(wr.getValue()), RDGLineFormatting: VIS.Utility.encodeText(kr.getValue()), BalanceAggregation: VIS.Utility.encodeText(yu.val()), ID: kt ? oh : ot, ElementType: VIS.Utility.encodeText($cmbElementTypeHeader.val()) }; t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveReportDetails", async: !1, data: n, success: function (n) { var e = JSON.parse(n), i, r, f; if (e == 0) h("RecordNotSaved", eo, "red"); else { if (kt = !1, c.reportID = ot, c.Name = ri.val(), c.BalanceAggrigation = yu.val(), c.Desc = ae.val(), c.Precision = ct.val(), c.Active = oo.prop("checked"), c.ListSource = ef.prop("checked"), c.ListSubGroup = sh.prop("checked"), c.ListDesc = hh.prop("checked"), c.SuppressLine = so.prop("checked"), c.SuppressLineAfterCF = ho.prop("checked"), c.MergeDescWithName = ys.prop("checked"), c.ColumnAftIndex = iu.val(), c.IsRepeatHeader = co.prop("checked"), c.IsNotUseAcct = of.prop("checked"), c.RRowLineFormatting = vr.getValue(), c.RSourceLineFormatting = yr.getValue(), c.SubColumn = pr.getValue(), c.RTrxLineFormatting = wr.getValue(), c.RDGLineFormatting = kr.getValue(), h("RecordSaved", eo, "black"), i = u.find(".ftpr-frf-li-lowerdiv"), oh == 0) { r = VIS.Env.getCtx().getAD_Client_ID() == 0 ? '<div class="ftpr-frf-li-firstDiv frpt-frf-reports-gray" data-id="' + e + '" data-tenantid="' + VIS.Env.getCtx().getAD_Client_ID() + '"> <div class="frpt-frf-listradiowrap"><input type="radio"><\/div><div>  <div class="frpt-frf-li-firstDiv-spans">' : '<div class="ftpr-frf-li-firstDiv" data-id="' + e + '" data-tenantid="' + VIS.Env.getCtx().getAD_Client_ID() + '"><div class="frpt-frf-listradiowrap"><input type="radio"><\/div><div>   <div class="frpt-frf-li-firstDiv-spans">'; r += oo.prop("checked") ? '<p class="frpt-frf-para">' + VIS.Utility.encodeText(ri.val()) + "<\/p>" : '<p class="frpt-frf-para">' + VIS.Utility.encodeText(ri.val()) + "<\/p>"; r += " <\/div>"; r += '  <span style="margin-top: 5px;">' + VIS.Utility.encodeText(ae.val()) + "<\/span>"; + '</div></div>'; i.append(t(r)); i.off("click", ".ftpr-frf-li-firstDiv"); i.on("click", ".ftpr-frf-li-firstDiv", fb); t(i.find(".ftpr-frf-li-firstDiv")[i.find(".ftpr-frf-li-firstDiv").length - 1]).trigger("click"); vl.text(ri.val()) } else oo.prop("checked") ? uy.find(".frpt-frf-para").addClass("frpt-whitepara") : uy.find(".frpt-frf-para").addClass("frpt-grayepara"); f = i.find("[data-id='" + oh + "']"); f && (f.find("p").text(ri.val()), f.find("span").text(ae.val())) } kt = !1; oi.css("display", "inherit"); ui.css("display", "none"); s(!1) }, error: function (n) { h("RecordNotSaved", eo, "red"); console.log(n); s(!1) } }) } } function fg() { if (of.is(":checked") && ct.val().trim().length <= 0) { VIS.ADialog.error("FRPT_PrecisionMandatory"); ct.addClass("vis-ev-col-mandatory"); return } var n = t('<div class="frpt-fr-reportHeader-Copy vis-formouterwrpdiv"> '), i = t('<div class="frpt-copy-topfieldswrp" style="margin-top: 5px;"> '), r = t('<input type="text">'); n.append(i); i.append(t('<div class="frpt-fr-copyReport-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap" > ').append(r).append(" <label> " + VIS.Msg.getMsg("FRPT_ReportName") + " <\/label > "))); ps = new VIS.ChildDialog; ps.setContent(n); ps.setTitle(VIS.Msg.getMsg("FRPT_CopyReport")); ps.setHeight(190); ps.setWidth("25%"); ps.setEnableResize(!1); ps.setModal(!0); ps.show(); ps.onOkClick = function () { let n = r.val(); if (n == "") { VIS.ADialog.error("FRPT_DefineCopyReportName"); return } kt && pp(); s(!0); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/CopyFinancialReport", async: !0, data: { PA_Report_ID: ot, ReportName: n }, success: function (t) { var i = JSON.parse(t); if (i.toLowerCase().indexOf("success") >= 0) { s(!1); VIS.ADialog.info("FRPT_CopiedReport"); c = {}; let t = i.substring(7); eg(n, t) } else s(!1), VIS.ADialog.error("", !0, i, "") }, error: function (n) { VIS.ADialog.error("FRPT_ErrorduringCopyReport"); console.log(n); s(!1) } }) } } function eg(i, r) { var f = u.find(".ftpr-frf-li-lowerdiv"), e; e = VIS.Env.getCtx().getAD_Client_ID() == 0 ? '<div class="ftpr-frf-li-firstDiv frpt-frf-reports-gray" data-id="' + r + '" data-tenantid="' + VIS.Env.getCtx().getAD_Client_ID() + '"> <div class="frpt-frf-listradiowrap"><input type="radio"><\/div><div>  <div class="frpt-frf-li-firstDiv-spans">' : '<div class="ftpr-frf-li-firstDiv" data-id="' + r + '" data-tenantid="' + VIS.Env.getCtx().getAD_Client_ID() + '"><div class="frpt-frf-listradiowrap"><input type="radio"><\/div><div>   <div class="frpt-frf-li-firstDiv-spans">'; e += '<p class="frpt-frf-para">' + VIS.Utility.encodeText(i) + "<\/p>"; e += " <\/div>"; + '</div></div>'; f.append(t(e)); vr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RowLineFormatting"), undefined, us); pr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SubGroupLineFormatting"), undefined, us); yr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SourceLineFormatting"), undefined, us); wr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TrxLineFormatting"), undefined, us); kr = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_DGLineFormatting"), undefined, us); f.find(".ftpr-frf-li-firstDiv").removeClass("ftpr-frf-li-firstDiv-selected"); t(f.find(".ftpr-frf-li-firstDiv")[f.find(".ftpr-frf-li-firstDiv").length - 1]).addClass("ftpr-frf-li-firstDiv-selected"); t(f.find(".ftpr-frf-li-firstDiv-selected")).trigger("click") } function og() { VIS.Env.getCtx().getAD_Client_ID() == te.find(".ftpr-frf-li-firstDiv-selected").attr("data-tenantid") && ot > 0 && VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && (s(!0), t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteReportDetails", data: { id: ot }, success: function (n) { var f = JSON.parse(n), r, i; f < 1 ? h("FRPT_RecordNotDeleted", eo, "red") : (h("FRPT_RecordDeleted", eo, "black"), kt = !1, c = {}, u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !1), r = u.find(".ftpr-frf-li-lowerdiv"), uy.remove(), i = r.find(".ftpr-frf-li-firstDiv"), i.length > 0 && t(i[0]).trigger("click")); s(!1) }, error: function (n) { h("FRPT_RecordNotDeleted", eo, "red"); console.log(n); s(!1) } })) }) } function sg() { na(!0); dl == !0; gl = VIS.Env.getCtx().getAD_Client_ID(); yl.css("opacity", "1"); wl.css("opacity", "1"); ot = 0; oh = 0; oi.css("display", "none"); ui.css("display", "inherit"); pl.css("display", "none"); ri.val(""); ri.addClass("vis-ev-col-mandatory"); ae.val(""); ct.val(""); ct.attr("disabled", !0); $cmbElementTypeHeader.val(""); yu.val(vw); oo.prop("checked", !0); ef.prop("checked", !1); sh.prop("checked", !1); hh.prop("checked", !1); so.prop("checked", !1); ho.prop("checked", !1); ys.prop("checked", !1); iu.val(""); co.prop("checked", !1); of.prop("checked", !1); ri.trigger("keydown"); vr.setValue("-1"); yr.setValue("-1"); pr.setValue("-1"); wr.setValue("-1"); kr.setValue("-1"); u.find("#reportHeaderDisplayControlsDiv_" + r.windowNo).css("display", "none"); u.find("#reportColorControlsHeaderSpan_" + r.windowNo).addClass("frpt-right-arrow"); u.find("#reportColorControlsHeaderSpan_" + r.windowNo).removeClass("frpt-down-arrow"); u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !0) } function hg() { var w = t(window).height() * (92 / 100), h, o, n, s, f, i, l, a, v; bc = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "PA_ReportColumn_ID", 0, !1, "PA_ReportColumn.PA_REPORTCOLUMNSET_ID IN (SELECT PA_REPORTCOLUMNSET_ID FROM PA_REPORT WHERE PA_REPORT_ID=@PA_ReportID@) AND PA_ReportColumn.IsActive = 'Y'"); h = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetPostingTypeReferenceID"); rp = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", VIS.Utility.Util.getValueOfInt(h.AD_Reference_ID), !0); i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDataReferenceID", { referenceName: "FRPT_PrintValueRef" }); printValueLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", i, !0); i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDataReferenceID", { referenceName: "C_ElementValue AccountType" }); accountTypeLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", i, !0); st = t("<div style='height:100%' >"); var c = t(" <div class='frpt-frf-left-wrap'> <div class='frpt-frf-rpt-line'> <div class='frpt-frf-rptlineleftopfields'><div class='input-group vis-input-wrap'><div class='vis-control-wrap'>  <select id='FR_cmbReportLineSet_" + r.windowNo + "' ><\/select> <input type='text' data-placeholder='' placeholder=' ' id='FR_txtReportLineSet_" + r.windowNo + "' maxlength=" + hc("PA_ReportLineSet", "Name") + " style='float:left;display:none;'> <label class='frpt-mandatory-star'>" + VIS.Msg.getMsg("FRPT_LinkRowLine") + " <\/label><\/div><\/div><\/div><div class='frpt-frf-ac-icons' > <span title='" + VIS.Msg.getMsg("FRPT_AddRep") + "' id='btnAddReportLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-plus frpt-pointer'><\/span>  <span title='" + VIS.Msg.getMsg("FRPT_Undo") + "' id='btnUndoReportLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-ignore gly-rotate-180 frpt-pointer' style='display:none;'><\/span>  <span title='" + VIS.Msg.getMsg("FRPT_SaveRep") + "' id='btnSaveReportLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-save frpt-pointer' style='display:none' ><\/span>  <span title='" + VIS.Msg.getMsg("FRPT_EditRep") + "' id='btnEditReportLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-edit frpt-pointer' ><\/span>  <span title='" + VIS.Msg.getMsg("Delete") + "' id='btnDeleteReportLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-delete frpt-pointer'><\/span>  <\/div> <\/div> <div class='frpt-frf-report-detail'> <h4>" + VIS.Msg.getMsg("FRPT_ReportLineDetail") + " <\/h4> <ul size='5' style='overflow:auto' id='ulReportLine_" + r.windowNo + "' ><\/ul> <\/div>"), y = t(" <div class='frpt-frf-middle-wrap'><div class='frpt-left-toggle'><i class='frpt-toggle-btn fa fa-ellipsis-v'><\/i><\/div> <\/div>"), e = t("<div class='frpt-frf-right-wrap'>"), p = t("<div class='frpt-frf-top-right'><span title='" + VIS.Msg.getMsg("FRPT_AddRLine") + "' id='btnAddReportLine_" + r.windowNo + "' class='frpt-fr-addRepline-icon' >" + VIS.Msg.getMsg("FRPT_AddRLine") + "<\/span> <div class='frpt-frf-check-wrap frpt-marginleft'> <input type='checkbox' id='FR_chkPrint" + r.windowNo + "' checked='false' ><\/input> <label>" + VIS.Msg.getMsg("Print") + " <\/label> <\/div><div><label id='FR_labelSaveRL_" + r.windowNo + "' style='font-style: italic;visibility: hidden;font-weight: bold;'>Message<\/label><\/div><div class='frpt-frf-right-icons'><span title=\"" + VIS.Msg.getMsg("FRPT_Undo") + '" class="frpt-frf-btns frpt-undoLineSet frpt-glyphicons-deminsions vis vis-ignore gly-rotate-180" id="btnUndoReportLineSet1_' + r.windowNo + '" style="display:none;"><\/span> <span id=\'FR_btnPrevReportLine_' + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-arrow-up' title='" + VIS.Msg.getMsg("Previous") + "' ><\/span> <span id='FR_btnNextReportLine_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-arrow-down' title='" + VIS.Msg.getMsg("Next") + "' ><\/span> <span id='FR_btnSaveReportLine_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-save' title='" + VIS.Msg.getMsg("Save") + "' ><\/span> <span title='" + VIS.Msg.getMsg("Delete") + "' id='btnDeleteReportLine_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-delete'><\/span><\/div><\/div>"); e.append(p); o = t("<div id='FRPT_ReportLineRightDiv_" + r.windowNo + "' style='overflow-y:auto;overflow-x:hidden;width:100%;float:left;height:90%; padding-left: 15px;'>"); n = t("<div class='frpt-frf-form-wrap'> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='text' maxlength=" + hc("PA_ReportLine", "Name") + " id='FR_txtHeaderLabel_" + r.windowNo + "' data-placeholder='' placeholder=' '> <label class='frpt-mandatory-star'>" + VIS.Msg.getMsg("FRPT_HeaderLabel") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-marginleft' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='text' maxlength=100 id='FR_txtPrintLabel_" + r.windowNo + "' data-placeholder='' placeholder=' '> <label>" + VIS.Msg.getMsg("FRPT_PrintLabel") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='number' min='0' maxlength=" + hc("PA_ReportLine", "SeqNo") + " id='FR_txtSeqNo_" + r.windowNo + "' data-placeholder='' placeholder=' '> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "SeqNo") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='FR_cmbLineType_" + r.windowNo + "'><\/select> <label class='frpt-mandatory-star'>" + VIS.Msg.translate(VIS.Env.getCtx(), "LineType") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-fr-RLine-segment ' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='FR_cmbPostingType_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "PostingType") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-fr-Type frpt-marginleft' style='display:none'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='FR_cmbType_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "ElementType") + " <\/label> <\/div><\/div><\/div><div class='frpt-frf-form-data frpt-marginleft'  id='rlfr_generateControl_" + r.windowNo + "'><\/div> <div class='frpt-frf-form-data frpt-fr-LinkWith'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='FR_cmbLinkWith_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_LinkWith") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-fr-groupName frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='FR_cmbGroupName_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.getMsg("FRPT_GroupName") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-fr-NullableType frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap' style='z-index:2 !important'><div class= 'multiselect'><div id='selectBox" + r.windowNo + "'  class='selectBox'><input type='text' id='selectedValue" + r.windowNo + "'><i class='fa fa-caret-down frpt-frf-downarrow' aria-hidden='true'><\/i><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_NullableDimension") + " <\/label><div class='overSelect'><\/div><\/div><div id='checkboxes' class='checkboxes" + r.windowNo + "'><\/div><\/div><\/div><\/div><\/div> <div class='frpt-frf-form-data' id='ignoreColumnCF_" + r.windowNo + "'> <\/div> <div class='frpt-frf-form-data' id='horizontalLine_" + r.windowNo + "'> <\/div><div class='input-group' style='width:100%;'> <div class='frpt-frf-check-wrap frpt-fr-chkFormatSubGroupLines' style='width:25%;'> <input type='checkbox' id='FR_chkListSources_" + r.windowNo + "'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ListSources") + " <\/label> <\/div> <div class='frpt-frf-check-wrap frpt-fr-chkFormatSubGroupLines frpt-marginleft' style='width:25%;'> <input type='checkbox' id='FR_chkRLActive_" + r.windowNo + "'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "IsActive") + " <\/label> <\/div> <div class='frpt-frf-check-wrap frpt-fr-chkFormatSubGroupLines' style='width:25%;'> <input type='checkbox' id='FR_chkIgnoreSuppressLine_" + r.windowNo + "'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_IgnoreSuppressLine") + " <\/label> <\/div><\/div> <div class='frpt-frf-check-wrap frpt-fr-chkFormatSubGroupLines' style='width:50%;'> <input type='checkbox' id='FR_chkPrintLineOnName_" + r.windowNo + "'><label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_PrintLineOnName") + " <\/label> <\/div><\/div><div class='frpt-frf-form-data frpt-frf-form-data-alldimension  frpt-frf-accordiontitlewrp' id='reportLineAllDimensionControlsDiv_" + r.windowNo + "' style='display:none'><span id='reportLineAllDimensionControlsHeaderSpan_" + r.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-right-arrow'><\/span><label>" + VIS.Msg.getMsg("FRPT_AllDimension") + " <\/label><\/div><div id='reportLineDisplayAllDimensionControlsDiv_" + r.windowNo + "' class='frpt-frf-formlineformattingwrp-alldimension' style='display:none'><div class='frpt-frf-rowdata-alldimension' id='rlrowalldimensionControl'><\/div><\/div><div class='frpt-frf-form-data  frpt-frf-accordiontitlewrp' id='reportLineColorControlsDiv_" + r.windowNo + "'><span id='reportLineColorControlsHeaderSpan_" + r.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-right-arrow'><\/span><label>" + VIS.Msg.getMsg("FRPT_RowFormatting") + " <\/label><\/div><div id='reportLineDisplayControlsDiv_" + r.windowNo + "' class='frpt-frf-formlineformattingwrp frpt-rowFormatting' style='display:none'> <div class='frpt-frf-form-data' id='rlrowline'> <\/div> <div class='frpt-frf-form-data frpt-marginleft' id='rlsubgroupline'> <\/div> <div class='frpt-frf-form-data' id='rlsourceline'> <\/div> <div class='frpt-frf-form-data frpt-marginleft' id='rltrxline'> <\/div><div style='width:100%;float: left;'> <div class='frpt-frf-form-data' id='rlDGline'><\/div><\/div><\/div><\/div>"); sv = t('<div class="input-group vis-input-wrap">'); f = t("<div class='vis-control-wrap'>"); s = t("<div class='input-group-append'>"); hv = t("<label>"); sf = new VIS.Controls.VTextBoxButton("PA_ReportColumn_ID", !1, !1, !0, VIS.DisplayType.MultiKey, bc); hp = sf.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); hv.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_IgnoreColumnFormat")); f.append(hp).append(hv); s.append(sf.getBtn(0)).append(sf.getBtn(1)); sv.append(f).append(s); n.find("#ignoreColumnCF_" + r.windowNo).append(sv); sf.fireValueChanged = ntt; f = t("<div class='vis-control-wrap'>"); fv = t('<div class="input-group vis-input-wrap">'); ev = t("<label>"); i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDataReferenceID", { referenceName: "FRPT_HorizontalLineRef" }); fp = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", i, !0); wf = new VIS.Controls.VComboBox("FRPT_HorizontalLine", !1, !1, !0, fp); ep = wf.getControl().attr("placeholder", " ").attr("data-placeholder", ""); ev.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_HoriontalLine")); f.append(ep).append(ev); fv.append(f); n.find("#horizontalLine_" + r.windowNo).append(fv); wf.fireValueChanged = htt; n.find("#rlrowline").append(uu.getControl()); n.find("#rlsubgroupline").append(fu.getControl()); n.find("#rlsourceline").append(eu.getControl()); n.find("#rltrxline").append(ou.getControl()); n.find("#rlDGline").append(au.getControl()); by = t("<div class='frpt-frf-form-data' style='border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(97, 99, 100);width: 100%;display: flex;justify-content: space-between;'><label style='float: left;margin-top: 4px;margin-bottom: 3px;'>" + VIS.Msg.getMsg("FRPT_FormulaGrid") + "<\/label><span class='frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-view' style='font-size: 15px;text-decoration: underline;margin-top: 4px;margin-bottom: 3px;;' type='submit' id='VF_ViewFormula_" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_ViewFormula") + "<\/span>"); l = t("<div class='frpt-frf-form-data frpt-frf-accordiontitlewrp' id='reportLinePTGridDiv_" + r.windowNo + "'><span id='reportLinePTGrid_" + r.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-down-arrow'><\/span> <label>" + VIS.Msg.getMsg("FRPT_ColumnPostingType") + " <\/label><\/div>"); ye = t("<div class='frpt-frf-form-wrap' style='width: 100%; display: inherit;padding:0;'>"); $divPostingTypeGroup = t("<div  class='frpt-frf-grid-column' style='min-height:200px;width:100%;margin-bottom:10px;'>"); ye.append(l).append($divPostingTypeGroup); a = t("<div class='frpt-frf-form-data' style='border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(97, 99, 100);width: 100%;'><label style='float: left;float: left;width: 80%;margin-top: 4px;margin-bottom: 3px;'>" + VIS.Msg.getMsg("FRPT_LedgerGrid") + "<\/label>"); v = t("<div class='frpt-frf-form-data' style='border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(97, 99, 100);width: 100%;'><label style='float: left;float: left;width: 80%;margin-top: 4px;margin-bottom: 3px;'>" + VIS.Msg.getMsg("FRPT_SubGroupGrid") + "<\/label>"); el = t(" <div class='frpt-frf-grid' style='min-height:430px;width:100%;'>"); vc = t(" <div  class='frpt-frf-grid' style='min-height:430px;width:100%;'>"); yc = t(" <div  class='frpt-frf-grid' style='min-height:430px;width:100%;'>"); nc = t("<div class='frpt-frf-form-wrap' style='width: 100%; display: inherit;padding:0;'>"); ao = t("<div class='frpt-frf-form-wrap' style='width: 100%; display: inherit;padding:0;'>"); bs = t("<div class='frpt-frf-form-wrap' style='width: 100%; display: inherit;padding:0;'>"); nc.append(by).append(yc); ao.append(a).append(el); bs.append(v).append(vc); o.append(n).append(ye).append(ao).append(bs).append(nc); e.append(o); st.append(c).append(y).append(e); u.append(st); c.resizable({ handles: "e", minWidth: 226, maxWidth: 600, resize: function (n, i) { var r = i.size.width; r > 197 && e.width(t(document).width() - (r + 27)) } }) } function cg() { var p = t(window).height() * (92 / 100), c, i, f, l, a; fs = t("<div style='height:100%'>"); var o = t(" <div class='frpt-frf-left-wrap'><div class='frpt-frf-rpt-line'><div class='frpt-frf-rptlineleftopfields'><div class='input-group vis-input-wrap'><div class='vis-control-wrap'>  <select id='fr_cmbreportcolumnset_" + r.windowNo + "'><\/select> <input type='text' id='fr_txtColumncolumnset_" + r.windowNo + "' maxlength=" + hc("PA_ReportColumnSet", "Name") + " style='display:none;float:left'> <label class='frpt-mandatory-star'>" + VIS.Msg.getMsg("FRPT_ReportColumnSet") + " <\/label><\/div><\/div><\/div><div class='frpt-frf-ac-icons' > <span title='" + VIS.Msg.getMsg("FRPT_AddColumn") + "' id='btnaddreportcolumnset_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-plus frpt-pointer'><\/span>  <span title='" + VIS.Msg.getMsg("FRPT_Undo") + "' id='btnundoReportcolumnset_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-ignore gly-rotate-180 frpt-pointer' style='display:none;'><\/span>  <span title='" + VIS.Msg.getMsg("FRPT_SaveRep") + "' id='btnSaveColumnLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-save frpt-pointer' style='display:none' ><\/span>  <span title='" + VIS.Msg.getMsg("FRPT_EditRep") + "' id='btnEditColumnLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-edit frpt-pointer' ><\/span>  <span title='" + VIS.Msg.getMsg("Delete") + "' id='btnDeleteColumnLineSet_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-delete frpt-pointer'><\/span>  <\/div> <\/div> <div class='frpt-frf-report-detail'> <h4>" + VIS.Msg.getMsg("FRPT_ReportColumnDetail") + " <\/h4> <ul size='5' style='overflow:auto'  id='ulreportcolumn_" + r.windowNo + "' ><\/ul> <\/div>"), v = t(" <div class='frpt-frf-middle-wrap'><div class='frpt-left-toggle'><i class='frpt-toggle-btn fa fa-ellipsis-v'><\/i><\/div> <\/div>"), e = t("<div class='frpt-frf-right-wrap-column'>"), y = t("<div class='frpt-frf-top-right'><span title='" + VIS.Msg.getMsg("FRPT_AddColumnLine") + "' id='btnaddreportcolumn_" + r.windowNo + "' class='frpt-fr-addRepline-icon' >" + VIS.Msg.getMsg("FRPT_AddColumnLine") + "<\/span> <div class='frpt-frf-check-wrap frpt-marginleft'> <input type='checkbox' id='FR_chkCPrint" + r.windowNo + "'  checked='false' ><\/input> <label>" + VIS.Msg.getMsg("Print") + " <\/label> <\/div><div><label id='FR_labelRC_" + r.windowNo + "' style='font-style: italic;visibility: hidden;font-weight: bold;'>Message<\/label><\/div><div class='frpt-frf-right-icons'><span title=\"" + VIS.Msg.getMsg("FRPT_Undo") + '" class="frpt-frf-btns frpt-undoLineSet frpt-glyphicons-deminsions vis vis-ignore gly-rotate-180" id="btnUndoReportColumnSet1_' + r.windowNo + '" style="display:none;"><\/span> <span id=\'FR_btnPrevReportColumn_' + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-arrow-up' title='" + VIS.Msg.getMsg("Previous") + "' ><\/span> <span id='FR_btnNextReportColumn_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-arrow-down' title='" + VIS.Msg.getMsg("Next") + "' ><\/span> <span id='fr_btnsavereportcolumn_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-save' title='" + VIS.Msg.getMsg("Save") + "' ><\/span> <span title='" + VIS.Msg.getMsg("Delete") + "' id='btnDeleteColumn_" + r.windowNo + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-delete'><\/span><\/div><\/div>"), s = t("<div id='FRPT_ReportColumnRightDiv_" + r.windowNo + "' style='overflow-y:auto;overflow-x:hidden;width:100%;float:left;height:90%; padding-left: 15px;'>"), h = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"); h.append(f); c = new VIS.Controls.VNumTextBox("StdPrecision", !1, !1, !0, VIS.DisplayType.Integer, 3); wi = c.getControl().attr("placeholder", " ").attr("data-placeholder", ""); f.append(wi).append(t("<label>" + VIS.Msg.getMsg("FRPT_Precision") + "<\/label>")); i = t("<div class='frpt-frf-form-wrap'> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='text' maxlength=" + hc("PA_ReportColumn", "Name") + " id='fr_txtheaderlabel1_" + r.windowNo + "' placeholder=' ' data-placeholder=''> <label class='frpt-mandatory-star'>" + VIS.Msg.getMsg("FRPT_HeaderLabel") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='text' maxlength=100 id='fr_txtprintlabel1_" + r.windowNo + "' placeholder=' ' data-placeholder=''> <label>" + VIS.Msg.getMsg("FRPT_PrintLabel") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='number' min='0'  maxlength=" + hc("PA_ReportColumn", "SeqNo") + " id='fr_txtseqno1_" + r.windowNo + "' placeholder=' ' data-placeholder=''> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "SeqNo") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data' id='printLabelPeriod_" + r.windowNo + "'> <\/div> <div class='frpt-frf-form-data frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbpostingtype1_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "PostingType") + " <\/label> <\/div><\/div><\/div> <div style='display:none' class='frpt-frf-form-data frpt-fr-CLine-segment frpt-fr-budgetDiv'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <Select type='text' id='FR_txtBudget1_" + r.windowNo + "'><\/Select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "GL_Budget_ID") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbDimensionType_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "ElementType") + " <\/label> <\/div><\/div><\/div><div class='frpt-frf-form-data frpt-marginleft' id='fr_generateControl_" + r.windowNo + "'><\/div> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbcolumntype_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "ColumnType") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-CAmountType frpt-marginleft' style='display:none'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbamounttype_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "AmountType") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbTypeNotIncude_" + r.windowNo + "'><\/select> <label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TypeNotInclude") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data' id=rcColumnPrecision> <\/div> <div class='frpt-frf-form-data' style='display:none'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='text' maxlength=" + hc("PA_ReportColumn", "RelativePeriod") + " id='fr_txtrelativeperiod_" + r.windowNo + "' placeholder=' ' data-placeholder='' > <label>" + VIS.Msg.getMsg("FRPT_RelativePeriod") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-txtYearC frpt-marginleft'  style='display:none'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select  id='fr_cmbSeletYear_" + r.windowNo + "'> <option value='C'>" + VIS.Msg.getMsg("FRPT_CurrentYear") + "<\/option> <option value='p'>" + VIS.Msg.getMsg("FRPT_PreviousYear") + "<\/option> <\/select> <label>" + VIS.Msg.getMsg("FRPT_SelectYear") + " <\/label> <\/div><\/div><\/div><div class=\"frpt-frf-groupdiv vis-leftsidebarouterwrap\"> <div class='frpt-frf-form-data frpt-frf-cmbPeriod' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select  id='fr_cmbPeriod_" + r.windowNo + "'> <\/select> <label >" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_Period") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-cmbPeriodType frpt-frf-thirdfourth-control frpt-marginleft' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select   id='fr_cmbPeriodType_" + r.windowNo + "'> <\/select> <label id='lbl_cmbPeriodType_" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_PeriodType") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-txtYear frpt-frf-oneFouth-control frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='number' id='fr_txtYear_" + r.windowNo + "' min='1' placeholder=' ' data-placeholder='' > <label  id='lblYear_" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_Year") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-cmbPeriodGroup' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select  id='fr_cmbPeriodGroup_" + r.windowNo + "'> <\/select> <label >" + VIS.Msg.getMsg("FRPT_PeriodGroup") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-cmbPeriodTypeQ  frpt-frf-thirdfourth-control frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbPeriodTypeQ_" + r.windowNo + "'> <\/select> <label id='frpt_lbl_cmbPeriodTypeQ_" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_TypeOfPeriodGroup") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-cmbPeriodGroupType frpt-marginleft'  style='display:none' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select  id='fr_cmbPeriodGroupType_" + r.windowNo + "'> <\/select> <label id='fr_lblPeriodGroupType_" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_PeriodGroupType") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-cmbPeriodType2  frpt-frf-thirdfourth-control' style='display:none' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <select id='fr_cmbPeriodType2_" + r.windowNo + "'> <\/select> <label>" + VIS.Msg.getMsg("FRPT_To") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-form-data frpt-frf-txtYear2 frpt-frf-oneFouth-control frpt-marginleft' style='display:none' > <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <input type='number' id='fr_txtYear2_" + r.windowNo + "' min='1'> <label>" + VIS.Msg.getMsg("FRPT_Value") + " <\/label> <\/div><\/div><\/div><\/div> <div class='frpt-frf-check-wrap frpt_fr_StartToPeriod'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <label class='vis-ec-col-lblchkbox'> <input type='checkbox' id='FRPT_StartToPeriod" + r.windowNo + "' >" + VIS.Msg.getMsg("FRPT_StartToPeriod") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-check-wrap frpt_fr_PeriodToCurrent frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <label class='vis-ec-col-lblchkbox'> <input type='checkbox' id='FRPT_PeriodToCurrent" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_PeriodToCurrent") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-check-wrap frpt_fr_BeginBal '> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <label class='vis-ec-col-lblchkbox'> <input type='checkbox' id='FRPT_BeginBal" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_AccBegBal") + " <\/label> <\/div><\/div><\/div> <div class='frpt-frf-check-wrap frpt_fr_isActive frpt-marginleft'> <div class='input-group vis-input-wrap'> <div class='vis-control-wrap'> <label class='vis-ec-col-lblchkbox'><input type='checkbox' id='FRPT_RCIsActive" + r.windowNo + "'>" + VIS.Msg.translate(VIS.Env.getCtx(), "IsActive") + " <\/label> <\/div><\/div><\/div><div class='frpt-frf-form-data frpt-frf-accordiontitlewrp' id='reportColumnColorcontrolsDiv_" + r.windowNo + "'><span id='reportcolumnColorControlsSpan_" + r.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-right-arrow'><\/span><label>" + VIS.Msg.getMsg("FRPT_RowFormatting") + " <\/label><\/div><div id='reportColumnDisplayControlsDiv_" + r.windowNo + "' class='frpt-frf-formlineformattingwrp frpt-rowFormatting ' style='float: left; width: 100%;display:none;'> <div class='frpt-frf-form-data' id='rcrowline'> <\/div> <div class='frpt-frf-form-data frpt-marginleft' id=rcsubgroup> <\/div> <div class='frpt-frf-form-data' id='rcsouceline'> <\/div> <div class='frpt-frf-form-data frpt-marginleft' id='rctrxline'> <\/div><div style='float:left;width:100%;'> <div class='frpt-frf-form-data' id='rcdgline'><\/div> <\/div><\/div><div style='padding-right:20px;' class='frpt-frf-form-data frpt-frf-accordiontitlewrp' id='conditionFormattingDiv_" + r.windowNo + "'><span id='conditionFormatting_" + r.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-down-arrow'><\/span> <label>" + VIS.Msg.getMsg("FRPT_ConditionalFormatting") + " <\/label><\/div> <\/div>"); i.find("#rcColumnPrecision").append(h); f = t("<div class='vis-control-wrap'>"); ov = t('<div class="input-group vis-input-wrap">'); l = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDataReferenceID", { referenceName: "FRPT_PrintLabelPeriod" }); op = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", l, !0); ru = new VIS.Controls.VComboBox("FRPT_PrintLabelPeriod", !1, !1, !0, op); sp = ru.getControl().attr("placeholder", " "); f.append(sp).append(t("<label>" + VIS.Msg.getMsg("FRPT_PrintLabelPeriod") + "<\/label>")); ov.append(f); i.find("#printLabelPeriod_" + r.windowNo).append(ov); ru.fireValueChanged = ctt; su = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RowLineFormatting"), undefined, ia); i.find("#rcrowline").append(su.getControl()); hu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SubGroupLineFormatting"), undefined, ia); i.find("#rcsubgroup").append(hu.getControl()); cu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SourceLineFormatting"), undefined, ia); i.find("#rcsouceline").append(cu.getControl()); lu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TrxLineFormatting"), undefined, ia); i.find("#rctrxline").append(lu.getControl()); vu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_DGLineFormatting"), undefined, ia); i.find("#rcdgline").append(vu.getControl()); ir = t("<div class='frpt-frf-form-wrap' style='width: 100%; display: inherit;padding:0;'>"); a = t("<div class='frpt-frf-form-data' style='border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(97, 99, 100);width: 100%;'><label style='float: left;float: left;width: 80%;margin-top: 4px;margin-bottom: 3px;'>" + VIS.Msg.getMsg("FRPT_FormulaGrid") + "<\/label>"); e.append(y); ol = t("<div  class='frpt-frf-grid-column' style='min-height:150px;width:100%;'>"); df = t("<div  class='frpt-frf-grid-column' style='min-height:150px;width:98%;margin-bottom:10px;'>"); ir.append(a).append(ol); s.append(i).append(df).append(ir); e.append(s); fs.append(o).append(v).append(e); u.append(fs); o.resizable({ handles: "e", minWidth: 226, maxWidth: 600, resize: function (n, i) { var r = i.size.width; r > 197 && e.width(t(document).width() - (r + 27)) } }) } function tl(n) { var i = 0; try { rf != null && (rf.destroy(), rf = null) } catch (u) { } oe = []; oe.length == 0 && (VIS.Env.getCtx().getAD_Client_ID() == t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || n == !0 ? (oe.push({ field: "SELECT", caption: VIS.Msg.getMsg("SELECT"), sortable: !1, size: "100px", hidden: !0 }), oe.push({ field: "LedgerName", caption: '<div style="display:inline;"><span class="frpt-glyphicons-deminsions vis vis-plus frpt-glyphicons-deminsions-div" style="font-size:16px;" type="submit" id="FR_AddLinkAccount_' + r.windowNo + '"  ><\/span><\/div>&nbsp;' + VIS.Msg.getMsg("Ledger"), sortable: !1, size: "200px" }), oe.push({ field: "Id", caption: VIS.Msg.getMsg("Id"), sortable: !1, size: "100px", hidden: !0 }), oe.push({ field: "Action", caption: "", sortable: !1, size: "40px", render: function (n) { var t = '<div><span id="frpt-fr-DeleteElement_' + n.Id + '" title="' + VIS.Msg.getMsg("Delete") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-delete frpt-glyphicon-trash frpt-pointer" ><\/span><\/div>'; return i++, t } })) : (oe.push({ field: "SELECT", caption: VIS.Msg.getMsg("SELECT"), sortable: !1, size: "100px", hidden: !0 }), oe.push({ field: "LedgerName", caption: VIS.Msg.getMsg("Ledger"), sortable: !1, size: "200px" }), oe.push({ field: "Id", caption: VIS.Msg.getMsg("Id"), sortable: !1, size: "100px", hidden: !0 }))); rf = el.w2grid({ name: "gridLinkAccount_" + r.windowNo, recordHeight: 40, multiSelect: !1, columns: oe, records: hl }); ce = t("#FR_AddLinkAccount_" + r.windowNo); ce.off("click"); ce.on("click", function () { th() && (a && (lv = !1, ua(), a = !1), r.openAddAccountElementDialog()) }); el.find(".frpt-glyphicon-trash").on("click", function (n) { VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { if (i) { s(!0); var r = t(n.target).attr("id"); r = r.substring(r.lastIndexOf("_") + 1); ag(r); s(!1) } }) }); ku(); s(!1) } function ey(n) { var i = 0; try { uf != null && (uf.destroy(), uf = null) } catch (u) { } no = []; no.length == 0 && (no.push({ field: "GroupName", caption: '<div style="display:inline;"><span class=" frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-plus" style="font-size:16px;" type="submit" id="FR_GroupAccount_' + r.windowNo + '"  ><\/span><\/div>&nbsp' + VIS.Msg.getMsg("FRPT_SubGroupName"), sortable: !1, size: "150px" }), VIS.Env.getCtx().getAD_Client_ID() == t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || n == !0 ? (no.push({ field: "Id", caption: VIS.Msg.getMsg("Id"), sortable: !1, size: "100px", hidden: !0 }), no.push({ field: "Action", caption: "", sortable: !1, size: "40px", render: function (n) { t("#frpt-fr-DeleteGroup_" + i - 1).on("click", function () { VIS.ADialog.info("deleted") }); var r = '<div><span id="frpt-fr-DeleteGroup_' + n.Id + '" title="' + VIS.Msg.getMsg("Delete") + '"  class=" frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-delete frpt-glyphicon-trash frpt-pointer" ><\/span><\/div>'; return i++, r } }), no.push({ field: "Action", caption: "", sortable: !0, size: "40px", render: function (n) { return '<div><span id="frpt-fr-InfoGroup_' + n.Id + '" title="' + VIS.Msg.getMsg("Information") + '"  class=" frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions glyphicon glyphicon-info-sign frpt-glyphicon-info frpt-pointer" ><\/span><\/div>' } })) : (no.push({ field: "Id", caption: VIS.Msg.getMsg("Id"), sortable: !1, size: "100px", hidden: !0 }), no.push({ field: "Action", caption: "", sortable: !0, size: "40px", render: function (n) { return '<div><span id="frpt-fr-InfoGroup_' + n.Id + '" title="' + VIS.Msg.getMsg("Information") + '"  class=" frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions glyphicon glyphicon-info-sign frpt-glyphicon-info frpt-pointer" ><\/span><\/div>' } })), yh = t("<div class='FRPT-popup'><ul><\/ul><\/div>"), sd = yh); uf = vc.w2grid({ name: "gridLinkGroup_" + r.windowNo, recordHeight: 40, multiSelect: !1, columns: no, records: to }); ce = t("#FR_GroupAccount_" + r.windowNo); ce.off("click"); ce.on("click", function () { th() && (a && (lv = !1, ua(), a = !1), hit()) }); vc.find(".frpt-glyphicon-info").on("click", function (n) { s(!0); gw = t(n.target); var i = t(n.target).attr("id"); i = i.substring(i.lastIndexOf("_") + 1); lg(i, n) }); vc.find(".frpt-glyphicon-trash").on("click", function (n) { VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { if (i) { s(!0); var r = t(n.target).attr("id"); r = r.substring(r.lastIndexOf("_") + 1); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteSubGroups", async: !1, data: { id: r, lineID: tt, groupID: ni.val() }, success: function (n) { var t = JSON.parse(n); wk(t); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } }) }); ku() } function lg(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetElementName", async: !1, datatype: "Json", type: "GET", cache: !1, data: { reportSource_ID: n }, success: function (n) { var t = JSON.parse(n), r, i; if (t.length > 0) { if (t[0].Id == "0") yh.find("li").remove(), i = VIS.Msg.getMsg("FRPT_SubGroupNotFound"), yh.find("ul").append("<li>" + i + "<\/li>"); else for (yh.find("li").remove(), r = 0; r < t.length; r++)i = t[r].Value, yh.find("ul").append("<li>" + i + "<\/li>"); gw.w2overlay(yh.clone(!0)) } else { s(!1); return } s(!1) }, error: function (n) { console.log(n) } }) } function ag(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteReportSource", async: !1, datatype: "Json", type: "GET", cache: !1, data: { reportSource_ID: n, LineID: tt }, success: function (n) { var t = JSON.parse(n); oa(t) }, error: function (n) { console.log(n) } }) } function vg() { ph = u.find("#FR_chkListSources_" + r.windowNo); vs = u.find("#FR_chkIgnoreSuppressLine_" + r.windowNo); ch = u.find("#FR_chkPrintLineOnName_" + r.windowNo); bw = by.find("#VF_ViewFormula_" + r.windowNo); bf = u.find("#FR_chkRLActive_" + r.windowNo); k = u.find("#FR_cmbReportLineSet_" + r.windowNo); ht = u.find("#FR_cmbLineType_" + r.windowNo); rt(ht); ur = u.find("#FR_cmbPostingType_" + r.windowNo); rt(ur); fi = u.find("#FR_cmbLinkWith_" + r.windowNo); rt(fi); p = u.find("#FR_cmbType_" + r.windowNo); rt(p); pt = u.find(".checkboxes" + r.windowNo); wy = u.find("#selectBox" + r.windowNo); rh = u.find("#selectedValue" + r.windowNo); nu = u.find("#rlfr_generateControl_" + r.windowNo); rt(nu); ni = u.find("#FR_cmbGroupName_" + r.windowNo); rt(ni); yt = u.find("#FR_labelSaveRL_" + r.windowNo); nt = u.find("#FR_labelRC_" + r.windowNo); eo = u.find("#FR_labelR_" + r.windowNo); we = u.find("#btnAddReportLineSet_" + r.windowNo); ie = u.find("#btnUndoReportLineSet_" + r.windowNo); ft = u.find("#btnUndoReportLineSet1_" + r.windowNo); et = u.find("#btnUndoReportColumnSet1_" + r.windowNo); re = u.find("#btnDeleteReportLine_" + r.windowNo); cf = u.find("#btnDeleteColumn_" + r.windowNo); be = u.find("#btnDeleteReportLineSet_" + r.windowNo); gi = u.find("#FR_txtReportLineSet_" + r.windowNo); nr = u.find("#fr_txtColumncolumnset_" + r.windowNo); ke = u.find("#btnSaveReportLineSet_" + r.windowNo); fl = u.find("#btnEditReportLineSet_" + r.windowNo); de = u.find("#btnDeleteColumnLineSet_" + r.windowNo); lf = u.find("#btnaddreportcolumnset_" + r.windowNo); ue = u.find("#btnundoReportcolumnset_" + r.windowNo); af = u.find("#btnSaveColumnLineSet_" + r.windowNo); os = u.find("#btnEditColumnLineSet_" + r.windowNo); si = u.find("#ulReportLine_" + r.windowNo); li = u.find("#ulreportcolumn_" + r.windowNo); nv = u.find("#btnAddReportLine_" + r.windowNo); ge = u.find("#FR_btnSaveReportLine_" + r.windowNo); ss = u.find("#fr_btnsavereportcolumn_" + r.windowNo); bi = u.find("#FR_btnNextReportLine_" + r.windowNo); hi = u.find("#FR_btnPrevReportLine_" + r.windowNo); vi = u.find("#FR_txtHeaderLabel_" + r.windowNo); rt(vi); fe = u.find("#FR_txtPrintLabel_" + r.windowNo); rt(fe); ee = u.find("#FR_txtSeqNo_" + r.windowNo); rt(ee); ar = u.find("#FR_chkPrint" + r.windowNo); rt(ar); nb = u.find("#reportColorcontrolsHeaderDiv_" + r.windowNo); tb = u.find("#reportLineColorControlsDiv_" + r.windowNo); ib = u.find("#reportColumnColorcontrolsDiv_" + r.windowNo); ub = u.find("#reportLineAllDimensionControlsDiv_" + r.windowNo); ng = u.find("#reportLineAllDimensionControlsHeaderSpan_" + r.windowNo); ap = u.find("#rlrowalldimensionControl"); ki = u.find("#FR_btnNextReportColumn_" + r.windowNo); ci = u.find("#FR_btnPrevReportColumn_" + r.windowNo); b = u.find("#fr_cmbreportcolumnset_" + r.windowNo); sr = u.find("#fr_txtheaderlabel1_" + r.windowNo); rt(sr); le = u.find("#fr_txtprintlabel1_" + r.windowNo); rt(le); as = u.find("#fr_txtseqno1_" + r.windowNo); rt(as); uo = u.find("#FR_txtBudget1_" + r.windowNo); rt(uo); ff = u.find("#fr_cmbpostingtype1_" + r.windowNo); rt(ff); vf = u.find("#fr_cmbamounttype_" + r.windowNo); rt(vf); at = u.find("#fr_cmbcolumntype_" + r.windowNo); rt(at); fo = u.find("#fr_cmbTypeNotIncude_" + r.windowNo); rt(fo); er = u.find("#FR_chkCPrint" + r.windowNo); rt(er); d = u.find("#fr_cmbPeriod_" + r.windowNo); rt(d); w = u.find("#fr_cmbPeriodType_" + r.windowNo); rt(w); g = u.find("#fr_cmbPeriodType2_" + r.windowNo); rt(g); rv = u.find("#lbl_cmbPeriodType_" + r.windowNo); ii = u.find("#fr_cmbPeriodGroup_" + r.windowNo); rt(ii); hr = u.find("#fr_cmbPeriodGroupType_" + r.windowNo); rt(hr); yw = u.find("#fr_lblPeriodGroupType_" + r.windowNo); it = u.find("#fr_cmbPeriodTypeQ_" + r.windowNo); rt(it); pw = u.find("#frpt_lbl_cmbPeriodTypeQ_" + r.windowNo); tr = u.find("#fr_txtYear_" + r.windowNo); rt(tr); tr.trigger("change"); tr.on("keydown", function () { (event.key === "." || event.key === ",") && event.preventDefault() }); ut = u.find("#fr_txtYear2_" + r.windowNo); rt(ut); ut.on("keydown", function () { (event.key === "." || event.key === ",") && event.preventDefault() }); yi = u.find("#FRPT_StartToPeriod" + r.windowNo); rt(yi); pi = u.find("#FRPT_PeriodToCurrent" + r.windowNo); rt(pi); tf = u.find("#FRPT_BeginBal" + r.windowNo); rt(tf); ww = u.find("#btnaddreportcolumn_" + r.windowNo); tp = u.find("#lblYear_" + r.windowNo); br = u.find("#FRPT_RCIsActive" + r.windowNo); gf = u.find("#conditionFormatting_" + r.windowNo); rb = u.find("#conditionFormattingDiv_" + r.windowNo); pf = u.find("#reportLinePTGrid_" + r.windowNo); up = u.find("#reportLinePTGridDiv_" + r.windowNo); v = u.find("#fr_cmbDimensionType_" + r.windowNo); rt(v); cr = u.find("#fr_generateControl_" + r.windowNo); rt(cr) } function us() { kt = !0; ui.css("display", "inherit"); oi.css("display", "none") } function ta() { a = !0; ft.css("display", "inherit") } function ia() { a = !0; et.css("display", "inherit") } function rt(n) { if (n.is(":text")) n.on("keydown", function (n) { n.originalEvent }); else if (n.is(":checkbox")) n.on("click", function (n) { n.originalEvent && (a = !0, ft.css("display", "inherit"), et.css("display", "inherit")) }); else n.on("change", function (n) { n.originalEvent && (a = !0, ft.css("display", "inherit"), et.css("display", "inherit")) }) } function ku() { var n = u.find(".frpt-frf-right-wrap").height() - (u.find(".frpt-frf-top-right").height() + u.find(".frpt-frf-right-icons").height() + u.find(".frpt-frf-form-wrap").height() + 55); u.find(".frpt-frf-grid").css("height", n); rf && rf.resize(); uf && uf.resize(); or && or.resize(); ve && ve.resize() } function eb() { sl.css("height", sl.parent().height() - 75); cs && cs.resize() } function ec() { var n = u.find(".frpt-frf-right-wrap-column"), t = n.height() - (n.find(".frpt-frf-top-right").height() + n.find(".frpt-frf-form-wrap").height() + 35); u.find(".frpt-frf-grid-column").css("height", t); uh && uh.resize() } function ob() { var n = u.find(".frpt-frf-right-wrap-column"), t = n.height() - (n.find(".frpt-frf-top-right").height() + n.find(".frpt-frf-form-wrap").height() + 35); u.find(".frpt-frf-grid-column").css("height", t); fh && fh.resize() } function sb() { if (kt) { if (!uw()) { s(!1); return } VIS.ADialog.confirm("FRPT_Saveit", !0, "", "Confirm", function (n) { n ? (pp(), wp()) : (kt = !1, wp()) }); oi.css("display", "inherit"); ui.css("display", "none") } } function wp() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportDetails", async: !0, data: { id: ot }, success: function (n) { var t = JSON.parse(n); t && (ct.removeClass("vis-ev-col-mandatory"), vl.text(t.Name), ri.val(t.Name), c.reportID = ot, c.Name = t.Name, ae.val(t.Desc), c.Desc = t.Desc, ct.val(t.Precision >= 0 ? t.Precision : ""), c.Precision = t.Precision >= 0 ? t.Precision : "", oo.prop("checked", t.Active), c.Active = t.Active, ef.prop("checked", t.ListSource), c.ListSource = t.ListSource, sh.prop("checked", t.ListSubGroup), c.ListSubGroup = t.ListSubGroup, so.prop("checked", t.SuppressLine), c.SuppressLine = t.SuppressLine, ho.prop("checked", t.SuppressLineAfterCF), c.SuppressLineAfterCF = t.SuppressLineAfterCF, ys.prop("checked", t.MergeDescWithName), c.MergeDescWithName = t.MergeDescWithName, iu.val(t.ColumnAftIndex), c.ColumnAftIndex = t.ColumnAftIndex, co.prop("checked", t.IsRepeatHeader), c.IsRepeatHeader = t.IsRepeatHeader, of.prop("checked", t.IsNotUseAcct), c.IsNotUseAcct = t.IsNotUseAcct, hh.prop("checked", t.ListDesc), c.ListDesc = t.ListDesc, yu.val(t.BalanceAggregation), c.BalanceAggrigation = t.BalanceAggregation, c.RRowLineFormatting = t.RRowLineFormatting, c.RSourceLineFormatting = t.RSourceLineFormatting, c.SubColumn = t.RSubColumn, c.RTrxLineFormatting = t.RTrxLineFormatting, c.RDGLineFormatting = t.RDGLineFormatting, ef.prop("checked") ? (gt.find(".chkListTransctn").css("display", "inherit"), c.ListTransaction = t.ListTransaction) : (gt.find(".chkListTransctn").css("display", "none"), c.ListTransaction = t.ListTransaction), c.ElementType = t.ElementType, $cmbElementTypeHeader.val(t.ElementType)); ri.trigger("keydown"); vr.setValue(t.RRowLineFormatting); yr.setValue(t.RSourceLineFormatting); pr.setValue(t.RSubColumn); wr.setValue(t.RTrxLineFormatting); kr.setValue(t.RDGLineFormatting); VIS.Env.getCtx().getAD_Client_ID() == gl || gl == undefined ? na(!0) : na(!1); (vr.getValue() == "-1" || vr.getValue() == "0" || vr.getValue() == "") && (yr.getValue() == "-1" || yr.getValue() == "0" || yr.getValue() == "") && (pr.getValue() == "-1" || pr.getValue() == "0" || pr.getValue() == "") && (wr.getValue() == "-1" || wr.getValue() == "0" || wr.getValue() == "") && (kr.getValue() == "-1" || kr.getValue() == "0" || kr.getValue() == "") ? (u.find("#reportColorControlsHeaderSpan_" + r.windowNo).addClass("frpt-right-arrow"), u.find("#reportColorControlsHeaderSpan_" + r.windowNo).removeClass("frpt-down-arrow"), u.find("#reportHeaderDisplayControlsDiv_" + r.windowNo).css("display", "none")) : (u.find("#reportColorControlsHeaderSpan_" + r.windowNo).addClass("frpt-down-arrow"), u.find("#reportColorControlsHeaderSpan_" + r.windowNo).removeClass("frpt-right-arrow"), u.find("#reportHeaderDisplayControlsDiv_" + r.windowNo).css("display", "inherit")); window.setTimeout(function () { bp() }, 50); s(!1) }, error: function (n) { VIS.ADialog.error("FRPT_ErrorGettingDetails"); console.log(n); s(!1) } }) } function bp() { of.is(":checked") ? (ct.attr("disabled", !1), ct.val().trim().length <= 0 && (ct.addClass("vis-ev-col-mandatory"), u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !0), u.find(".frpt-frf-listradiowrap").children().prop("disabled", !0))) : (ct.attr("disabled", !0), ct.removeClass("vis-ev-col-mandatory"), ct.val(""), u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !1), u.find(".frpt-frf-listradiowrap").children().prop("disabled", !1)) } function yg() { ub.on("click", function () { sy(u.find("#reportLineDisplayAllDimensionControlsDiv_" + r.windowNo), u.find("#reportLineAllDimensionControlsHeaderSpan_" + r.windowNo)) }); nb.on("click", function () { sy(u.find("#reportHeaderDisplayControlsDiv_" + r.windowNo), u.find("#reportColorControlsHeaderSpan_" + r.windowNo)) }); tb.on("click", function () { sy(u.find("#reportLineDisplayControlsDiv_" + r.windowNo), u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo)) }); ib.on("click", function () { sy(u.find("#reportColumnDisplayControlsDiv_" + r.windowNo), u.find("#reportcolumnColorControlsSpan_" + r.windowNo)) }); up.click(function () { $divPostingTypeGroup.css("display") == "none" ? ($divPostingTypeGroup.css("display", "block"), pf.addClass("frpt-down-arrow"), pf.removeClass("frpt-right-arrow")) : ($divPostingTypeGroup.css("display", "none"), pf.removeClass("frpt-down-arrow"), pf.addClass("frpt-right-arrow")); ku() }); rb.click(function () { df.css("display") == "none" ? (df.css("display", "block"), gf.addClass("frpt-down-arrow"), gf.removeClass("frpt-right-arrow")) : (df.css("display", "none"), gf.removeClass("frpt-down-arrow"), gf.addClass("frpt-right-arrow")); ob() }); bi.on("click", function () { if (!wh) { if (ht.val() == "C" && w2ui["gridLinkRLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", yt, "Red"); return } if (th()) ne(); else return; si.find(".frpt-fr-seletedliItem").closest("li").next().is(":last-child") && (bi.attr("disabled", !0), bi.css("opacity", "0.5")); si.find(".frpt-fr-seletedliItem").closest("li").prev().is(":first-child") || (hi.attr("disabled", !1), hi.css("opacity", "1")); sk(si.find(".frpt-fr-seletedliItem").closest("li").next()) } }); hi.on("click", function () { if (!wh) { if (ht.val() == "C" && w2ui["gridLinkRLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", yt, "red"); return } if (th()) ne(); else return; si.find(".frpt-fr-seletedliItem").closest("li").prev().is(":first-child") && (hi.attr("disabled", !0), hi.css("opacity", "0.5")); si.find(".frpt-fr-seletedliItem").closest("li").next().is(":last-child") || (bi.attr("disabled", !1), bi.css("opacity", "1")); sk(si.find(".frpt-fr-seletedliItem").closest("li").prev()) } }); ki.on("click", function () { if (at.val() == "C" && w2ui["gridLinkCLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", nt, "red"); return } il() && (v.val() == "0" || ra()) && (bh || (ne(), li.find(".frpt-fr-seletedliItem").closest("li").next().is(":last-child") && (ki.attr("disabled", !0), ki.css("opacity", "0.5")), li.find(".frpt-fr-seletedliItem").closest("li").prev().is(":first-child") || (ci.attr("disabled", !1), ci.css("opacity", "1")), hk(li.find(".frpt-fr-seletedliItem").closest("li").next()))) }); ci.on("click", function () { if (at.val() == "C" && w2ui["gridLinkCLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", nt, "red"); return } il() && (v.val() == "0" || ra()) && (bh || (ne(), li.find(".frpt-fr-seletedliItem").closest("li").prev().is(":first-child") && (ci.attr("disabled", !0), ci.css("opacity", "0.5")), li.find(".frpt-fr-seletedliItem").closest("li").next().is(":last-child") || (ki.attr("disabled", !1), ki.css("opacity", "1")), hk(li.find(".frpt-fr-seletedliItem").closest("li").prev()))) }); var o = function () { kt = !0 }; tv.on("click", cn); dw.on("click", function (t) { var i = Math.random().toString().substr(2, 4); dh.setContext(ot, "FRPT_IsRepeatHeader", co.prop("checked")); dh.setContext(ot, "ColumnAfterIndex", iu.val()); dh.setContext(ot, "FRPT_IsListSource", ef.prop("checked")); cc = new n.AForms.ReportReader; cc.setReportName(ri.val()); cc.initializeComponent(ot, gd, i); sa.push({ id: i, "class": cc }); t.stopPropagation() }); ae.on("change", function (n) { c.Desc != ae.val() && (kt = !0); n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); $cmbElementTypeHeader.on("change", function () { oi.css("display", "none"); ui.css("display", "inherit"); kt = !0 }); yu.on("change", function () { oi.css("display", "none"); ui.css("display", "inherit"); kt = !0 }); oo.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); ef.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")); ef.prop("checked") ? gt.find(".chkListTransctn").css("display", "inherit") : gt.find(".chkListTransctn").css("display", "none") }); sh.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); so.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit"), ho.prop("checked", !1)) }); ho.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit"), so.prop("checked", !1)) }); ys.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); co.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); of.on("click", function (n) { n.originalEvent && (kt = !0, oi.css("display", "none"), ui.css("display", "inherit")); bp() }); iu.on("blur", function (n) { if (c.ColumnAftIndex != iu.val() && (kt = !0), iu.val() < 0) { VIS.ADialog.info("FRPT_InvalidColumnAftIndex"); iu.val("0"); return } iu.val() == "-0" && iu.val(0); n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); ct.on("keydown", function (n) { n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")); window.setTimeout(function () { of.is(":checked") && (ct.val().trim().length > 0 ? (c.Precision != ct.val() && (kt = !0), ct.removeClass("vis-ev-col-mandatory"), ot > 0 && u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !1)) : (ct.addClass("vis-ev-col-mandatory"), u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !0), u.find(".frpt-frf-listradiowrap").children().prop("disabled", !0))) }, 50) }); ct.on("change", function () { if (VIS.Utility.Util.getValueOfInt(ct.val()) < 0 || VIS.Utility.Util.getValueOfInt(ct.val()) > 12) { VIS.ADialog.info("FRPT_InvalidPrecision"); ct.val(""); return } ct.val() == "-0" && ct.val(0) }); hh.on("click", function (n) { kt = !0; n.originalEvent && (oi.css("display", "none"), ui.css("display", "inherit")) }); vi.on("change", function () { vi.val().trim().length > 0 ? (vi.val() != f.HeaderLabel && (a = !0), vi.removeClass("vis-ev-col-mandatory"), ft.css("display", "inherit")) : vi.addClass("vis-ev-col-mandatory") }); fe.on("change", function () { fe.val().length > 0 && (fe.val() != f.PrintData && (a = !0), ft.css("display", "inherit")) }); ee.on("change", function () { ee.val().length > 0 ? ft.css("display", "inherit") : ft.css("display", "none") }); sr.on("change", function () { sr.val().trim().length > 0 ? (e.HeaderLabel != sr.val() && (a = !0), sr.removeClass("vis-ev-col-mandatory"), et.css("display", "inherit")) : sr.addClass("vis-ev-col-mandatory") }); le.on("change", function () { le.val().length > 0 && (e.PrintData != le.val() && (a = !0), et.css("display", "inherit")) }); as.on("change", function () { le.val().length > 0 ? et.css("display", "inherit") : et.css("display", "none") }); wi.on("keydown", function () { a = !0; window.setTimeout(function () { wi.val().length > 0 ? et.css("display", "inherit") : et.css("display", "inherit") }, 50) }); wi.on("change", function () { if (wi.val() < 0 || wi.val() > 12) { VIS.ADialog.info("FRPT_InvalidPrecision"); wi.val(""); return } }); np.on("click", ltt); we.on("click", function () { f = {}; ro = !0; ar.prop("checked", !0); gi.val(""); gi.css("display", "block"); gi.focus(); k.css("display", "none"); we.css("display", "none"); be.css("display", "none"); fl.css("opacity", "0.5"); ke.css("display", "inherit"); ie.css("display", "inherit") }); ie.on("click", function () { ro = !1; gi.val(""); gi.css("display", "none"); be.css("display", "inherit"); fl.css("opacity", "1"); k.css("display", "inherit"); we.css("display", "inherit"); ke.css("display", "none"); ie.css("display", "none") }); lf.on("click", function () { e = {}; ne(); ro = !0; er.prop("checked", !0); nr.val(""); nr.css("display", "inherit"); nr.focus(); b.css("display", "none"); lf.css("display", "none"); de.css("display", "none"); af.css("display", "inherit"); ue.css("display", "inherit"); ir.css("display", "none"); os.css("opacity", "0.5") }); ue.on("click", function () { ro = !1; nr.val(""); nr.css("display", "none"); nr.focus(); b.css("display", "inherit"); lf.css("display", "inherit"); de.css("display", "inherit"); af.css("display", "none"); ue.css("display", "none"); os.css("opacity", "1"); a = !1 }); ke.on("click", function () { if (gi.val().trim().length > 0 || gi.val().trim().length == 0 && k.val() == "") tit(), gi.css("display", "none"), k.css("display", "inherit"), we.css("display", "inherit"), fl.css("opacity", "1"), be.css("display", "inherit"), ie.css("display", "none"), ke.css("display", "none"); else return h("FRPT_NameMandatory", yt, "red"), !1 }); af.on("click", function () { if (nr.val().trim().length > 0 || nr.val().trim().length == 0 && b.val() == "") iit(), nr.css("display", "none"), b.css("display", "inherit"), lf.css("display", "inherit"), ue.css("display", "none"), os.css("opacity", "1"), de.css("display", "inherit"), af.css("display", "none"); else return h("FRPT_NameMandatory", nt, "red"), !1 }); fl.on("click", function () { gi.css("display") != "block" && k.val() > 0 && (ro = !1, gi.val(k.find("option:selected").text()), gi.css("display", "inherit"), gi.focus(), k.css("display", "none"), we.css("display", "none"), be.css("display", "none"), ke.css("display", "inherit"), ie.css("display", "inherit")) }); os.on("click", function () { nr.css("display") != "block" && b.val() > 0 && (ro = !1, nr.val(b.find("option:selected").text()), nr.css("display", "inherit"), nr.focus(), b.css("display", "none"), lf.css("display", "none"), de.css("display", "none"), af.css("display", "inherit"), ue.css("display", "inherit")) }); k.on("click", function (n) { n.originalEvent && ne() }); k.on("change", function (n) { gi.val(k.find("option:selected").text()); ih = !0; n.originalEvent ? (we.css("display", "none"), ke.css("display", "inherit")) : (we.css("display", "inherit"), ke.css("display", "none")); k.val() > 0 ? ow(!0) : ow(!1); ak() }); b.on("click", function (n) { n.originalEvent && ne() }); b.on("change", function (n) { ih = !0; n.originalEvent ? (lf.css("display", "none"), af.css("display", "inherit")) : (lf.css("display", "inherit"), af.css("display", "none")); b.val() > 0 ? sw(!0) : sw(!1); nr.val(b.find("option:selected").text()); yk() }); ge.on("click", function () { if (VIS.Env.getCtx().getAD_Client_ID() == t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || dc != !1) { if (k.val() <= 0 || k.val() == "") { h("FRPT_SelectReportSet", yt, "red"); return } if (th()) wh = !1, ua(), re.css("opacity", "1"); else return !1; ck(); fw() } }); ss.on("click", function () { if (VIS.Env.getCtx().getAD_Client_ID() == t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || gc != !1) { if (b.val() <= 0 || b.val() == "") { h("FRPT_SelectColumnSet", nt, "red"); return } if (il()) bh = !1, hy(), cf.css("opacity", "1"); else return !1; ew(); lk() } }); nv.on("click", function () { if (pe = 2, ht.val() == "C" && w2ui["gridLinkRLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", yt, "red"); return } if (k.val() <= 0 || k.val() == "") { h("FRPT_SelectReportSet", yt, "red"); return } gb(); wh = !0; ar.prop("checked", !0); uu.setValue("-1"); eu.setValue("-1"); fu.setValue("-1"); ou.setValue("-1"); au.setValue("-1"); bf.prop("checked", !0); ft.css("display", "inherit"); hi.attr("disabled", !0); hi.css("opacity", "0.5"); bi.attr("disabled", !0); bi.css("opacity", "0.5"); p.parent().removeClass("frpt-marginleft"); sc(!0); re.css("opacity", "0.5"); dc = !0 }); ww.on("click", yn); be.on("click", att); de.on("click", vtt); re.on("click", ytt); cf.on("click", ptt); ht.on("change", wtt); fi.on("change", btt); ni.on("change", function (n) { if (ht.val() == "C") if (se != null && se.length > 0) { for (i = 0; i < se.length; i++)if (se[i].Type == "S") { h("FRPT_SubGroupUseInFormula", yt, "red"); ni.val(f.GroupName); return } } else ek(n); else { if (to != null && to.length > 0) { h("FRPT_UseInSubGroupGrid", yt, "red"); ni.val(f.SubGroupName); return } ek(n) } }); ur.on("change", gn); at.on("change", kn); fo.on("change", dn); ff.on("change", bn); vf.on("change", vn); yl.on("click", pp); wl.on("click", og); ui.on("click", nn); ft.on("click", tn); et.on("click", rn); d.on("change", an); w.on("change", pn); g.on("change", wn); ii.on("change", ln); it.on("change", hn); yi.on("click", en); pi.on("click", on); tf.on("click", sn); br.on("change", fn); bf.on("change", un); ky.on("click", function () { var i = yu.val(), n, t; ha == 0 && (n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetWindoNoForZoom", null), n > 0 && (ha = n)); t = new VIS.Query; t.addRestriction("FACT_ACCUMULATION_ID", VIS.Query.prototype.EQUAL, i); VIS.viewManager.startWindow(ha, t) }); v.on("change", function () { kp(v.val()) }); p.on("change", function () { bg(p.val()); pg(p.val()) }); wy.on("click", function () { ca = !0; ul ? (pt.hide(), ul = !1) : (pt.show(), ul = !0) }); ai.on("click", function () { ul && !ca ? (pt.hide(), ul = !1) : ca = !1 }) } function pg(n) { n != null ? (oc("", pu), n != "AD" ? (pt.find(".align-item-center").css("visibility", "hidden").css("position", "absolute"), pt.find("[value='" + n + "']").css("visibility", "visible")) : pt.find(".align-item-center").css("visibility", "visible").css("position", "")) : pt.find(".align-item-center").css("visibility", "hidden").css("position", "absolute") } function wg() { s(!0); t.ajax({ url: VIS.Application.contextUrl + "AmountDivision/GetDiminsionType", dataType: "json", data: "{}", type: "POST", error: function () { VIS.ADialog.error(VIS.Msg.getMsg("ErrorWhileGettingData")); s(!1); return }, success: function (n) { var i = JSON.parse(n), f, e, u; if (i.Error) { VIS.ADialog.error(i.Error); s(!1); return } if (f = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDimensionType", null), v.empty().append('<option selected="selected" value="0">Please select<\/option>'), f != null && f.length > 0) for (e = 0; e < f.length; e++)for (u = 0; u < i.length; u++)if (i[u].Key == f[e].Id) { v.append(t("<option><\/option>").val(i[u].Key).html(i[u].Value)); break } t("#fr_cmbDimensionType_" + r.windowNo).html(v.prop("outerHTML")); s(!1) } }) } function kp(n) { db(); n == "AC" ? dp() : n == "AY" ? hb(cr, "columnLine") : n == "BP" ? cb(cr, "columnLine") : n == "LF" ? oy(cr, "columnLine") : n == "LT" ? oy(cr, "columnLine") : n == "MC" ? lb(cr, "columnLine") : n == "OO" ? ab(cr, "columnLine") : n == "OT" ? vb(cr, "columnLine") : n == "PJ" ? yb(cr, "columnLine") : n == "PR" ? pb(cr, "columnLine") : n == "SA" || (n == "SR" ? wb(cr, "columnLine") : n == "U1" || n == "U2" ? dp(cr, "columnLine") : (n == "X1" || n == "X2" || n == "X3" || n == "X4" || n == "X5" || n == "X6" || n == "X7" || n == "X8" || n == "X9") && gp(cr, "columnLine")) } function bg(n) { dg(); n == "AY" ? hb(nu, "rowLine") : n == "BP" ? cb(nu, "rowLine") : n == "LF" ? oy(nu, "rowLine") : n == "LT" ? oy(nu, "rowLine") : n == "MC" ? lb(nu, "rowLine") : n == "OO" ? ab(nu, "rowLine") : n == "OT" ? vb(nu, "rowLine") : n == "PJ" ? yb(nu, "rowLine") : n == "PR" ? pb(nu, "rowLine") : n == "SA" || (n == "SR" ? wb(nu, "rowLine") : n == "U1" || n == "U2" ? dp(nu, "rowLine") : n == "X1" || n == "X2" || n == "X3" || n == "X4" || n == "X5" || n == "X6" || n == "X7" || n == "X8" || n == "X9" ? gp(nu, "rowLine") : n == "AD" && (s(!0), gp(ap, "rowLine", !0))) } function bb(n, i, u, f) { var e = null, o = null, s = null, l = null, p; (i == "LF" || i == "LT") && (o = new VIS.MLocationLookup(VIS.Env.getCtx(), r.windowNo), e = new VIS.Controls.VLocation(u, !1, !1, !0, VIS.DisplayType.Location, o)); i == "Checkbox" ? e = new VIS.Controls.VCheckBox(u, !1, !1, !0, VIS.Msg.translate(VIS.Env.getCtx(), u), null) : (i == "PJ" && (l = "C_Project.IsActive='Y' AND C_Project.IsSummary ='N' AND C_Project.isopportunity = 'N' AND C_Project.iscampaign = 'N' AND C_Project.AD_Client_ID = " + VIS.context.getAD_Client_ID()), o = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, f, VIS.DisplayType.Search, u, 0, !1, l), e = new VIS.Controls.VTextBoxButton(u, !1, !1, !0, VIS.DisplayType.Search, o)); i == "AY" ? dr = e : i == "BP" ? du = e : i == "MC" ? gr = e : i == "OT" ? fr = e : i == "PJ" ? (gu = e, s = "Project") : i == "PR" ? nf = e : i == "SR" ? lr = e : i == "X1" ? yo = e : i == "X2" ? po = e : i == "X3" ? wo = e : i == "X4" ? bo = e : i == "X5" ? ko = e : i == "X6" ? go = e : i == "X7" ? ns = e : i == "X8" ? ts = e : i == "X9" ? is = e : i == "Checkbox" && (rs = e); var a = t('<div class="frpt-frf-form-data frpt-form-data-alldimension">'), h = t("<div class='input-group vis-input-wrap'>"), c = t("<div class='vis-control-wrap'>"), v = t("<div class='input-group-append'>"), y = t("<label>"); return a.append(h), n.append(a), p = e.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " ").attr("data-element-type", i), i != "Checkbox" && y.append(VIS.Msg.translate(VIS.Env.getCtx(), u)), h.append(c), h.append(v), c.append(p), i != "Checkbox" && (c.append(y), v.append(e.getBtn(0)).append(e.getBtn(1))), e.fireValueChanged = ott, s && e.setCustomInfo(s), e } function kb(n) { n ? (u.find("#reportLineAllDimensionControlsDiv_" + r.windowNo).show(), u.find("#reportLineDisplayAllDimensionControlsDiv_" + r.windowNo).show(), u.find("#reportLineAllDimensionControlsHeaderSpan_" + r.windowNo).removeClass("frpt-right-arrow").addClass("frpt-down-arrow")) : (u.find("#reportLineAllDimensionControlsDiv_" + r.windowNo).hide(), u.find("#reportLineDisplayAllDimensionControlsDiv_" + r.windowNo).hide(), u.find("#reportLineAllDimensionControlsHeaderSpan_" + r.windowNo).removeClass("frpt-down-arrow").addClass("frpt-right-arrow")) } function kg(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/getAggrAcctSchema", async: !1, type: "POST", data: { id: n }, success: function (n) { var t = JSON.parse(n); ry = t }, error: function (n) { console.log(n) } }) } function db() { y = ""; bu = ""; nl = null; hf = null; yv = null; ks = null; pv = null; ds = null; wv = null; gs = null; bv = null; vo = null; kv = null; tc = null; dv = null; ic = null; gv = null; rc = null; ny = null; ty = null; di = null; iy = null; uc = null; cr.empty() } function dg() { lc = null; fr = null; aa = null; dr = null; va = null; gr = null; ya = null; lr = null; pa = null; ac = null; wa = null; du = null; ba = null; gu = null; ka = null; nf = null; da = null; ga = null; nu.empty(); ap.empty(); lr = null; yo = null; po = null; wo = null; bo = null; ko = null; go = null; ns = null; ts = null; is = null; rs = null; kb(!1) } function ra() { return v.val() == "AC" ? di.val() == -1 || di.val() == null ? (VIS.ADialog.error("ValidateElement"), di.focus(), !1) : (bu = di.val(), !0) : v.val() == "AY" ? ks.val() == -1 || ks.val() == null ? (VIS.ADialog.error("ValidateActivity"), ks.focus(), !1) : (bu = y.getControl().val(), !0) : v.val() == "BP" ? tc.val() == "" ? (VIS.ADialog.error("ValidateBPartner"), tc.focus(), !1) : (bu = y.value, !0) : v.val() == "LF" || v.val() == "LT" ? uc.val() == "" ? (VIS.ADialog.error("ValidateLocation"), uc.focus(), !1) : (bu = y.getValue(), !0) : v.val() == "MC" ? ds.val() == -1 || ds.val() == null ? (VIS.ADialog.error("ValidateCamp"), ds.focus(), !1) : (bu = y.getControl().val(), !0) : v.val() == "OO" || v.val() == "OT" ? hf.val() == -1 || hf.val() == null ? (VIS.ADialog.error("ValidateOrg"), hf.focus(), !1) : (bu = y.getControl().val(), !0) : v.val() == "PJ" ? ic.val() == "" ? (VIS.ADialog.error("ValidateProject"), ic.focus(), !1) : (bu = y.value, !0) : v.val() == "PR" ? rc.val() == "" ? (VIS.ADialog.error("ValidateProduct"), rc.focus(), !1) : (bu = y.value, !0) : v.val() == "SA" ? !0 : v.val() == "SR" ? gs.val() == -1 || gs.val() == null ? (VIS.ADialog.error("ValidateSales"), gs.focus(), !1) : (bu = y.getControl().val(), !0) : v.val() == "U1" || v.val() == "U2" ? di.val() == -1 || di.val() == null ? (VIS.ADialog.error("ValidateElement"), di.focus(), !1) : txtAccountElement.val() == "" ? (VIS.ADialog.error("ValidateAcctElement"), txtAccountElement.focus(), !1) : (bu = y.getControl().val(), !0) : v.val() == "X1" || v.val() == "X2" || v.val() == "X3" || v.val() == "X4" || v.val() == "X5" || v.val() == "X6" || v.val() == "X7" || v.val() == "X8" || v.val() == "X9" ? vo.val() == -1 || vo.val() == "" ? (VIS.ADialog.warn("ValidateUElement"), vo.focus(), !1) : (bu = y.value, !0) : void 0 } function gg() { return p.val() == "AY" ? dr.val() == -1 || dr.val() == null || dr.val() == "" ? (ei = "", !0) : (ei = l.value, !0) : p.val() == "BP" ? du.val() == "" ? (ei = "", !0) : (ei = l.value, !0) : p.val() == "LF" || p.val() == "LT" ? ga.val() == "" ? (ei = 0, !0) : (ei = l.getValue(), !0) : p.val() == "MC" ? gr.val() == -1 || gr.val() == null || gr.val() == "" ? (ei = "", !0) : (ei = l.value, !0) : p.val() == "OO" || p.val() == "OT" ? fr.val() == -1 || fr.val() == null || fr == "" ? (ei = "", !0) : (ei = l.value, !0) : p.val() == "PJ" ? gu.val() == "" ? (ei = "", !0) : (ei = l.value, !0) : p.val() == "PR" ? nf.val() == "" ? (ei = "", !0) : (ei = l.value, !0) : v.val() == "SA" ? !0 : p.val() == "SR" ? lr.val() == -1 || lr.val() == null || lr.val() == "" ? (ei = "", !0) : (ei = l.value, !0) : p.val() == "U1" || p.val() == "U2" ? di.val() == -1 || di.val() == null ? (ei = 0, !0) : rltxtAccountElement.val() == "" ? (ei = 0, !0) : (ei = l.getControl().val(), !0) : p.val() == "X1" || p.val() == "X2" || p.val() == "X3" || p.val() == "X4" || p.val() == "X5" || p.val() == "X6" || p.val() == "X7" || p.val() == "X8" || p.val() == "X9" ? ac == null || ac.val() == -1 || ac.val() == null ? (ei = "", !0) : (ei = l.value, !0) : void 0 } function sy(n, t) { n && (n.css("display") == "none" ? (n.css("display", "inherit"), t.addClass("frpt-down-arrow"), t.removeClass("frpt-right-arrow")) : (n.css("display", "none"), t.addClass("frpt-right-arrow"), t.removeClass("frpt-down-arrow"))) } function nn() { u.find(".ftpr-frf-li-lowerdiv").children().prop("disabled", !1); oi.css("display", "inherit"); ui.css("display", "none"); pl.css("display", "inherit"); ri.removeClass("vis-ev-col-mandatory"); vr.getValue() != c.RRowLineFormatting && vr.setValue(c.RRowLineFormatting); yr.getValue() != c.RSourceLineFormatting && yr.setValue(c.RSourceLineFormatting); pr.getValue() != c.SubColumn && pr.setValue(c.SubColumn); wr.getValue() != c.RTrxLineFormatting && wr.setValue(c.RTrxLineFormatting); kr.getValue() != c.RDGLineFormatting && kr.setValue(c.RDGLineFormatting); ot = c.reportID; ri.val(c.Name); ri.trigger("keydown"); ae.val(c.Desc); ct.val(c.Precision); ct.trigger("keydown"); $cmbElementTypeHeader.val(c.ElementType); oo.prop("checked", c.Active); ef.prop("checked", c.ListSource); sh.prop("checked", c.ListSubGroup); so.prop("checked", c.SuppressLine); ho.prop("checked", c.SuppressLineAfterCF); ys.prop("checked", c.MergeDescWithName); iu.val(c.ColumnAftIndex); co.prop("checked", c.IsRepeatHeader); of.prop("checked", c.IsNotUseAcct); window.setTimeout(function () { bp() }, 50); hh.prop("checked", c.ListDesc); yu.val(c.BalanceAggrigation); ef.prop("checked") && gt.find(".chkListTransctn").css("display", "inherit"); VIS.Env.getCtx().getAD_Client_ID() == te.find(".ftpr-frf-li-firstDiv-selected").attr("data-tenantid") ? na(!0) : na(!1); kt = !1 } function tn() { s(!0); t.isEmptyObject(f) || (a = !1, wh = !1, re.css("display", "1"), uu.getValue() != f.RLRowLineFormatting && uu.setValue(f.RLRowLineFormatting), eu.getValue() != f.RLSourceLineFormatting && eu.setValue(f.RLSourceLineFormatting), fu.getValue() != f.RSubGroupLineColumn && fu.setValue(f.RSubGroupLineColumn), ou.getValue() != f.RLTrxLineFormatting && ou.setValue(f.RLTrxLineFormatting), au.getValue() != f.RLDGLineFormatting && au.setValue(f.RLDGLineFormatting), tt = t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").val(), vi.val(f.HeaderLabel), vi.removeClass("vis-ev-col-mandatory"), fe.val(f.PrintData), ee.val(f.SeqNo), ur.val(f.PostingType), ur.trigger("change"), ur.removeClass("vis-ev-col-mandatory"), ar.prop("checked", f.IsPrint == "Y" ? !0 : !1), ni.val(f.GroupID), ph.prop("checked", f.RLListSources == "Y" ? !0 : !1), vs.prop("checked", f.RLIgnoreSuppressLine == "Y" ? !0 : !1), ch.prop("checked", f.RLPrintLineOnName == "Y" ? !0 : !1), sf.setValue(null), f.RLIgnoreColumnFormat != null && f.RLIgnoreColumnFormat != "" && sf.setValue(f.RLIgnoreColumnFormat), wf.setValue(null), wf.setValue(f.RLHorizontalLine), bf.prop("checked", f.RLActive == "Y" ? !0 : !1), p.val(f.DimTypeID), p.trigger("change"), oc("", pu), f.FRPT_ConsiderNullDimension != "" && f.FRPT_ConsiderNullDimension != undefined && oc(f.FRPT_ConsiderNullDimension, ""), p.val() != "AD" ? window.setTimeout(function () { f.ColDimensionTypeValue != "" && f.ColDimensionTypeValue != "0" && f.ColDimensionTypeValue != undefined && l != null && l.setValue(f.ColDimensionTypeValue) }, 100) : window.setTimeout(function () { f.C_ACTIVITY_ID != "" && f.C_ACTIVITY_ID != "0" && f.C_ACTIVITY_ID != undefined && dr != null && dr.setValue(f.C_ACTIVITY_ID); f.C_BPARTNER_ID != "" && f.C_BPARTNER_ID != "0" && f.C_BPARTNER_ID != undefined && du != null && du.setValue(f.C_BPARTNER_ID); f.C_CAMPAIGN_ID != "" && f.C_CAMPAIGN_ID != "0" && f.C_CAMPAIGN_ID != undefined && gr != null && gr.setValue(f.C_CAMPAIGN_ID); f.Org_ID_1 != "" && f.Org_ID_1 != "0" && f.Org_ID_1 != undefined && fr != null && fr.setValue(f.Org_ID_1); f.C_PROJECT_ID != "" && f.C_PROJECT_ID != "0" && f.C_PROJECT_ID != undefined && gu != null && gu.setValue(f.C_PROJECT_ID); f.M_PRODUCT_ID != "" && f.M_PRODUCT_ID != "0" && f.M_PRODUCT_ID != undefined && nf != null && nf.setValue(f.M_PRODUCT_ID); f.C_SALESREGION_ID != "" && f.C_SALESREGION_ID != "0" && f.C_SALESREGION_ID != undefined && lr != null && lr.setValue(f.C_SALESREGION_ID); f.UserElement1_ID != "" && f.UserElement1_ID != "0" && f.UserElement1_ID != undefined && yo != null && yo.setValue(f.UserElement1_ID); f.UserElement2_ID != "" && f.UserElement2_ID != "0" && f.UserElement2_ID != undefined && po != null && po.setValue(f.UserElement2_ID); f.UserElement3_ID != "" && f.UserElement3_ID != "0" && f.UserElement3_ID != undefined && wo != null && wo.setValue(f.UserElement3_ID); f.UserElement4_ID != "" && f.UserElement4_ID != "0" && f.UserElement4_ID != undefined && bo != null && bo.setValue(f.UserElement4_ID); f.UserElement5_ID != "" && f.UserElement5_ID != "0" && f.UserElement5_ID != undefined && ko != null && ko.setValue(f.UserElement5_ID); f.UserElement6_ID != "" && f.UserElement6_ID != "0" && f.UserElement6_ID != undefined && go != null && go.setValue(f.UserElement6_ID); f.UserElement7_ID != "" && f.UserElement7_ID != "0" && f.UserElement7_ID != undefined && ns != null && ns.setValue(f.UserElement7_ID); f.UserElement8_ID != "" && f.UserElement8_ID != "0" && f.UserElement8_ID != undefined && ts != null && ts.setValue(f.UserElement8_ID); f.UserElement9_ID != "" && f.UserElement9_ID != "0" && f.UserElement9_ID != undefined && is != null && is.setValue(f.UserElement9_ID); f.FRPT_IsUnselectedDimension != "" && f.FRPT_IsUnselectedDimension != undefined && rs != null && rs.setValue(f.FRPT_IsUnselectedDimension) }, 100), io = f.GroupID, rf && (rf.clear(), rf.refresh()), or && (or.clear(), or.refresh()), uf && (uf.clear(), uf.refresh()), fi.val(f.LinkWith), fi.trigger("change"), ht.val(f.LinkType), ht.removeClass("vis-ev-col-mandatory"), ht.trigger("change"), f.LinkType != "C" ? (f.GridLinkAccount && oa(f.GridLinkAccount), f.GroupID > 0 && ni.trigger("change"), f.GroupID > 0 ? ni.trigger("change") : f.GridLinkAccount && oa(f.GridLinkAccount)) : iw(), ft.css("display", "none"), si.find(".frpt-fr-seletedliItem").is(":last-child") ? (bi.attr("disabled", !0), bi.css("opacity", "0.5")) : (bi.attr("disabled", !1), bi.css("opacity", "1")), si.find(".frpt-fr-seletedliItem").is(":first-child") ? (hi.attr("disabled", !0), hi.css("opacity", "0.5")) : (hi.attr("disabled", !1), hi.css("opacity", "1")), VIS.Env.getCtx().getAD_Client_ID() != t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") ? sc(!1) : sc(!0)); s(!1) } function rn() { var n; s(!0); a = !1; t.isEmptyObject(e) || (bh = !1, su.getValue() != e.RCRowLineFormatting && su.setValue(e.RCRowLineFormatting), cu.getValue() != e.RCSourceLineFormatting && cu.setValue(e.RCSourceLineFormatting), hu.getValue() != e.RCSubGroupLineFormatting && hu.setValue(e.RCSubGroupLineFormatting), lu.getValue() != e.RCTrxLineFormatting && lu.setValue(e.RCTrxLineFormatting), vu.getValue() != e.RCDGLineFormatting && vu.setValue(e.RCDGLineFormatting), cf.css("opacity", "1"), bt = t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").val(), sr.val(e.HeaderLabel), sr.removeClass("vis-ev-col-mandatory"), le.val(e.PrintData), as.val(e.SeqNo), ff.val(e.PostingType), ru.setValue(null), ru.setValue(e.PrintLabelPeriod), v.val(e.ColDimensionType), kp(e.ColDimensionType), e.ColDimensionType != "" && e.ColDimensionType != "0" && e.ColDimensionType != undefined && window.setTimeout(function () { y.setValue(e.ColDimensionTypeValue) }, 200), er.prop("checked", e.IsPrint == "Y" ? !0 : !1), uo.val(e.Budget), vf.val(e.AmountType), vf.trigger("change"), at.val(e.ColumnType), at.trigger("change"), at.val() != "C" && (d.val(e.PeriodID), d.trigger("change"), e.PostingType != "B" && u.find(".frpt-fr-budgetDiv").css("display", "none"), d.trigger("change"), (d.val() == "MO" || d.val() == "TO" || d.val() == "YE") && (ii.val(""), hr.val(""), ut.val("")), g.val(""), ut.val(), e.RelativePeriod == 0 ? (w.val("C"), tr.val(1), u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-cmbPeriodType").removeClass("frpt-frf-thirdfourth-control"), g.find("option[value=P]").prop("disabled", !0)) : e.RelativePeriod <= 0 ? (w.val("P"), w.trigger("change"), tr.val(-1 * e.RelativePeriod)) : (w.val("N"), w.trigger("change"), tr.val(e.RelativePeriod)), e.PeriodGroup && e.PeriodID == "YP" ? (ii.val(e.PeriodGroup), ii.trigger("change"), hr.val(e.PeriodGroupType), n = e.RelativePeriod2, e.PeriodGroupType != "" ? (it.val("F"), it.trigger("change"), hr.val(e.PeriodGroupType)) : n && (n > 0 ? (it.val("N"), it.trigger("change"), ut.val(n)) : n < 0 ? (it.val("P"), it.trigger("change"), ut.val(-1 * n)) : (it.val("C"), it.trigger("change"), ut.val(n)))) : e.PeriodID == "YR" && (n = e.RelativePeriod2, n > 0 ? (g.val("N"), g.trigger("change"), ut.val(n)) : n < 0 ? (g.val("P"), g.trigger("change"), ut.val(-1 * n)) : (g.val("C"), g.trigger("change"), ut.val(n))), e.StartToPeriod == "Y" ? yi.prop("checked", e.StartToPeriod == "Y" ? !0 : !1) : yi.prop("checked", !1), e.PeriodToStart == "Y" ? pi.prop("checked", e.PeriodToStart == "Y" ? !0 : !1) : pi.prop("checked", !1), e.BeginBal == "Y" ? tf.prop("checked", e.BeginBal == "Y" ? !0 : !1) : tf.prop("checked", !1)), fo.val(e.NotIncludeType), e.ColumnPrecision >= 0 ? wi.val(e.ColumnPrecision) : wi.val(""), br.prop("checked", e.RCIsActive == "Y" ? !0 : !1), e.ColumnType == "C" ? (rw(), ir && ir.css("display", "inherit")) : ir && ir.css("display", "none"), li.find(".frpt-fr-seletedliItem").is(":last-child") ? (ki.attr("disabled", !0), ki.css("opacity", "0.5")) : (ki.attr("disabled", !1), ki.css("opacity", "1")), li.find(".frpt-fr-seletedliItem").is(":first-child") ? (ci.attr("disabled", !0), ci.css("opacity", "0.5")) : (ci.attr("disabled", !1), ci.css("opacity", "1")), VIS.Env.getCtx().getAD_Client_ID() != t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") ? ea(!1) : ea(!0)); bt != undefined && hw(!0); s(!1); et.css("display", "none") } function un() { var n, t; wh || (n = si.find(".frpt-fr-seletedliItem").val(), n && (t = uk(n), t != 0 && (h("FRPT_LineInUse", yt, "red"), bf.prop("checked", !0), a = !1, ft.css("display", "none")))) } function fn() { var t, n; bh || (t = li.find(".frpt-fr-seletedliItem").val(), t && (n = fk(t), n == 1 ? (h("FRPT_ColumnExistInFormula", nt, "red"), br.prop("checked", !0), a = !1, et.css("display", "none")) : n == 2 ? (h("FRPT_ColumnExistInCondFormatting", nt, "red"), br.prop("checked", !0), a = !1, et.css("display", "none")) : n == 3 && (h("FRPT_ColumnExistInPostingType", nt, "red"), br.prop("checked", !0), a = !1, et.css("display", "none")))) } function en() { pi.is(":checked") && pi.prop("checked", !1); tf.is(":checked") && tf.prop("checked", !1) } function on() { yi.is(":checked") && yi.prop("checked", !1); tf.is(":checked") && tf.prop("checked", !1) } function sn() { yi.is(":checked") && yi.prop("checked", !1); pi.is(":checked") && pi.prop("checked", !1) } function gb() { var n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetSequenceNo", { LineSetId: k.val() }); vi.val(""); fe.val(""); ee.val(n); ht.val("-1"); ur.val("-1"); p.parent().removeClass("frpt-marginleft"); ar.prop("checked", !0); bf.prop("checked", !0); ph.prop("checked", !1); vs.prop("checked", !1); ch.prop("checked", !1); sf.setValue(null); wf.setValue(""); uu.setValue("-1"); eu.setValue("-1"); fu.setValue("-1"); ou.setValue("-1"); au.setValue("-1"); fi.val("-1"); p.val("-1"); p.trigger("change"); fi.trigger("change"); hl = []; to = []; se = []; pc = []; tt = 0; tl(!0); ey(!0); ay(!0); gh = []; gk(); ht.addClass("vis-ev-col-mandatory"); st.find(".frpt-fr-RLine-segment").css("display", "none"); st.find(".frpt-fr-LinkWith").css("display", "none"); ye.css("display", "none"); ao.css("display", "none"); bs.css("display", "none"); nc.css("display", "none"); vi.addClass("vis-ev-col-mandatory"); u.find("#reportLineDisplayControlsDiv_" + r.windowNo).css("display", "none"); u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo).addClass("frpt-right-arrow"); u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo).removeClass("frpt-down-arrow"); $divPostingTypeGroup.css("display", "none"); pf.removeClass("frpt-down-arrow"); pf.addClass("frpt-right-arrow"); ni.val(""); pu != null && pu.length > 0 && oc("", pu) } function hn() { var n = t(this).val(); n == "F" ? (u.find(".frpt-frf-cmbPeriodGroupType").css("display", "inherit"), u.find(".frpt-frf-txtYear2").css("display", "none"), hr.val(hr.find("option:first").val())) : n == "C" ? (u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"), u.find(".frpt-frf-txtYear2").css("display", "none")) : (u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"), u.find(".frpt-frf-txtYear2").css("display", "inherit"), ut.val(1)) } function cn() { var i = cs.getChanges(), u, r, n; if (i && i.length > 0) { for (u = [], r = 0; r < i.length; r++)n = cs.get(i[r].recid), n && (i[r].IsChoosen != undefined && (n.IsChoosen = i[r].IsChoosen), i[r].IsMandatory != undefined && (n.IsMandatory = i[r].IsMandatory), n.IsChoosen || (n.IsMandatory = !1), n.changes && n.changes.SeqNo && (n.SeqNo = n.changes.SeqNo), u.push(n)); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveReportPara", async: !0, type: "POST", data: { param: JSON.stringify(u), id: ot }, success: function (n) { var t = JSON.parse(n); h("RecordSaved", uv, "black"); dk() }, error: function (n) { console.log(n) } }) } } function ln() { var n = ii.val(); n && (yw.text(VIS.Msg.getMsg("Select") + " " + ii.find("option:selected").text() + " " + VIS.Msg.getMsg("FRPT_Value")), pw.text(VIS.Msg.getMsg("Select") + " " + ii.find("option:selected").text()), t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetPeriodGroupType", async: !1, data: { id: n }, success: function (n) { var i = JSON.parse(n), r; if (i != null || i.length > 0) { hr.empty(); for (r in i) hr.append(t('<Option value="' + i[r].Id + '">' + VIS.Utility.encodeText(i[r].Value) + "<\/option>")); hr.val(hr.find("option:first").val()) } s(!1) }, error: function (n) { h("FRPT_RecordNotFound", nt, "red"); Console.log(n); s(!1) } })) } function an(n) { n.originalEvent && (a = !0, et.css("display", "inherit")); var i = t(this).val(); i ? (u.find(".frpt-frf-cmbPeriodType").css("display", "inherit"), u.find(".frpt-frf-txtYear").css("display", "inherit"), u.find(".frpt-frf-cmbPeriodGroup").css("display", "none").removeClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodTypeQ").css("display", "none"), i == "MO" ? (tp.text(VIS.Msg.getMsg("FRPT_Value")), rv.text(VIS.Msg.getMsg("FRPT_SelectMonth")), w.find("option").each(function () { t(this).val().length > 0 && t(this).text(cv[t(this).val()] + " " + VIS.Msg.getMsg("Month")) }), w.val("C"), w.trigger("change")) : (tp.text(VIS.Msg.getMsg("FRPT_Value")), rv.text(VIS.Msg.getMsg("FRPT_SelectYear")), w.find("option").each(function () { t(this).val().length > 0 && t(this).text(cv[t(this).val()] + " " + VIS.Msg.getMsg("Year")) }), g.find("option").each(function () { t(this).val().length > 0 && t(this).text(cv[t(this).val()] + " " + VIS.Msg.getMsg("Year")) })), (i == "TO" || i == "YE") && (w.val("C"), w.trigger("change")), i == "YP" ? (u.find(".frpt-frf-cmbPeriodGroup").css("display", "inherit").addClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodTypeQ").css("display", "inherit").addClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodType2").css({ display: "none" }), u.find(".frpt-frf-txtYear2").addClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodGroupType").addClass("frpt-frf-thirty"), ii.val(ii.find("option:first").val()), it.val("C"), ii.trigger("change"), it.trigger("change"), w.val("C"), w.trigger("change")) : i == "YR" ? (u.find(".frpt-frf-cmbPeriodType2").css({ display: "inherit" }), u.find(".frpt-frf-txtYear2").css("display", "inherit").removeClass("frpt-frf-thirty"), rv.text(VIS.Msg.getMsg("FRPT_From")), u.find(".frpt-frf-cmbPeriodGroup").css("display", "none").removeClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodTypeQ").removeClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"), w.val("C"), w.trigger("change")) : (u.find(".frpt-frf-cmbPeriodGroup").css("display", "none").removeClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodTypeQ").removeClass("frpt-frf-thirty"), u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"), u.find(".frpt-frf-cmbPeriodType2").css({ display: "none" }), u.find(".frpt-frf-txtYear2").css("display", "none").removeClass("frpt-frf-thirty"))) : (u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-cmbPeriodType").css("display", "none"), u.find(".frpt-frf-cmbPeriodType2").css("display", "none"), u.find(".frpt-frf-cmbPeriodGroup").css("display", "none"), u.find(".frpt-frf-cmbPeriodTypeQ").css("display", "none"), u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"), u.find(".frpt-frf-txtYear2").css("display", "none").removeClass("frpt-frf-thirty")); d.val() == "MO" || d.val() == "YP" ? (u.find(".frpt_fr_StartToPeriod").css("display", "inherit"), u.find(".frpt_fr_PeriodToCurrent").css("display", "inherit"), pi.prop("checked", !1), yi.prop("checked", !1), d.val() == "MO" ? (u.find(".frpt_fr_BeginBal").css("display", "inherit"), tf.prop("checked", !1)) : (u.find(".frpt_fr_BeginBal").css("display", "none"), tf.prop("checked", !1))) : (u.find(".frpt_fr_StartToPeriod").css("display", "none"), u.find(".frpt_fr_PeriodToCurrent").css("display", "none"), u.find(".frpt_fr_BeginBal").css("display", "none")) } function ne() { if (a) { if (nw(), pe == 2 && !th()) return; VIS.ADialog.confirm("FRPT_Saveit", !0, "", "Confirm", function (n) { n ? (pe == 2 ? ua() : pe == 3 && hy(), dt == 2 ? fa(t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").val()) : cy(t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").val())) : (dt == 2 ? fa(tt) : cy(bt), a = !1) }) } } function nw() { if (o = [], dt == 2) { if (pe = 2, o.push(vi.val()), o.push(fe.val()), o.push(ee.val()), o.push(ht.val()), o.push(ur.val()), o.push(""), o.push(ar.prop("checked")), o.push(k.val()), o.push(ni.val()), o.push(tt), o.push(fi.val()), o.push(p.val()), o.push(uu.getValue()), o.push(eu.getValue()), o.push(ou.getValue()), o.push(fu.getValue()), o.push(ph.prop("checked")), o.push(bf.prop("checked")), o.push(au.getValue()), o.push(vs.prop("checked")), o.push(sf.getValue()), o.push(wf.getValue()), o.push(ch.prop("checked")), p.val() != null && p.val() != "") { if (p.val() == "AD") o.push("AD"), dr != null ? o.push(dr.getValue()) : o.push(null), du != null ? o.push(du.getValue()) : o.push(null), gr != null ? o.push(gr.getValue()) : o.push(null), fr != null ? o.push(fr.getValue()) : o.push(null), gu != null ? o.push(gu.getValue()) : o.push(null), nf != null ? o.push(nf.getValue()) : o.push(null), lr != null ? o.push(lr.getValue()) : o.push(null), yo != null ? o.push(yo.getValue()) : o.push(null), po != null ? o.push(po.getValue()) : o.push(null), wo != null ? o.push(wo.getValue()) : o.push(null), bo != null ? o.push(bo.getValue()) : o.push(null), ko != null ? o.push(ko.getValue()) : o.push(null), go != null ? o.push(go.getValue()) : o.push(null), ns != null ? o.push(ns.getValue()) : o.push(null), ts != null ? o.push(ts.getValue()) : o.push(null), is != null ? o.push(is.getValue()) : o.push(null), rs != null ? o.push(rs.getValue()) : o.push(!1); else if (p.val() != "AD") if (gg()) o.push(ei); else { s(!1); return } } else o.push(0); if (rh != undefined && rh != null) if (pu != undefined && pu != "") { let n = null; pu.forEach(function (t) { n == null ? n = t : n += "," + t }); o.push(n) } else o.push(null); else o.push(null) } if (dt == 3) { pe = 3; o.push(sr.val()); o.push(le.val()); o.push(as.val()); o.push(ff.val()); o.push(uo.val()); o.push(b.val()); o.push(vf.val()); o.push(at.val()); w.val() == "C" ? o.push(0) : w.val() == "P" ? o.push(-1 * tr.val()) : w.val() == "N" ? o.push(tr.val()) : o.push("XXXXXXXXXX"); o.push(bt); o.push(er.prop("checked")); o.push(d.val()); d.val() == "MO" || d.val() == "TO" || d.val() == "YE" ? (o.push(yi.prop("checked")), o.push(pi.prop("checked")), o.push(""), o.push(""), o.push("")) : (o.push(yi.prop("checked")), o.push(pi.prop("checked")), o.push(ii.val()), it.val() == "F" ? o.push(hr.val()) : o.push(""), d.val() == "YP" ? it.val() == "N" ? o.push(ut.val()) : it.val() == "P" ? o.push(-1 * ut.val()) : it.val() == "C" ? o.push(0) : o.push("") : g.val() == "N" ? o.push(ut.val()) : g.val() == "P" ? o.push(-1 * ut.val()) : g.val() == "C" ? o.push(0) : d.val() != "YP" ? ut.val() < 0 ? o.push(-1 * ut.val()) : o.push(ut.val()) : o.push(ut.val())); o.push(su.getValue()); o.push(cu.getValue()); o.push(lu.getValue()); o.push(it.val()); o.push(hu.getValue()); o.push(br.prop("checked")); o.push(vu.getValue()); o.push(v.val()); if (v.val() != "0") if (ra()) o.push(bu); else { s(!1); return } else o.push("0"); d.val() == "MO" ? o.push(tf.prop("checked")) : o.push(""); o.push(fo.val()); let n = wi.val() != null && wi.val() != "" && wi.val() >= 0 ? wi.val() : -1; o.push(n); o.push(ru.getValue()) } } function vn() { } function yn() { if (pe = 3, at.val() == "C" && w2ui["gridLinkCLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", nt, "red"); return } if (b.val() <= 0 || b.val() == "") { h("FRPT_SelectColumnSet", nt, "red"); return } bh = !0; tw(); er.prop("checked", !0); br.prop("checked", !0); et.css("display", "inherit"); ci.attr("disabled", !0); ci.css("opacity", "0.5"); ki.attr("disabled", !0); ki.css("opacity", "0.5"); ss.css("opacity", "1"); cf.css("opacity", "1"); er.attr("disabled", !1); gc = !0; ea(!0); cf.css("opacity", "0.5"); v.val("0"); y != null && y != "" && y != undefined && y.setValue(-1); db() } function tw() { var n = VIS.Utility.Util.getValueOfInt(VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetColumnsetSequenceNo", { LineSetId: VIS.Utility.Util.getValueOfInt(b.val()) })); sr.val(""); le.val(""); as.val(n); ff.val(""); uo.val(""); at.val("-1"); at.parent().css("width", "100%"); at.css("width", "48.5%"); ff.val("A"); at.val("R"); vf.val("B"); at.trigger("change"); fo.val("-1"); wi.val(""); ru.setValue(""); ru.setValue("L"); tr.val(""); d.val("YE"); d.trigger("change"); yi.prop("checked", !1); pi.prop("checked", !1); ii.val(""); hr.val(""); it.val(""); ut.val(""); g.val(""); u.find(".frpt_fr_StartToPeriod").css("display", "none"); u.find(".frpt_fr_PeriodToCurrent").css("display", "none"); cl = []; er.prop("checked", !0); br.prop("checked", !0); su.setValue("-1"); cu.setValue("-1"); hu.setValue("-1"); lu.setValue("-1"); vu.setValue("-1"); pc = []; yy(!0); py(!0); bt = 0; sr.addClass("vis-ev-col-mandatory"); ir.find(".frpt-frf-txtYearC").css("display", "none"); ir.find(".frpt-frf-txtYear").css("display", "none"); u.find(".frpt-frf-txtYear").css("display", "none"); u.find(".frpt-frf-cmbPeriodTypeQ").css("display", "none"); u.find(".frpt-frf-cmbPeriodGroup").css("display", "none"); u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"); u.find(".frpt-frf-cmbPeriodType2").css("display", "none"); u.find(".frpt-frf-txtYear2").css("display", "none"); ir.css("display", "none"); df.css("display", "none"); gf.removeClass("frpt-down-arrow"); gf.addClass("frpt-right-arrow"); u.find("#reportColumnDisplayControlsDiv_" + r.windowNo).css("display", "none"); u.find("#reportcolumnColorControlsSpan_" + r.windowNo).addClass("frpt-right-arrow"); u.find("#reportcolumnColorControlsSpan_" + r.windowNo).removeClass("frpt-down-arrow") } function pn(n) { n.originalEvent && (a = !0, et.css("display", "inherit")); tr.val(1); ut.val(1); d.val() == "YP" ? u.find(".frpt-frf-cmbPeriodGroup").css("display", "inherit") : u.find(".frpt-frf-cmbPeriodGroup").css("display", "none"); it.val() == "F" && d.val() == "YP" ? u.find(".frpt-frf-cmbPeriodGroupType").css("display", "inherit") : u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"); u.find(".frpt-frf-txtYear").css("display", "inherit"); w.val() == "C" ? (u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-cmbPeriodType").removeClass("frpt-frf-thirdfourth-control"), tr.val(0)) : u.find(".frpt-frf-cmbPeriodType").addClass("frpt-frf-thirdfourth-control"); d.val() == "YR" && w.val() == "C" && (g.find("option[value=P]").prop("disabled", !0), g.find("option[value=C],option[value=N]").prop("disabled", !1), g.val("N")); d.val() == "YR" && w.val() == "N" && (g.val("N"), g.trigger("change"), g.find("option[value=P],option[value=C]").prop("disabled", !0)); d.val() == "YR" && w.val() == "P" && g.find("option[value=P],option[value=C],option[value=N]").prop("disabled", !1); ec() } function wn(n) { n.originalEvent && (a = !0, et.css("display", "inherit")); ut.prop("disabled", !1); (g.val() == "N" || g.val() == "P") && ut.val(1); u.find(".frpt-frf-txtYear2").css("display", "inherit"); g.val() == "C" && u.find(".frpt-frf-txtYear2").css("display", "none"); ec() } function bn(n) { n.originalEvent && (a = !0, et.css("display", "inherit")); ff.val() == "B" ? u.find(".frpt-fr-CLine-segment").css("display", "none") : u.find(".frpt-fr-CLine-segment").css("display", "none"); ec() } function kn(n) { n.originalEvent && (a = !0, et.css("display", "inherit")); t("#printLabelPeriod_" + r.windowNo).css("display", "inherit"); at.val() == "C" ? (rw(!0), ir.css("display", "inherit"), u.find(".frpt-frf-CAmountType").css("display", "none"), u.find(".frpt-frf-txtYearC").css("display", "none"), u.find(".frpt-frf-cmbPeriod").css("display", "none"), at.parent().css("width", "100%"), at.css("width", "100%"), u.find(".frpt-frf-cmbPeriodType").css("display", "none"), u.find(".frpt-frf-cmbPeriodGroup").css("display", "inherit"), u.find(".frpt-frf-cmbPeriodGroupType").css("display", "none"), u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-cmbPeriodType2").css("display", "none"), u.find("frpt-frf-txtYear2").css("display", "none"), u.find(".frpt-frf-groupdiv").css("display", "none"), u.find(".frpt_fr_StartToPeriod").css("display", "none"), u.find(".frpt_fr_PeriodToCurrent").css("display", "none"), u.find(".frpt_fr_BeginBal").css("display", "none"), t("#printLabelPeriod_" + r.windowNo).css("display", "none")) : at.val() == "R" ? (ir.css("display", "none"), u.find(".frpt-frf-CAmountType").css("display", "inherit"), u.find(".frpt-frf-cmbPeriod").css("display", "inherit"), u.find(".frpt-frf-txtYear").css("display", "inherit"), u.find(".frpt-frf-groupdiv").css("display", "inherit"), u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-txtYear2").css("display", "none"), u.find(".frpt-frf-cmbPeriodGroup").css("display", "none"), d.val("YE"), d.trigger("change"), u.find(".frpt-frf-cmbPeriodTypeQ").css("display", "none"), at.parent().css("width", ""), at.css("width", "100%")) : (at.parent().css("width", "100%"), at.css("width", "48.5%"), u.find(".frpt-frf-CAmountType").css("display", "none"), u.find(".frpt-frf-cmbPeriod").css("display", "none"), u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-groupdiv").css("display", "none"), u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-cmbPeriodType2").css("display", "none"), u.find("frpt-frf-txtYear2").css("display", "none"), u.find(".frpt-frf-CAmountType").css("display", "none"), u.find(".frpt-frf-txtYearC").css("display", "none"), u.find(".frpt-frf-cmbPeriod").css("display", "none"), u.find(".frpt-frf-cmbPeriodType").css("display", "none")); ec(); ob() } function dn(n) { n.originalEvent && (a = !0, et.css("display", "inherit")) } function gn(n) { n.originalEvent && (a = !0, ft.css("display", "inherit")); ku() } function ntt() { a = !0; ft.css("display", "inherit"); ku() } function nk() { a = !0; dt == 2 ? ft.css("display", "inherit") : et.css("display", "inherit") } function ttt() { a = !0; ft.css("display", "inherit") } function itt() { a = !0; ft.css("display", "inherit") } function rtt() { a = !0; ft.css("display", "inherit") } function utt() { a = !0; ft.css("display", "inherit") } function tk() { a = !0; dt == 2 ? ft.css("display", "inherit") : et.css("display", "inherit") } function ftt() { a = !0; et.css("display", "inherit") } function ett() { a = !0; ft.css("display", "inherit") } function ott() { a = !0; ft.css("display", "inherit") } function ik() { a = !0; dt == 2 ? ft.css("display", "inherit") : et.css("display", "inherit") } function stt() { a = !0; ft.css("display", "inherit") } function rk() { a = !0; dt == 2 ? ft.css("display", "inherit") : et.css("display", "inherit") } function htt() { a = !0; ft.css("display", "inherit"); ku() } function ctt() { a = !0; et.css("display", "inherit"); ku() } function ltt(n) { var i = t(n.target), r, u; if (kt && (oh = ot), i.data("type") == "tab1" || i.data("type") == "tab2" || i.data("type") == "tab3" || i.data("type") == "tab4") { if (dt != 2 || th()) if (dt != 3 || il() && (v.val() == "0" || ra())) { if (dt == 1 && !uw()) return } else return; else return; ne(); sb() } if (i.data("type") == "tab1") st.css("display", "none"), fs.css("display", "none"), es.css("display", "none"), te.css("display", "inherit"), i.siblings("li").removeClass("frpt-frf-selectedtabbtn"), i.addClass("frpt-frf-selectedtabbtn"), nh.height(kh.height() - fc.height()), dt = 1; else if (i.data("type") == "tab2") { var r = ai.find(".frpt-frf-top-wrap").height(), o = ai.find(".frpt-frf-rpt-line").height(), u = ai.find(".frpt-frf-report-detail h4").height(); si.height(ai.height() - (r + o + u + 40 + 37)); ot > 0 ? (s(!0), window.setTimeout(function () { st.css("display", "inherit"); fs.css("display", "none"); te.css("display", "none"); es.css("display", "none"); i.siblings("li").removeClass("frpt-frf-selectedtabbtn"); i.addClass("frpt-frf-selectedtabbtn"); vp ? (ku(), ok(), lw = k.val(), ih = !1, vp = !1) : (nit(), ls[0].style.visibility = "hidden", f.ReportLineSet != undefined && f.ReportLineSet != "" && ih ? k.val(f.ReportLineSet) : ih && f.ReportLineSet == undefined && k.val(lw), k.trigger("change"), ie.trigger("click")); s(!1) }, 20), dt = 2) : h("FRPT_SelectReport", eo, "red") } else i.data("type") == "tab3" ? (r = ai.find(".frpt-frf-top-wrap").height(), u = ai.find(".frpt-frf-report-detail>h4").height(), li.height(ai.height() - (r + u + 40 + 40)), ot > 0 ? (s(!0), window.setTimeout(function () { st.css("display", "none"); fs.css("display", "inherit"); te.css("display", "none"); es.css("display", "none"); i.siblings("li").removeClass("frpt-frf-selectedtabbtn"); i.addClass("frpt-frf-selectedtabbtn"); yp ? (tw(), ec(), ok(), aw = b.val(), ih = !1, yp = !1) : (ls[0].style.visibility = "hidden", e.ColumnSet_ID != undefined && e.ColumnSet_ID != "" && ih ? b.val(e.ColumnSet_ID) : ih && e.ColumnSet_ID == undefined && b.val(aw), b.trigger("change"), ue.trigger("click")); s(!1) }, 20), dt = 3) : h("FRPT_SelectReport", eo, "red")) : i.data("type") == "tab4" && (ot > 0 ? (s(!0), st.css("display", "none"), fs.css("display", "none"), te.css("display", "none"), es.css("display", "inherit"), i.siblings("li").removeClass("frpt-frf-selectedtabbtn"), i.addClass("frpt-frf-selectedtabbtn"), fy = !0, fy ? window.setTimeout(function () { dk(); eb(); fy = !1 }, 20) : ls[0].style.visibility = "hidden", dt = 4) : h("FRPT_SelectReport", eo, "red")) } function rr(n) { if (n.originalEvent && (ca = !0, a = !0, ft.css("display", "inherit")), t(n.target).is(":checked") && p.val() != null) { let i = rh.val(); i += i != "" ? "," + t(n.target).val() : t(n.target).val(); rh.val(i); pu.push(t(n.target)[0].id) } else { let i = rh.val(); pu = pu.filter(i => i !== t(n.target)[0].id); i = i.replace(t(n.target).val() == "" ? t(n.target).attr("id") : t(n.target).val(), ""); i = i.replace(",,", ","); i = i.replace(/^,|,$/g, ""); rh.val(i); t(n.target).prop("checked", !1) } } function att() { k.val() > 0 && VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { if (n) { s(!0); var i = k.find("option:selected").val(); i && t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteReportLineSet", async: !1, data: { id: i, repID: ot }, success: function (n) { var i = JSON.parse(n), r; if ((i != null || i.length > 0) && (h(i.Status, yt, "black"), i.IsError == !1)) { k.empty(); k.append(t('<Option value=""><\/option>')); for (r in i.LineSet) k.append(t('<Option value="' + i.LineSet[r].Id + '">' + VIS.Utility.encodeText(i.LineSet[r].Value) + "<\/option>")); k.val(i.LineSetID); k.trigger("change") } s(!1) }, error: function (n) { h("FRPT_RecordNotDeleted", yt, "red"); console.log(n); s(!1) } }) } }) } function vtt() { b.val() > 0 && VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { if (n) { s(!0); var i = b.find("option:selected").val(); i && t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteColumnLineSet", async: !1, data: { id: i, repID: ot }, success: function (n) { var i = JSON.parse(n), r; if (i != null && (h(i.Status, nt, "black"), i.IsError == !1)) { b.empty(); b.append(t('<Option value=""><\/option>')); for (r in i.ColumnSet) b.append(t('<Option value="' + i.ColumnSet[r].Id + '">' + VIS.Utility.encodeText(i.ColumnSet[r].Value) + "<\/option>")); b.val(i.ColumnSetID); b.trigger("change") } s(!1) }, error: function (n) { h("FRPT_RecordNotDeleted", nt, "red"); Console.log(n); s(!1) } }) } }) } function uk(n) { s(!0); var i = null; return t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/CheckDeleteReportLine", async: !1, data: { id: n }, success: function (n) { i = JSON.parse(n) }, error: function (n) { h("FRPT_UnableToDelete", yt, "red"); Console.log(n) } }), s(!1), i } function ytt() { if ((a = !1, VIS.Env.getCtx().getAD_Client_ID() == t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || dc != !1) && !wh) { var n = si.find(".frpt-fr-seletedliItem").val(), i = uk(n); i == 0 ? n && VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { i && (s(!0), t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteReportLine", async: !1, data: { id: n, repID: ot }, success: function () { h("FRPT_RecordDeleted", yt, "black"); f = {}; f.ReportLineSet = k.val(); ak(); s(!1) }, error: function (n) { h("FRPT_RecordNotDeleted", yt, "red"); Console.log(n); s(!1) } })) }) : h("FRPT_LineInUse", yt, "red") } } function fk(n) { s(!0); var i = null; return t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/CheckDeleteColumnLine", async: !1, data: { id: n }, success: function (n) { i = JSON.parse(n) }, error: function (n) { h("FRPT_UnableToDelete", nt, "red"); Console.log(n) } }), s(!1), i } function ptt() { if ((a = !1, VIS.Env.getCtx().getAD_Client_ID() == t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || gc != !1) && !bh) { var i = li.find(".frpt-fr-seletedliItem").val(), n = fk(i); n == 0 ? i && VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && (s(!0), t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteColumnLine", async: !1, data: { id: i }, success: function (n) { JSON.parse(n) == "" ? (h("FRPT_RecordDeleted", nt, "black"), e = {}, e.ColumnSet_ID = b.val(), yk()) : h("FRPT_RecordNotDeleted", nt, "red"); s(!1) }, error: function (n) { h("FRPT_UnableToDelete", nt, "red"); Console.log(n); s(!1) } })) }) : n == 1 ? (h("FRPT_ColumnExistInFormula", nt, "red"), br.prop("checked", !0), a = !1, et.css("display", "none")) : n == 2 ? (h("FRPT_ColumnExistInCondFormatting", nt, "red"), br.prop("checked", !0), a = !1, et.css("display", "none")) : n == 3 && h("FRPT_ColumnExistInPostingType", nt, "red") } } function wtt(n) { n.originalEvent && (a = !0, ft.css("display", "inherit")); ht.val() == "S" ? (se = [], to = [], st.find(".frpt-fr-RLine-segment").css("display", "inherit"), ye.css("display", "inherit"), ao.css("display", "inherit"), bs.css("display", "inherit"), st.find(".frpt-fr-LinkWith").css("display", "inherit"), st.find(".frpt-fr-NullableType").css("display", "inherit"), nc.css("display", "none"), ht.removeClass("vis-ev-col-mandatory"), fi.trigger("change"), st.find(".frpt-fr-groupName").addClass("frpt-frf-form-data"), st.find(".frpt-fr-groupName select").addClass("frpt-frf-groupname-width"), p.parent().addClass("frpt-marginleft"), ni.val(f.SubGroupName), ni.trigger("change")) : ht.val() == "C" ? (se = [], to = [], st.find(".frpt-fr-RLine-segment").css("display", "none"), ye.css("display", "none"), bs.css("display", "none"), ao.css("display", "none"), st.find(".frpt-fr-LinkWith").css("display", "none"), st.find(".frpt-fr-NullableType").css("display", "none"), oc("", pu), nc.css("display", "inherit"), ht.removeClass("vis-ev-col-mandatory"), st.find(".frpt-fr-groupName").addClass("frpt-frf-form-data"), st.find(".frpt-fr-groupName").css("display", "inherit"), st.find(".frpt-fr-groupName select").addClass("frpt-frf-groupname-width"), p.parent().removeClass("frpt-marginleft"), ni.val(f.GroupName), iw(!0)) : (ht.addClass("vis-ev-col-mandatory"), nc.css("display", "none"), ao.css("display", "none"), ye.css("display", "none")); ur.trigger("change"); ku() } function btt(n) { n.originalEvent && (a = !0, ft.css("display", "inherit")); fi.val() == "G" ? (ye.css("display", "inherit"), st.find(".frpt-fr-LinkWith").removeAttr("style"), st.find(".frpt-fr-groupName").css("display", "inherit"), st.find(".frpt-fr-groupName").addClass("frpt-frf-form-data"), st.find(".frpt-fr-groupName select").addClass("frpt-frf-groupname-width"), ht.val() == "S" && (bs.css("display", "inherit"), st.find(".frpt-fr-groupName").addClass("frpt-frf-form-data"), st.find(".frpt-fr-groupName select").addClass("frpt-frf-groupname-width")), ao.css("display", "none"), st.find(".frpt-fr-Type").css("display", "inherit")) : fi.val() == "C" ? (st.find(".frpt-fr-groupName").css("display", "none"), bs.css("display", "none"), ht.val() == "S" && (ao.css("display", "inherit"), tl(!0)), st.find(".frpt-fr-Type").css("display", "inherit"), ye.css("display", "inherit")) : (st.find(".frpt-fr-LinkWith").removeAttr("style"), st.find(".frpt-fr-groupName").css("display", "inherit"), ye.css("display", "none"), ao.css("display", "none"), bs.css("display", "none"), st.find(".frpt-fr-Type").css("display", "inherit")); ku() } function iw(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportLineFormula", async: !1, data: { id: tt }, success: function (t) { var i = JSON.parse(t); rl(i, n) }, error: function (n) { h("FRPT_UnableToloadFormula", yt, "red"); Console.log(n) } }) } function rw(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetColumnLineFormula", async: !1, data: { id: bt }, success: function (t) { var i = JSON.parse(t); ly(i, n) }, error: function (n) { h("FRPT_UnableToloadFormula", nt, "red"); Console.log(n) } }) } function ktt() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportLinePostingType", data: { id: tt }, success: function (n) { var t = JSON.parse(n); dtt(t); vy(t) }, error: function (n) { h("FRPT_UnableToloadPostingType", yt, "red"); Console.log(n) } }) } function dtt(n) { n.length == 0 ? ($divPostingTypeGroup.css("display", "none"), pf.removeClass("frpt-down-arrow"), pf.addClass("frpt-right-arrow")) : ($divPostingTypeGroup.css("display", "inherit"), pf.removeClass("frpt-right-arrow"), pf.addClass("frpt-down-arrow")) } function ek(n) { n.originalEvent && (a = !0, ft.css("display", "inherit")); var i = ni.find("option:selected").val(); io = i; i && t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetSubGroupsForLine", async: !1, data: { id: tt, groupID: io }, success: function (n) { var t = JSON.parse(n); wk(t) }, error: function (n) { h("FRPT_UnableToGetGroup", yt, "red"); Console.log(n) } }) } function uw() { return ri.val().trim().length <= 0 ? (VIS.ADialog.error("FRPT_NameMandatory"), ri.addClass("vis-ev-col-mandatory"), !1) : of.is(":checked") && ct.val().trim().length <= 0 ? (VIS.ADialog.error("FRPT_PrecisionMandatory"), ct.addClass("vis-ev-col-mandatory"), !1) : !0 } function th() { return vi.val().trim().length <= 0 ? (h("FRPT_HeaderLabelMandatory", yt, "red"), !1) : ee.val().trim().length <= 0 ? (h("FRPT_EnterSeqNo", yt, "red"), !1) : ht.val() <= 0 ? (h("FRPT_LineTypeMandatory", yt, "red"), !1) : ht.val() == "C" ? w2ui["gridLinkRLF_" + r.windowNo].records.length == 0 ? (h("FRPT_PleaseSelectAnExpression", yt, "red"), !1) : !0 : !0 } function il() { var n = VIS.Utility.Util.getValueOfInt(tr.val()), t = VIS.Utility.Util.getValueOfInt(ut.val()); return sr.val().trim().length <= 0 ? (h("FRPT_HeaderLabelMandatory", nt, "red"), !1) : ru.getValue() != null && ru.getValue().length <= 0 ? (h("FRPT_PrintLabelPeriodMandatory", nt, "red"), !1) : as.val().trim().length <= 0 ? (h("FRPT_EnterSeqNo", nt, "red"), !1) : at.val() == "C" ? w2ui["gridLinkCLF_" + r.windowNo].records.length == 0 ? (h("FRPT_PleaseSelectAnExpression", nt, "red"), !1) : !0 : w.val() == "P" && n == 0 ? (h("FRPT_InsertValueForPrevious", nt, "red"), !1) : w.val() == "N" && n == 0 ? (h("FRPT_InsertValueForNext", nt, "red"), !1) : d.val() == "YR" ? w.val() == "N" && t < n ? (h("FRPT_ToYearCannotLessFromYear", nt, "red"), !1) : w.val() == "N" && (t <= 0 || n <= 0) ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "P" && g.val() == "P" && t > n ? (h("FRPT_ToYearCannotGreaterFromYear", nt, "red"), !1) : w.val() == "P" && g.val() == "P" && (t <= 0 || n <= 0) ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "P" && g.val() == "N" && (t <= 0 || n <= 0) ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "P" && g.val() == "C" && n <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "C" && g.val() == "N" && t <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : !0 : d.val() == "YP" ? w.val() == "C" && it.val() == "N" && t <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "C" && it.val() == "P" && t <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "N" && n <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "N" && it.val() == "N" && (n <= 0 || t <= 0) ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : w.val() == "P" && n <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : (w.val() == "P" && it.val() == "P" || w.val() == "P" && it.val() == "N") && (n <= 0 || t <= 0) ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : !0 : d.val() == "MO" || d.val() == "TO" || d.val() == "YE" ? (w.val() == "N" || w.val() == "P") && n <= 0 ? (h("FRPT_PleaseEnterValueGreaterThenZero", nt, "red"), !1) : !0 : !0 } function ok() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetLookups", async: !1, datatype: "Json", type: "GET", data: { id: ot }, success: function (n) { var t = JSON.parse(n), i; if ((t != null || t != undefined) && (td(t), t.SelectedLines)) for (i = 0; i < t.SelectedLines.length; i++)dt == 2 ? t.SelectedLines[i].Id == "L" && (t.SelectedLines[i].Value ? (k.val(t.SelectedLines[i].Value), k.trigger("change")) : (k.val(""), k.trigger("change"))) : t.SelectedLines[i].Id == "C" && (t.SelectedLines[i].Value ? (b.val(t.SelectedLines[i].Value), b.trigger("change")) : (b.val(""), b.trigger("change"))) }, error: function (n) { console.log(n); s(!1) } }) } function gtt() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetDefaultAccumulation", datatype: "Json", type: "GET", success: function (n) { var t = JSON.parse(n); t != null && t != undefined && t > 0 && (vw = t) }, error: function (n) { console.log(n); s(!1) } }) } function nit() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetDimesions", async: !1, datatype: "Json", type: "GET", data: { id: ot }, success: function (n) { var i = JSON.parse(n), r; if (p.empty(), (i != null || i != undefined) && (i.Type != null || i.Type.length > 0)) { p.append(t('<Option value=""><\/option>')); p.append(t('<Option value="AD">All Dimension<\/option>')); for (r in i.Type) p.append(t('<Option value="' + i.Type[r].Id + '">' + VIS.Utility.encodeText(i.Type[r].Value) + "<\/option>")); p.val(f.DimTypeID) } s(!1) }, error: function (n) { console.log(n); s(!1) } }) } function tit() { var n = 0; !ro && k.val() > 0 && (n = k.val()); ro = !1; t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveReportLineSet", async: !1, datatype: "Json", type: "GET", cache: !1, data: { value: VIS.Utility.encodeText(gi.val()), id: n, repID: ot }, success: function (i) { var r = JSON.parse(i), u; t.isNumeric(parseInt(r)) ? (h("RecordSaved", yt, "black"), n == 0 && (k.append(t('<Option value="' + r + '">' + VIS.Utility.encodeText(gi.val()) + "<\/option>")), k.val(r), k.trigger("change")), u = gi.val(), k.find("option:selected").text(u), bf.prop("checked", !0)) : r == "" ? (h("RecordSaved", yt, "black"), k.val(r), k.trigger("change")) : VIS.ADialog.info(r); f.ReportLineSet = k.val(); ft.css("display", "none") }, error: function (n) { console.log(n) } }) } function iit() { var n = 0; !ro && b.val() > 0 && (n = b.val()); ro = !1; t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveColumnLineSet", async: !1, datatype: "Json", type: "GET", cache: !1, data: { value: VIS.Utility.encodeText(nr.val()), id: n, repID: ot }, success: function (i) { var r = JSON.parse(i), u; t.isNumeric(parseInt(r)) ? (h("RecordSaved", nt, "black"), n == 0 && (b.append(t('<Option value="' + r + '">' + VIS.Utility.encodeText(nr.val()) + "<\/option>")), b.val(r), b.trigger("change")), u = nr.val(), b.find("option:selected").text(u), br.prop("checked", !0)) : r == "" ? (h("RecordSaved", nt, "black"), b.val(r), b.trigger("change")) : VIS.ADialog.info(r); e.ColumnSet_ID = b.val() }, error: function (n) { console.log(n) } }) } function ua() { o == null && nw(); s(!0); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveReportLine", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(o), success: function (n) { var e = o[0], r = o[9], i, u; if (o = null, pe = null, a = !1, wh = !1, i = JSON.parse(n), i == "0") { s(!1); h("RecordNotSaved", yt, "red"); return } if (lv && h("RecordSaved", yt, "black"), f.HeaderLabel = vi.val(), f.PrintData = fe.val(), f.LinkType = ht.val(), f.PostingType = ur.val(), f.SeqNo = ee.val(), io = ni.val(), ht.val() == "C" ? f.GroupName = ni.val() : f.SubGroupName = ni.val(), f.RLListSources = t, f.RLIgnoreSuppressLine = t, f.RLListTrx = i[0].RLListTrx, f.RLRowLineFormatting = uu.getValue(), f.RLSourceLineFormatting = eu.getValue(), f.RSubGroupLineColumn = fu.getValue(), f.RLTrxLineFormatting = ou.getValue(), f.RLDGLineFormatting = au.getValue(), f.RLListSources = ph.prop("checked") ? "Y" : "N", f.RLIgnoreSuppressLine = vs.prop("checked") ? "Y" : "N", f.RLPrintLineOnName = ch.prop("checked") ? "Y" : "N", f.RLIgnoreColumnFormat = sf.getValue(), f.RLHorizontalLine = wf.getValue(), f.RLActive = bf.prop("checked") ? "Y" : "N", f.IsPrint = ar.prop("checked") ? "Y" : "N", f.DimTypeID = p.val(), f.LinkWith = fi.val(), ft.css("display", "none"), lv = !0, p.val() != null && p.val() != "" && (p.val() != "AD" ? (p.val() != "AC" || p.val() != "U1" || p.val() != "U2") && (f.ColDimensionTypeValue = ei) : (dr != null && (f.C_ACTIVITY_ID = dr.getValue()), du != null && (f.C_BPARTNER_ID = du.getValue()), gr != null && (f.C_CAMPAIGN_ID = gr.getValue()), fr != null && (f.Org_ID_1 = fr.getValue()), gu != null && (f.C_PROJECT_ID = gu.getValue()), nf != null && (f.M_PRODUCT_ID = nf.getValue()), lr != null && (f.C_SALESREGION_ID = lr.getValue()), yo != null && (f.UserElement1_ID = yo.getValue()), po != null && (f.UserElement2_ID = po.getValue()), wo != null && (f.UserElement3_ID = wo.getValue()), bo != null && (f.UserElement4_ID = bo.getValue()), ko != null && (f.UserElement5_ID = ko.getValue()), go != null && (f.UserElement6_ID = go.getValue()), ns != null && (f.UserElement7_ID = ns.getValue()), ts != null && (f.UserElement8_ID = ts.getValue()), is != null && (f.UserElement9_ID = is.getValue()), rs != null && (f.FRPT_IsUnselectedDimension = rs.getValue()))), tt = r != "" || r != 0 ? r : i, ah && ah.length > 0 && tt == 0 ? (tt = i, rd()) : lt && lt.hasData() && tt == 0 ? (lt.saveArray(i, "R"), lt.clearData()) : vh && vh.length > 0 && tt == 0 && (tt = i, id()), r = 0 || r == "") { t(si.children()).removeClass("frpt-fr-seletedliItem"); u = t('<li value="' + tt + '" clientID=' + VIS.Env.getCtx().getAD_Client_ID() + ' class="frpt-fr-seletedliItem">' + VIS.Utility.encodeText(vi.val()) + "<\/li>"); si.append(u); u.on("click", vk) } rit(tt, e); s(!1) }, error: function (n) { o = null; console.log(n); s(!1) } }) } function hy() { s(!0); o == null && nw(); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveColumnLine", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(o), success: function (n) { var f = o[0], i = o[9], r, u; if (o = null, pe = null, a = !1, bh = !1, r = JSON.parse(n), r == "-1") { s(!1); h("RecordNotSaved", nt, "red"); return } if (bl && h("RecordSaved", nt, "black"), wi.val() == "-0" && wi.val(0), bl = !0, et.css("display", "none"), e.HeaderLabel = sr.val(), e.PrintData = le.val(), e.SeqNo = as.val(), e.PostingType = ff.val(), e.ColDimensionType = v.val(), e.ColDimensionTypeValue = bu, e.Budget = uo.val(), e.AmountType = vf.val(), e.ColumnType = at.val(), e.RelativePeriod = w.val() == "C" ? 0 : w.val() == "P" ? -1 * tr.val() : w.val() == "N" ? tr.val() : "", e.IsPrint = er.prop("checked") ? "Y" : "N", e.PeriodID = d.val(), d.val() == "MO" || d.val() == "TO" || d.val() == "YE" ? (e.StartToPeriod = yi.prop("checked") ? "Y" : "N", e.PeriodToStart = pi.prop("checked") ? "Y" : "N", e.PeriodGroup = "", e.PeriodGroupType = "", e.RelativePeriod2 = "") : (e.StartToPeriod = yi.prop("checked") ? "Y" : "N", e.PeriodToStart = pi.prop("checked") ? "Y" : "N", e.PeriodGroup = ii.val(), e.PeriodGroupType = it.val() == "F" ? hr.val() : "", e.RelativePeriod2 = d.val() == "YP" ? it.val() == "N" ? ut.val() : it.val() == "P" ? -1 * ut.val() : it.val() == "C" ? 0 : "" : g.val() == "N" ? ut.val() : g.val() == "P" ? -1 * ut.val() : g.val() == "C" ? 0 : d.val() != "YP" ? ut.val() < 0 ? -1 * ut.val() : ut.val() : ut.val()), e.RCRowLineFormatting = su.getValue(), e.RCSourceLineFormatting = cu.getValue(), e.RCTrxLineFormatting = lu.getValue(), e.RCSubGroupLineFormatting = hu.getValue(), e.RCDGLineFormatting = vu.getValue(), e.RCIsActive = br.prop("checked") ? "Y" : "N", e.NotIncludeType = fo.val(), e.ColumnPrecision = wi.val(), e.PrintLabelPeriod = ru.getValue(), bt = i != "" || i != 0 ? i : r, lt && lt.hasData() && bt == 0 && (lt.saveArray(r, "C"), lt.clearData()), s(!1), i = 0 || i == "") { t(li.children()).removeClass("frpt-fr-seletedliItem"); u = t('<li value="' + bt + '" clientID=' + VIS.Env.getCtx().getAD_Client_ID() + ' class="frpt-fr-seletedliItem">' + VIS.Utility.encodeText(sr.val()) + "<\/li>"); li.append(u); u.on("click", pk) } uit(bt, f) }, error: function (n) { o = null; console.log(n); s(!1) } }) } function sk(n) { n.length != 0 && (a = !1, s(!0), t(si.children()).removeClass("frpt-fr-seletedliItem"), n.hasClass("frpt-fr-seletedliItem") ? n.removeClass("frpt-fr-seletedliItem") : (n.addClass("frpt-fr-seletedliItem"), fa(n.val())), tt = n.val()) } function hk(n) { n.length != 0 && (a = !1, s(!0), t(li.children()).removeClass("frpt-fr-seletedliItem"), n.hasClass("frpt-fr-seletedliItem") ? n.removeClass("frpt-fr-seletedliItem") : (n.addClass("frpt-fr-seletedliItem"), cy(n.val())), bt = n.val()) } function fw() { si.find(".frpt-fr-seletedliItem").is(":last-child") ? (bi.attr("disabled", !0), bi.css("opacity", "0.5")) : (bi.attr("disabled", !1), bi.css("opacity", "1")) } function ck() { si.find(".frpt-fr-seletedliItem").is(":first-child") ? (hi.attr("disabled", !0), hi.css("opacity", "0.5")) : (hi.attr("disabled", !1), hi.css("opacity", "1")) } function ew() { li.find(".frpt-fr-seletedliItem").is(":last-child") ? (ki.attr("disabled", !0), ki.css("opacity", "0.5")) : (ki.attr("disabled", !1), ki.css("opacity", "1")) } function lk() { li.find(".frpt-fr-seletedliItem").is(":first-child") ? (ci.attr("disabled", !0), ci.css("opacity", "0.5")) : (ci.attr("disabled", !1), ci.css("opacity", "1")) } function ow(n) { n ? (ar.attr("disabled", !1), ar.css("opacity", "1"), u.find("#FRPT_ReportLineRightDiv_" + r.windowNo).find("#FRPT_ReportLineDisableDiv" + r.windowNo).remove()) : (ar.attr("disabled", !0), ar.css("opacity", "0.5"), u.find("#FRPT_ReportLineRightDiv_" + r.windowNo).find("#FRPT_ReportLineDisableDiv" + r.windowNo).length == 0 && u.find("#FRPT_ReportLineRightDiv_" + r.windowNo).append("<div id='FRPT_ReportLineDisableDiv" + r.windowNo + "' style='position:absolute;height:100%;width:100%;background-color: #ffffff;opacity:0.5;'><\/div>")) } function sw(n) { n ? (er.attr("disabled", !1), er.css("opacity", "1"), u.find("#FRPT_ReportColumnRightDiv_" + r.windowNo).find("#FRPT_ReportColumnDisableDiv" + r.windowNo).remove()) : (er.attr("disabled", !0), er.css("opacity", "0.5"), u.find("#FRPT_ReportColumnRightDiv_" + r.windowNo).find("#FRPT_ReportColumnDisableDiv" + r.windowNo).length == 0 && u.find("#FRPT_ReportColumnRightDiv_" + r.windowNo).append("<div id='FRPT_ReportColumnDisableDiv" + r.windowNo + "' style='position:absolute;height:100%;width:100%;background-color: #ffffff;opacity:0.5;'><\/div>")) } function rit(n, i) { t("#ulReportLine_" + r.windowNo + " li[value='" + n + "']").text(i) } function uit(n, i) { t("#ulreportcolumn_" + r.windowNo + " li[value='" + n + "']").text(i) } function ak() { si.empty(); var n = 0; k.val() > 0 && (n = k.val()); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportLine", async: !1, datatype: "Json", type: "GET", cache: !1, data: { reportSetlineId: n }, success: function (n) { var r = JSON.parse(n), u, i; if (gb(), r != null && r != undefined) { for (u = null, i = 0; i < r.length; i++) { u = VIS.Env.getCtx().getAD_Client_ID() == r[i].AD_Client_ID ? t("<li value=" + r[i].Id + " clientID=" + r[i].AD_Client_ID + ">" + VIS.Utility.encodeText(r[i].Value) + "<\/li>") : t("<li class='frpt-AD_Client-Color' value=" + r[i].Id + " clientID=" + r[i].AD_Client_ID + ">" + VIS.Utility.encodeText(r[i].Value) + "<\/li>"); si.append(u); u.on("click", vk); i == 0 && (u.trigger("click"), hi.attr("disabled", !0), hi.css("opacity", "0.5")) } fw() } else ow(!1) }, error: function (n) { console.log(n); grid_gridLinkAccount; s(!1) } }) } function vk(n) { if (n.originalEvent) if (ht.val() == "C") { if (w2ui["gridLinkRLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", yt, "red"); return } if (th()) ne(); else return } else if (th()) ne(); else return; s(!0); t(si.children()).removeClass("frpt-fr-seletedliItem"); t(this).hasClass("frpt-fr-seletedliItem") ? t(this).removeClass("frpt-fr-seletedliItem") : (t(this).addClass("frpt-fr-seletedliItem"), a ? tt = t(this).attr("Value") : fa(t(this).attr("Value")), fw(), ck()) } function yk() { li.empty(); var n = 0; b.val() > 0 && (n = b.val()); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetColumnLine", async: !0, datatype: "Json", type: "GET", cache: !1, data: { id: n }, success: function (n) { var i = JSON.parse(n), u, r; if (tw(), i != null && i != undefined) { for (wu = i, u = null, r = 0; r < i.length; r++) { u = VIS.Env.getCtx().getAD_Client_ID() == i[r].AD_Client_ID ? t("<li value=" + i[r].Id + " clientID=" + i[r].AD_Client_ID + ">" + VIS.Utility.encodeText(i[r].Value) + "<\/li>") : t("<li class='frpt-AD_Client-Color' value=" + i[r].Id + " clientID=" + i[r].AD_Client_ID + ">" + VIS.Utility.encodeText(i[r].Value) + "<\/li>"); li.append(u); u.on("click", pk); r == 0 && (u.trigger("click"), ci.attr("disabled", !0), ci.css("opacity", "0.5")) } ew() } else at.val("R"), at.trigger("change"), sw(!1) }, error: function (n) { console.log(n); s(!1) } }) } function pk(n) { var i = !0; if (a) if (v.val() == "AC") { if (di.val() == -1 || di.val() == null) return VIS.ADialog.error("ValidateElement"), di.focus(), !1 } else if (v.val() == "AY") { if (ks.val() == -1 || ks.val() == null) return VIS.ADialog.error("ValidateActivity"), ks.focus(), !1 } else if (v.val() == "BP") { if (tc.val() == "") return VIS.ADialog.error("ValidateBPartner"), tc.focus(), !1 } else if (v.val() == "LF" || v.val() == "LT") { if (uc.val() == "") return VIS.ADialog.error("ValidateLocation"), uc.focus(), !1 } else if (v.val() == "MC") { if (ds.val() == -1 || ds.val() == null) return VIS.ADialog.error("ValidateCamp"), ds.focus(), !1 } else if (v.val() == "OO" || v.val() == "OT") { if (hf.val() == -1 || hf.val() == null) return VIS.ADialog.error("ValidateOrg"), hf.focus(), !1 } else if (v.val() == "PJ") { if (ic.val() == "") return VIS.ADialog.error("ValidateProject"), ic.focus(), !1 } else if (v.val() == "PR") { if (rc.val() == "") return VIS.ADialog.error("ValidateProduct"), rc.focus(), !1 } else { if (v.val() == "SA") return !0; if (v.val() == "SR") { if (gs.val() == -1 || gs.val() == null) return VIS.ADialog.error("ValidateSales"), gs.focus(), !1 } else if (v.val() == "U1" || v.val() == "U2") { if (di.val() == -1 || di.val() == null) return VIS.ADialog.error("ValidateElement"), di.focus(), !1; if (txtAccountElement.val() == "") return VIS.ADialog.error("ValidateAcctElement"), txtAccountElement.focus(), !1 } else if ((v.val() == "X1" || v.val() == "X2" || v.val() == "X3" || v.val() == "X4" || v.val() == "X5" || v.val() == "X6" || v.val() == "X7" || v.val() == "X8" || v.val() == "X9") && (vo.val() == -1 || vo.val() == null)) return VIS.ADialog.error("ValidateUElement"), vo.focus(), !1 } if (n.originalEvent) { if (v.val() != "0" && !ra()) return; if (at.val() == "C") { if (w2ui["gridLinkCLF_" + r.windowNo].records.length == 0) { h("FRPT_PleaseSelectAnExpression", nt, "red"); return } il() ? ne() : i = !1 } else il() ? ne() : i = !1 } s(!0); i ? (t(li.children()).removeClass("frpt-fr-seletedliItem"), t(this).hasClass("frpt-fr-seletedliItem") ? t(this).removeClass("frpt-fr-seletedliItem") : (t(this).addClass("frpt-fr-seletedliItem"), a || cy(t(this).attr("Value")), ew(), lk()), bt = t(this).attr("Value")) : s(!1) } function fit(n) { tt = n; f.selectedReportLine = tt; s(!0); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportLineData", async: !1, datatype: "Json", type: "GET", cache: !1, data: { reportLineId: n, accountOnly: !0 }, success: function (n) { var t = JSON.parse(n); oa(t[0].GridLinkAccount) }, error: function (n) { console.log(n); s(!1) } }) } function fa(n) { tt = n; f.selectedReportLine = tt; s(!0); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportLineData", async: !0, datatype: "Json", type: "GET", cache: !1, data: { reportLineId: n, accountOnly: !1 }, success: function (n) { var t = JSON.parse(n), i; t.length > 0 && t != null && t != undefined && (vi.val(t[0].HeaderLabel), f.HeaderLabel = t[0].HeaderLabel, vi.removeClass("vis-ev-col-mandatory"), fe.val(t[0].PrintData), f.PrintData = t[0].PrintData, ee.val(t[0].SeqNo), ph.prop("checked", t[0].RLListSources == "Y" ? !0 : !1), vs.prop("checked", t[0].RLIgnoreSuppressLine == "Y" ? !0 : !1), ch.prop("checked", t[0].RLPrintLineOnName == "Y" ? !0 : !1), sf.setValue(null), t[0].RLIgnoreColumnFormat != "" && t[0].RLIgnoreColumnFormat != null && sf.setValue(t[0].RLIgnoreColumnFormat), f.RLIgnoreColumnFormat = t[0].RLIgnoreColumnFormat, t[0].RLHorizontalLine != "" ? wf.setValue(t[0].RLHorizontalLine) : (wf.setValue(""), wf.setValue(null)), f.RLHorizontalLine = t[0].RLHorizontalLine, bf.prop("checked", t[0].RLisActive == "Y" ? !0 : !1), f.RLActive = t[0].RLisActive, f.RLListSources = t[0].RLListSources, f.RLListTrx = t[0].RLListTrx, rt(ph), rt(vs), rt(ch), rt(bf), ur.val(t[0].PostingType), f.PostingType = t[0].PostingType, ur.trigger("change"), ur.removeClass("vis-ev-col-mandatory"), f.SeqNo = t[0].SeqNo, ar.prop("checked", t[0].IsPrint == "Y" ? !0 : !1), f.IsPrint = t[0].IsPrint, p.val(t[0].DimTypeID), f.DimTypeID = t[0].DimTypeID, p.trigger("change"), f.FRPT_ConsiderNullDimension = t[0].FRPT_ConsiderNullDimension, oc("", pu), oc(t[0].FRPT_ConsiderNullDimension, ""), i = t[0].DimTypeID, i == "AD" ? window.setTimeout(function () { dr != null && t[0].C_ACTIVITY_ID != "" && (dr.setValue(t[0].C_ACTIVITY_ID), f.C_ACTIVITY_ID = t[0].C_ACTIVITY_ID); du != null && t[0].C_BPARTNER_ID != "" && (du.setValue(t[0].C_BPARTNER_ID), f.C_BPARTNER_ID = t[0].C_BPARTNER_ID); gr != null && t[0].C_CAMPAIGN_ID != "" && (gr.setValue(t[0].C_CAMPAIGN_ID), f.C_CAMPAIGN_ID = t[0].C_CAMPAIGN_ID); fr != null && t[0].Org_ID_1 != "" && (fr.setValue(t[0].Org_ID_1), f.Org_ID_1 = t[0].Org_ID_1); gu != null && t[0].C_PROJECT_ID != "" && (gu.setValue(t[0].C_PROJECT_ID), f.C_PROJECT_ID = t[0].C_PROJECT_ID); nf != null && t[0].M_PRODUCT_ID != "" && (nf.setValue(t[0].M_PRODUCT_ID), f.M_PRODUCT_ID = t[0].M_PRODUCT_ID); lr != null && t[0].C_SALESREGION_ID != "" && (lr.setValue(t[0].C_SALESREGION_ID), f.C_SALESREGION_ID = t[0].C_SALESREGION_ID); yo != null && t[0].UserElement1_ID != "" && (yo.setValue(t[0].UserElement1_ID), f.UserElement1_ID = t[0].UserElement1_ID); po != null && t[0].UserElement2_ID != "" && (po.setValue(t[0].UserElement2_ID), f.UserElement2_ID = t[0].UserElement2_ID); wo != null && t[0].UserElement3_ID != "" && (wo.setValue(t[0].UserElement3_ID), f.UserElement3_ID = t[0].UserElement3_ID); bo != null && t[0].UserElement4_ID != "" && (bo.setValue(t[0].UserElement4_ID), f.UserElement4_ID = t[0].UserElement4_ID); ko != null && t[0].UserElement5_ID != "" && (ko.setValue(t[0].UserElement5_ID), f.UserElement5_ID = t[0].UserElement5_ID); go != null && t[0].UserElement6_ID != "" && (go.setValue(t[0].UserElement6_ID), f.UserElement6_ID = t[0].UserElement6_ID); ns != null && t[0].UserElement7_ID != "" && (ns.setValue(t[0].UserElement7_ID), f.UserElement7_ID = t[0].UserElement7_ID); ts != null && t[0].UserElement8_ID != "" && (ts.setValue(t[0].UserElement8_ID), f.UserElement8_ID = t[0].UserElement8_ID); is != null && t[0].UserElement9_ID != "" && (is.setValue(t[0].UserElement9_ID), f.UserElement9_ID = t[0].UserElement9_ID); rs != null && t[0].FRPT_IsUnselectedDimension != "" && (rs.setValue(t[0].FRPT_IsUnselectedDimension), f.FRPT_IsUnselectedDimension = t[0].FRPT_IsUnselectedDimension) }, 1e3) : i == "AC" || i == "U1" || i == "U2" || (i == "AY" && t[0].C_ACTIVITY_ID != "" ? (l.setValue(t[0].C_ACTIVITY_ID), f.ColDimensionTypeValue = t[0].C_ACTIVITY_ID) : i == "BP" && t[0].C_BPARTNER_ID != "" ? (l.setValue(t[0].C_BPARTNER_ID), f.ColDimensionTypeValue = t[0].C_BPARTNER_ID) : (i == "LF" || i == "LT") && t[0].C_LOCATION_ID != "" ? (l.setValue(t[0].C_LOCATION_ID), f.ColDimensionTypeValue = t[0].C_LOCATION_ID) : i == "MC" && t[0].C_CAMPAIGN_ID != "" ? (l.setValue(t[0].C_CAMPAIGN_ID), f.ColDimensionTypeValue = t[0].C_CAMPAIGN_ID) : (i == "OO" || i == "OT") && t[0].Org_ID_1 != "" ? (l.setValue(t[0].Org_ID_1), f.ColDimensionTypeValue = t[0].Org_ID_1) : i == "PJ" && t[0].C_PROJECT_ID != "" ? (l.setValue(t[0].C_PROJECT_ID), f.ColDimensionTypeValue = t[0].C_PROJECT_ID) : i == "PR" && t[0].M_PRODUCT_ID != "" ? (l.setValue(t[0].M_PRODUCT_ID), f.ColDimensionTypeValue = t[0].M_PRODUCT_ID) : i == "SA" || (i == "SR" && t[0].C_SALESREGION_ID != "" ? (l.setValue(t[0].C_SALESREGION_ID), f.ColDimensionTypeValue = t[0].C_SALESREGION_ID) : i == "U1" || i == "U2" || (i == "X1" || i == "X2" || i == "X3" || i == "X4" || i == "X5" || i == "X6" || i == "X7" || i == "X8" || i == "X9") && t[0].DimensionValue != "" && window.setTimeout(function () { l != "" && l.setValue(t[0].DimensionValue); f.ColDimensionTypeValue = t[0].DimensionValue }, 10))), io = t[0].GroupID, rf && (rf.clear(), rf.refresh()), or && (or.clear(), or.refresh()), ve && (ve.clear(), ve.refresh()), uf && (to = [], uf.clear(), uf.refresh()), fi.val(t[0].LinkWith), f.LinkWith = t[0].LinkWith, f.GridLinkAccount = t[0].GridLinkAccount, fi.trigger("change"), ht.val(t[0].LinkType), f.LinkType = t[0].LinkType, ht.removeClass("vis-ev-col-mandatory"), ht.trigger("change"), ni.val(t[0].GroupID), ht.val() == "C" && ni.val() != "" ? f.GroupName = t[0].GroupID : ht.val() == "S" && ni.val() != "" && (f.SubGroupName = t[0].GroupID), f.RLRowLineFormatting = t[0].RLRowLineFormatting, f.RLSourceLineFormatting = t[0].RLSourceLineFormatting, f.RSubGroupLineColumn = t[0].SubColumn, f.RLTrxLineFormatting = t[0].RLTrxLineFormatting, f.RLDGLineFormatting = t[0].RLDGLineFormatting, uu.setValue(t[0].RLRowLineFormatting), eu.setValue(t[0].RLSourceLineFormatting), fu.setValue(t[0].SubColumn), ou.setValue(t[0].RLTrxLineFormatting), au.setValue(t[0].RLDGLineFormatting), t[0].LinkType != "C" ? (t[0].GridLinkAccount && oa(t[0].GridLinkAccount), ktt()) : iw(), VIS.Env.getCtx().getAD_Client_ID() != t[0].AD_Client_ID ? sc(!1) : sc(!0)); ft.css("display", "none"); (uu.getValue() == "-1" || uu.getValue() == "0" || uu.getValue() == "") && (eu.getValue() == "-1" || eu.getValue() == "0" || eu.getValue() == "") && (fu.getValue() == "-1" || fu.getValue() == "0" || fu.getValue() == "") && (ou.getValue() == "-1" || ou.getValue() == "0" || ou.getValue() == "") && (au.getValue() == "-1" || au.getValue() == "0" || au.getValue() == "") ? (u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo).addClass("frpt-right-arrow"), u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo).removeClass("frpt-down-arrow"), u.find("#reportLineDisplayControlsDiv_" + r.windowNo).css("display", "none")) : (u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo).addClass("frpt-down-arrow"), u.find("#reportLineColorControlsHeaderSpan_" + r.windowNo).removeClass("frpt-right-arrow"), u.find("#reportLineDisplayControlsDiv_" + r.windowNo).css("display", "inherit")); VIS.Env.getCtx().getAD_Client_ID() != t[0].AD_Client_ID ? sc(!1) : sc(!0); s(!1) }, error: function (n) { console.log(n); s(!1) } }); ku() } function oc(n, t) { let i = []; (n != "" ? i = n.split(",") : t != "" && (i = t), i.length != 0) && i.forEach(function (n) { n == "AY" ? la.trigger("click") : n == "BP" ? $BP.trigger("click") : n == "MC" ? $MC.trigger("click") : n == "LF" ? $LF.trigger("click") : n == "LT" ? $LT.trigger("click") : n == "OT" ? $OT.trigger("click") : n == "PR" ? $PR.trigger("click") : n == "PJ" ? $PJ.trigger("click") : n == "SR" ? $SR.trigger("click") : n == "X1" ? $X1.trigger("click") : n == "X2" ? $X2.trigger("click") : n == "X3" ? $X3.trigger("click") : n == "X4" ? $X4.trigger("click") : n == "X5" ? $X5.trigger("click") : n == "X6" ? $X6.trigger("click") : n == "X7" ? $X7.trigger("click") : n == "X8" ? $X8.trigger("click") : n == "X9" && $X9.trigger("click") }) } function sc(n) { n == !0 ? (ge.css("opacity", "1"), re.css("opacity", "1"), ar.attr("disabled", !1), dc = !0, u.find("#FRPT_ReportLineRightDiv_" + r.windowNo).find("input, select").attr("disabled", !1), tl(!0), ay(!0), ey(!0), uu.setReadOnly(!1), eu.setReadOnly(!1), fu.setReadOnly(!1), ou.setReadOnly(!1), au.setReadOnly(!1)) : (ge.css("opacity", "0.5"), re.css("opacity", "0.5"), dc = !1, ar.attr("disabled", !0), u.find("#FRPT_ReportLineRightDiv_" + r.windowNo).find("input, select").attr("disabled", !0), tl(), ay(), ey(), uu.setReadOnly(!0), eu.setReadOnly(!0), fu.setReadOnly(!0), ou.setReadOnly(!0), au.setReadOnly(!0)) } function cy(n) { bt = n; e.selectedColumnLine = bt; s(!0); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetColumnLineData", async: !0, datatype: "Json", type: "GET", cache: !1, data: { id: n }, success: function (n) { var i = JSON.parse(n), f, o; i.length > 0 && i != null && i != undefined && (e.AmountType = i[0].AmountType, e.Budget = i[0].Budget, e.ColumnType = i[0].ColumnType, e.NotIncludeType = i[0].NotIncludeType, e.ColumnPrecision = i[0].ColumnPrecision, e.DimTypeID = i[0].DimTypeID, e.GridLinkAccount = i[0].GridLinkAccount, e.GroupID = i[0].GroupID, e.HeaderLabel = i[0].HeaderLabel, e.IsPrint = i[0].IsPrint, e.LinkType = i[0].LinkType, e.LinkWith = i[0].LinkWith, e.PeriodGroup = i[0].PeriodGroup, e.PeriodGroupType = i[0].PeriodGroupType, e.PeriodID = i[0].PeriodID, e.PeriodToStart = i[0].PeriodToStart, e.PostingType = i[0].PostingType, e.PrintData = i[0].PrintData, e.RelativePeriod = i[0].RelativePeriod, e.RelativePeriod2 = i[0].RelativePeriod2, e.ReportLineID = i[0].ReportLineID, e.SeqNo = i[0].SeqNo, e.StartToPeriod = i[0].StartToPeriod, e.SubGroups = i[0].SubGroups, e.FontColor = i[0].FontColor, e.FontWeight = i[0].FontWeight, e.BackgroundColor = i[0].BackgroundColor, e.FormatSubgroupLines = i[0].FormatSubgroupLines, e.FormatTrxLines = i[0].FormatTrxLines, e.RCRowLineFormatting = i[0].RCRowLineFormatting, e.RCSourceLineFormatting = i[0].RCSourceLineFormatting, e.RCTrxLineFormatting = i[0].RCTrxLineFormatting, e.RCSubGroupLineFormatting = i[0].SubColumn, e.RCIsActive = i[0].RCisActive, e.RCDGLineFormatting = i[0].RCDGLineFormatting, e.PrintLabelPeriod = i[0].PrintLabelPeriod, e.BeginBal = i[0].BeginBal, sr.val(i[0].HeaderLabel), sr.removeClass("vis-ev-col-mandatory"), ru.setValue(""), ru.setValue("L"), i[0].PrintLabelPeriod != "" && ru.setValue(i[0].PrintLabelPeriod), t("#printLabelPeriod_" + r.windowNo + " select") != undefined && t("#printLabelPeriod_" + r.windowNo + " select").removeClass("vis-ev-col-mandatory"), le.val(i[0].PrintData), as.val(i[0].SeqNo), ff.val(i[0].PostingType), ff.trigger("change"), v.val(i[0].ColDimensionType), kp(i[0].ColDimensionType), f = v.val(), e.ColDimensionType = i[0].ColDimensionType, f == "AC" || f == "U1" || f == "U2" || (f == "AY" ? (y.setValue(i[0].C_ACTIVITY_ID), e.ColDimensionTypeValue = i[0].C_ACTIVITY_ID) : f == "BP" ? (y.setValue(i[0].C_BPARTNER_ID), e.ColDimensionTypeValue = i[0].C_BPARTNER_ID) : (f == "LF" || f == "LT") && i[0].C_LOCATION_ID != "" ? (y.setValue(i[0].C_LOCATION_ID), e.ColDimensionTypeValue = i[0].C_LOCATION_ID) : f == "MC" ? (y.setValue(i[0].C_CAMPAIGN_ID), e.ColDimensionTypeValue = i[0].C_CAMPAIGN_ID) : f == "OO" || f == "OT" ? (y.setValue(i[0].Org_ID), e.ColDimensionTypeValue = i[0].Org_ID) : f == "PJ" ? (y.setValue(i[0].C_PROJECT_ID), e.ColDimensionTypeValue = i[0].C_PROJECT_ID) : f == "PR" ? (y.setValue(i[0].M_PRODUCT_ID), e.ColDimensionTypeValue = i[0].M_PRODUCT_ID) : f == "SA" || (f == "SR" ? (y.setValue(i[0].C_SALESREGION_ID), e.ColDimensionTypeValue = i[0].C_SALESREGION_ID) : f == "U1" || f == "U2" || (f == "X1" || f == "X2" || f == "X3" || f == "X4" || f == "X5" || f == "X6" || f == "X7" || f == "X8" || f == "X9") && window.setTimeout(function () { y != "" && i[0].DimensionValue != "0" && y.setValue(i[0].DimensionValue); e.ColDimensionTypeValue = i[0].DimensionValue }, 100))), er.prop("checked", i[0].IsPrint == "Y" ? !0 : !1), uo.val(i[0].Budget), vf.val(i[0].AmountType), vf.trigger("change"), fo.val(i[0].NotIncludeType), i[0].ColumnPrecision >= 0 ? wi.val(i[0].ColumnPrecision) : wi.val(""), at.val(i[0].ColumnType), at.trigger("change"), at.val() != "C" && (d.val(i[0].PeriodID), d.trigger("change"), (d.val() == "MO" || d.val() == "TO" || d.val() == "YE") && (ii.val(""), hr.val(""), ut.val("")), g.val(""), ut.val(), i[0].RelativePeriod == 0 ? (w.val("C"), tr.val(0), u.find(".frpt-frf-txtYear").css("display", "none"), u.find(".frpt-frf-cmbPeriodType").removeClass("frpt-frf-thirdfourth-control"), g.find("option[value=P]").prop("disabled", !0)) : i[0].RelativePeriod < 0 ? (w.val("P"), w.trigger("change"), tr.val(-1 * i[0].RelativePeriod)) : (w.val("N"), w.trigger("change"), tr.val(i[0].RelativePeriod)), i[0].PeriodGroup && i[0].PeriodID == "YP" ? (ii.val(i[0].PeriodGroup), ii.trigger("change"), hr.val(i[0].PeriodGroupType), o = i[0].RelativePeriod2, i[0].PeriodGroupType ? (it.val("F"), it.trigger("change"), hr.val(i[0].PeriodGroupType)) : o && (o > 0 ? (it.val("N"), it.trigger("change"), ut.val(o)) : o < 0 ? (it.val("P"), it.trigger("change"), ut.val(-1 * o)) : (it.val("C"), it.trigger("change"), ut.val(o)))) : i[0].PeriodID == "YR" && (o = i[0].RelativePeriod2, o && (o > 0 ? (g.val("N"), g.trigger("change"), ut.val(o)) : o < 0 ? (g.val("P"), g.trigger("change"), ut.val(-1 * o)) : (g.val("C"), g.trigger("change"), ut.val(o)))), yi.prop("checked", i[0].StartToPeriod == "Y" ? !0 : !1), pi.prop("checked", i[0].PeriodToStart == "Y" ? !0 : !1), tf.prop("checked", i[0].BeginBal == "Y" ? !0 : !1)), br.prop("checked", i[0].RCisActive == "Y" ? !0 : !1), rt(br), i[0].ColumnType == "C" ? (rw(), ir && ir.css("display", "inherit")) : ir && ir.css("display", "none"), hw(), w2ui["gridConditionalFormatting_" + r.windowNo].records.length == 0 ? (df.css("display", "none"), gf.removeClass("frpt-down-arrow"), gf.addClass("frpt-right-arrow")) : (df.css("display", "inherit"), gf.removeClass("frpt-right-arrow"), gf.addClass("frpt-down-arrow")), su.setValue(i[0].RCRowLineFormatting), hu.setValue(i[0].SubColumn), cu.setValue(i[0].RCSourceLineFormatting), lu.setValue(i[0].RCTrxLineFormatting), vu.setValue(i[0].RCDGLineFormatting), (su.getValue() == "-1" || su.getValue() == "0" || su.getValue() == "") && (cu.getValue() == "-1" || cu.getValue() == "0" || cu.getValue() == "") && (hu.getValue() == "-1" || hu.getValue() == "0" || hu.getValue() == "") && (lu.getValue() == "-1" || lu.getValue() == "0" || lu.getValue() == "") && (vu.getValue() == "-1" || vu.getValue() == "0" || vu.getValue() == "") ? (u.find("#reportcolumnColorControlsSpan_" + r.windowNo).addClass("frpt-right-arrow"), u.find("#reportcolumnColorControlsSpan_" + r.windowNo).removeClass("frpt-down-arrow"), u.find("#reportColumnDisplayControlsDiv_" + r.windowNo).css("display", "none")) : (u.find("#reportcolumnColorControlsSpan_" + r.windowNo).addClass("frpt-down-arrow"), u.find("#reportcolumnColorControlsSpan_" + r.windowNo).removeClass("frpt-right-arrow"), u.find("#reportColumnDisplayControlsDiv_" + r.windowNo).css("display", "inherit")), VIS.Env.getCtx().getAD_Client_ID() != i[0].AD_Client_ID ? ea(!1) : ea(!0)); ec(); et.css("display", "none"); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } function ea(n) { n == !0 ? (ss.css("opacity", "1"), cf.css("opacity", "1"), er.attr("disabled", !1), gc = !0, u.find("#FRPT_ReportColumnRightDiv_" + r.windowNo).find("input, select").attr("disabled", !1), py(!0), yy(!0), su.setReadOnly(!1), hu.setReadOnly(!1), cu.setReadOnly(!1), lu.setReadOnly(!1), vu.setReadOnly(!1)) : (ss.css("opacity", "0.5"), cf.css("opacity", "0.5"), gc = !1, er.attr("disabled", !0), u.find("#FRPT_ReportColumnRightDiv_" + r.windowNo).find("input, select").attr("disabled", !0), py(), yy(), su.setReadOnly(!0), hu.setReadOnly(!0), cu.setReadOnly(!0), lu.setReadOnly(!0), vu.setReadOnly(!0)) } function oa(n) { var r, t; for (hl = [], r = 0, i = 0; i < n.length; i++)t = {}, t.SELECT = !1, t.LedgerName = n[i].Element, t.Id = n[i].Id, t.recid = r, r++, hl.push(t); tl() } function wk(n) { var r, t; for (to = [], r = 0, i = 0; i < n.length; i++)t = {}, t.SELECT = !1, t.GroupName = n[i].Value, t.Id = n[i].Id, t.recid = r, r++, to.push(t); ey() } function rl(n, t) { var u, r; for (se = [], u = 0, i = 0; i < n.length; i++)r = {}, r.OpenBracket = n[i].OpenBracket, r.Type = n[i].Type, r.Value = n[i].Value, r.ValueID = n[i].ValueID, r.Calculate = n[i].Calculate, r.CloseBracket = n[i].CloseBracket, r.Operator = n[i].Operator == "?" ? "%%" : n[i].Operator, r.ColumnCalculation = n[i].ColumnCalculation, r.ID = n[i].ID, r.SeqNo = n[i].SeqNo, r.ElementType = n[i].ElementType, r.recid = u, u++, se.push(r); ay(t) } function ly(n, t) { var u, r; for (pc = [], u = 0, i = 0; i < n.length; i++)r = {}, r.OpenBracket = n[i].OpenBracket, r.Type = n[i].Type, r.Value = n[i].Value, r.ValueID = n[i].ValueID, r.CloseBracket = n[i].CloseBracket, r.Operator = n[i].Operator == "?" ? "%%" : n[i].Operator, r.AccountType = n[i].AccountType, r.ID = n[i].ID, r.SeqNo = n[i].SeqNo, r.recid = u, u++, pc.push(r); yy(t) } function eit(n) { var r, t; for (iv = [], r = 0, bd = !1, dd = !1, bk = !1, i = 0; i < n.length; i++)t = {}, t.IsChoosen = n[i].IsChoosen, t.Name = n[i].Name, t.Value = n[i].Value, t.IsMandatory = n[i].IsMandatory, t.ID = n[i].ID, t.SeqNo = n[i].SeqNo, t.recid = r, t.searchID = n[i].searchID, r++, iv.push(t); kd = 0; oit(); s(!1) } function kk(t, r) { var e, f, u; for (cl = [], e = 0, f = null, i = 0; i < t.length; i++)u = {}, u.ID = t[i].ID, f = new n.GetDisplaySettingHtml(t[i].DisplaySettingID), u.DisplaysettingID = t[i].DisplaySettingID, u.DisplaysettingHtml = f.getSelectedOption(), f.dispose(), u.Value = t[i].Value, u.Operator = t[i].Operator == "?" ? "%%" : t[i].Operator, u.SeqNo = t[i].Seqno, u.recid = e, u.SetValue = t[i].CellValue, u.FRPT_ReportColumn_ID = t[i].FRPT_ReportColumn_ID > 0 ? t[i].FRPT_ReportColumn_ID : bt, e++, cl.push(u); py(r) } function dk() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportParameter", async: !1, data: { id: ot }, success: function (n) { var t = JSON.parse(n); eit(t) }, error: function (n) { VIS.ADialog.info("FRPT_UnableToParameter"); Console.log(n) } }) } function hw(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetConditionalFormatting", async: !1, data: { id: bt }, success: function (t) { var i = JSON.parse(t); kk(i, n) }, error: function (n) { h("FRPT_UnableToGetConditionalFormatting", nt, "red"); Console.log(n) } }) } function ay(i) { function f(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteFormula", async: !1, data: { id: n, reportLineID: tt }, success: function (n) { var t = JSON.parse(n); rl(t); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } function e(n) { var i = t(n.originalEvent.srcElement).attr("id"), r; if (i = i.substring(i.lastIndexOf("_") + 1), r = n.recid, !wc) { VIS.ADialog.error("FRPT_CopyRecordNotFound"); return } s(!0); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/PasteExcludeColumn", async: !0, data: { id: i, excludeColumnIds: wc }, success: function () { or.records[r].ColumnCalculation = wc; or.refreshCell(r, "ColumnCalculation"); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } var u = 0; try { or != null && (or.destroy(), or = null) } catch (o) { } vt = []; vt.length == 0 && (VIS.Env.getCtx().getAD_Client_ID() == t("#ulReportLine_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || i == !0 ? (vt.push({ field: "Action", caption: '<div style="display:inline;"><span class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-plus" style="font-size: 16px;" type="submit" id="FR_RLFAccount_' + r.windowNo + '" ><\/span><\/div>', sortable: !1, size: "5%", render: function (n) { var t = '<div><span rcid="' + n.recid + '" id="frpt-fr-EditFormula_' + n.ID + '" title="' + VIS.Msg.getMsg("Edit") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-edit frpt-glyphicon-edit frpt-pointer"><\/span><\/div>'; return u++, t } }), vt.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "5%", hidden: !1 }), vt.push({ field: "OpenBracket", caption: VIS.Msg.getMsg("FRPT_OpenBracket"), sortable: !1, size: "5%" }), vt.push({ field: "Type", caption: VIS.Msg.getMsg("FRPT_Type"), sortable: !1, size: "5%" }), vt.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !1, size: "15%", render: function (n) { return VIS.Utility.encodeText(n.Value) } }), vt.push({ field: "ElementType", caption: VIS.Msg.getMsg("FRPT_Dimension"), sortable: !1, size: "10%" }), vt.push({ field: "CloseBracket", caption: VIS.Msg.getMsg("FRPT_CloseBracket"), sortable: !1, size: "5%" }), vt.push({ field: "Operator", caption: VIS.Msg.getMsg("FRPT_Operator"), sortable: !1, size: "5%" }), vt.push({ field: "Calculate", caption: VIS.Msg.getMsg("FRPT_Calculate"), sortable: !1, size: "5%" }), vt.push({ field: "ColumnCalculation", caption: VIS.Msg.getMsg("FRPT_ExcludeColumnCalculation"), size: "30%", render: function (n) { var f = bc, o = n.ColumnCalculation, i = "", e, r, s, t, u; if (o) for (e = o.toString().split(","), r = 0, s = e.length; r < s; r++) { if (t = e[r], isNaN(t) || (t = Number(t)), i.length == 0) { i += f.getDisplay(t); continue } i += ", " + f.getDisplay(t) } else i += f.getDisplay(null); return u = '<span rcid="' + n.recid + '" id="frpt-fr-CopyExcludeColumn_' + n.ID + '" title="' + VIS.Msg.getMsg("FRPT_CopyRecord") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-copy frpt-glyphicon-copy frpt-pointer"><\/span>', u += " ", u += '<span rcid="' + n.recid + '" id="frpt-fr-PasteExcludeColumn_' + n.ID + '" title="' + VIS.Msg.getMsg("FRPT_PasteRecord") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-paste frpt-glyphicon-paste frpt-pointer"><\/span>', u + "   " + i } }), vt.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), vt.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), vt.push({ field: "ValueID", caption: VIS.Msg.getMsg("ValueID"), sortable: !0, size: "100px", hidden: !0 }), vt.push({ field: "Action", caption: "", sortable: !1, size: "40px", render: function (n) { var t = '<div><span id="frpt-fr-DeleteGroup_' + n.ID + '" title="' + VIS.Msg.getMsg("Delete") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-delete frpt-glyphicon-trash frpt-pointer"><\/span><\/div>'; return u++, t } }), vt.push()) : (vt.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "5%", hidden: !0 }), vt.push({ field: "OpenBracket", caption: VIS.Msg.getMsg("FRPT_OpenBracket"), sortable: !1, size: "5%" }), vt.push({ field: "Type", caption: VIS.Msg.getMsg("FRPT_Type"), sortable: !1, size: "5%" }), vt.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !1, size: "15%" }), vt.push({ field: "ElementType", caption: VIS.Msg.getMsg("FRPT_Dimension"), sortable: !1, size: "10%" }), vt.push({ field: "CloseBracket", caption: VIS.Msg.getMsg("FRPT_CloseBracket"), sortable: !1, size: "5%" }), vt.push({ field: "Operator", caption: VIS.Msg.getMsg("FRPT_Operator"), sortable: !1, size: "5%" }), vt.push({ field: "Calculate", caption: VIS.Msg.getMsg("FRPT_Calculate"), sortable: !1, size: "5%" }), vt.push({ field: "ColumnCalculation", caption: VIS.Msg.getMsg("FRPT_ExcludeColumnCalculation"), size: "30%", render: function (n) { var e = bc, o = n.ColumnCalculation, f, i, r, s, t, u; if (o) for (f = o.toString().split(","), i = "", r = 0, s = f.length; r < s; r++) { if (t = f[r], isNaN(t) || (t = Number(t)), i.length == 0) { i += e.getDisplay(t); continue } i += ", " + e.getDisplay(t) } return u = '<span rcid="' + n.recid + '" id="frpt-fr-CopyExcludeColumn_' + n.ID + '" title="' + VIS.Msg.getMsg("FRPT_CopyRecord") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-copy frpt-glyphicon-copy frpt-pointer"><\/span>', u += " ", u += '<span rcid="' + n.recid + '" id="frpt-fr-PasteExcludeColumn_' + n.ID + '" title="' + VIS.Msg.getMsg("FRPT_PasteRecord") + '" class="frpt-frf-btns frpt-glyphicons-deminsions vis vis-paste frpt-glyphicon-paste frpt-pointer"><\/span>', u + "   " + i } }), vt.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), vt.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), vt.push({ field: "ValueID", caption: VIS.Msg.getMsg("ValueID"), sortable: !0, size: "100px", hidden: !0 }), vt.push())); or = yc.w2grid({ name: "gridLinkRLF_" + r.windowNo, recordHeight: 40, multiSelect: !1, columns: vt, records: se, onClick: function (n) { var r, i; n.column == 9 && (t(n.originalEvent.srcElement).hasClass("frpt-glyphicon-copy") ? (wc = null, r = or.records[n.recid], wc = r.ColumnCalculation, i = t(n.originalEvent.srcElement).attr("id"), t("#" + i).addClass("frpt-icon-color"), window.setTimeout(function () { t("#" + i).removeClass("frpt-icon-color") }, 3e3)) : t(n.originalEvent.srcElement).hasClass("frpt-glyphicon-paste") && e(n)) } }); yc.find(".frpt-glyphicon-trash").on("click", function (n) { VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { if (i) { s(!0); var r = t(n.target).attr("id"); r = r.substring(r.lastIndexOf("_") + 1); f(r); s(!1) } }) }); yc.find(".frpt-glyphicon-edit").on("click", function (i) { var f = t(i.target).attr("id"), u, e; f = f.substring(f.lastIndexOf("_") + 1); u = or.records[t(i.target).attr("rcid")]; e = tt > 0 ? !1 : !0; lt = new n.AForms.Formula(r, !0, tt, io, f, rl, null, e, !1); lt.show(); lt.setOpenBracket(u.OpenBracket); lt.setType(u.Type); lt.setCalculate(u.Calculate); lt.setCloseBracket(u.CloseBracket); lt.setOperator(u.Operator == "%%" ? "?" : u.Operator); lt.setColumnCalculation(u.ColumnCalculation); lt.fillComboTypeValue(u.Type, u.ValueID, u.Value); lt.setDimenstion(u.ElementType, u.Type); u.Type == "F" ? lt.setValue(u.Value, u.Type) : lt.setValue(u.ValueID, u.Type); lt.setSeqNo(u.SeqNo) }); ce = t("#FR_RLFAccount_" + r.windowNo); ce.on("click", function () { if (a) { if (bl = !1, vi.val() == null || vi.val().trim().length == 0) { VIS.ADialog.error("FRPT_HeaderLabelMandatory"); return } ua(); a = !1 } if (tt > 0) { var t = tt > 0 ? !1 : !0; lt = new n.AForms.Formula(r, !0, tt, io, 0, rl, null, t, !0); lt.show() } else h("FRPT_PleaseSelectLine", yt, "red") }); bw.unbind().on("click", function () { s(!0); kw = new n.AForms.ViewFormula(r, ot, tt); kw.show(); s(!1) }); ku() } function vy(n) { var r, t; for (gh = [], r = 0, i = 0; i < n.length; i++)t = {}, t.PostingType = n[i].PostingType, t.PrintValue = n[i].PrintValue, t.ReportColumn = n[i].ReportColumn, t.ID = n[i].ID, t.recid = r, r++, gh.push(t); gk() } function gk() { function u(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeletePostingType", async: !1, data: { id: n, reportLineID: tt }, success: function (n) { var t = JSON.parse(n); vy(t); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } var i = 0; try { ve != null && (ve.destroy(), ve = null) } catch (f) { } yf = []; yf.length == 0 && (yf.push({ field: "Action", caption: '<div style="display:inline;"><span class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-plus" style="font-size: 16px;" type="submit" id="RL_PostingType_' + r.windowNo + '" ><\/span><\/div>', sortable: !1, size: "5%", render: function (n) { var t = '<div><span recid="' + n.recid + '" id="frpt-editpostingtype_' + n.ID + '" title="' + VIS.Msg.getMsg("Edit") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-edit frpt-glyphicon-edit frpt-pointer"><\/span><\/div>'; return i++, t } }), yf.push({ field: "PostingType", caption: VIS.Msg.getMsg("FRPT_PostingType"), sortable: !1, size: "10%", render: function (n) { var t = rp, r = n.PostingType, i; return t && (i = t.getDisplay(r)), i } }), yf.push({ field: "PrintValue", caption: VIS.Msg.getMsg("FRPT_PrintValue"), sortable: !1, size: "10%", render: function (n) { var t = printValueLookup, i = n.PrintValue, r; return t && (r = i ? t.getDisplay(i) : t.getDisplay(null)), r } }), yf.push({ field: "ReportColumn", caption: VIS.Msg.getMsg("FRPT_ReportColumn"), size: "40%", render: function (n) { var u = bc, e = n.ReportColumn, i = "", f, r, o, t; if (e) for (f = e.toString().split(","), r = 0, o = f.length; r < o; r++) { if (t = f[r], isNaN(t) || (t = Number(t)), i.length == 0) { i += u.getDisplay(t); continue } i += ", " + u.getDisplay(t) } else i += u.getDisplay(null); return i } }), yf.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), yf.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), yf.push({ field: "Action", caption: "", sortable: !1, size: "40px", render: function (n) { var t = '<div><span id="frpt-DeleteGroup_' + n.ID + '" title="' + VIS.Msg.getMsg("Delete") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-delete frpt-glyphicon-trash frpt-pointer"><\/span><\/div>'; return i++, t } }), yf.push()); ve = $divPostingTypeGroup.w2grid({ name: "gridLinkRLPType_" + r.windowNo, recordHeight: 35, multiSelect: !1, columns: yf, records: gh, onClick: function () { } }); ip = t("#RL_PostingType_" + r.windowNo); ip.on("click", function () { tt > 0 ? (lh = new n.AForms.PostingType(r, tt, 0, vy, gh), lh.show()) : h("FRPT_PleaseSaveLine", yt, "red") }); $divPostingTypeGroup.find(".frpt-glyphicon-edit").on("click", function (i) { var u = t(i.target).attr("id"), f; u = u.substring(u.lastIndexOf("_") + 1); f = ve.records[t(i.target).attr("recid")]; lh = new n.AForms.PostingType(r, tt, u, vy, gh); lh.show(); lh.setPostingType(f.PostingType); lh.setReportColumn(f.ReportColumn); lh.setPrintValue(f.PrintValue) }); $divPostingTypeGroup.find(".frpt-glyphicon-trash").on("click", function (n) { VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { if (i) { s(!0); var r = t(n.target).attr("id"); r = r.substring(r.lastIndexOf("_") + 1); u(r) } }) }); ku() } function oit() { try { cs != null && (cs.destroy(), cs = null) } catch (n) { } hs.length == 0 && (hs.push({ field: "IsChoosen", caption: VIS.Msg.getMsg("Select"), size: "40px", editable: { type: "checkbox" } }), hs.push({ field: "Name", caption: VIS.Msg.getMsg("Name"), sortable: !0, size: "150px" }), hs.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !0, size: "150px", hidden: !0 }), hs.push({ field: "IsMandatory", caption: VIS.Msg.getMsg("FRPT_IsMandatory"), sortable: !0, editable: { type: "checkbox" }, size: "150px" }), hs.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "150px", editable: { type: "text" } }), hs.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 })); cs = sl.w2grid({ name: "gridLinkPara_" + r.windowNo, recordHeight: 40, multiSelect: !1, columns: hs, records: iv, onClick: function () { }, onRender: function () { } }) } function yy(i) { function f(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteColumnFormula", async: !1, data: { id: n, ColumnLineID: bt }, success: function (n) { var t = JSON.parse(n); ly(t); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } var u = 0; try { uh != null && (uh.destroy(), uh = null) } catch (e) { } wt = []; wt.length == 0 && (VIS.Env.getCtx().getAD_Client_ID() == t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || i == !0 ? (wt.push({ field: "Action", caption: '<div style="display:inline;"><span class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-plus" style="font-size:16px;" type="submit" id="FR_CLFAccount_' + r.windowNo + '" ><\/span><\/div>', sortable: !1, size: "40px", render: function (n) { var t = '<div><span rcid="' + n.recid + '" id="frpt-fr-EditFormula_' + n.ID + '" title="' + VIS.Msg.getMsg("Edit") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-edit frpt-glyphicon-edit"><\/span><\/div>'; return u++, t } }), wt.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "100px" }), wt.push({ field: "OpenBracket", caption: VIS.Msg.getMsg("FRPT_OpenBracket"), sortable: !1, size: "130px" }), wt.push({ field: "Type", caption: VIS.Msg.getMsg("FRPT_Type"), sortable: !1, size: "150px" }), wt.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !1, size: "150px", render: function (n) { return VIS.Utility.encodeText(n.Value) } }), wt.push({ field: "CloseBracket", caption: VIS.Msg.getMsg("FRPT_CloseBracket"), sortable: !1, size: "130px" }), wt.push({ field: "Operator", caption: VIS.Msg.getMsg("FRPT_Operator"), sortable: !1, size: "140px" }), wt.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), wt.push({ field: "AccountType", caption: VIS.Msg.getMsg("AccountType"), sortable: !1, size: "100px", render: function (n) { var t = accountTypeLookup, i = n.AccountType, r; return t && (r = i ? t.getDisplay(i) : t.getDisplay(null)), r } }), wt.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), wt.push({ field: "ValueID", caption: VIS.Msg.getMsg("ValueID"), sortable: !0, size: "100px", hidden: !0 }), wt.push({ field: "Action", caption: "", sortable: !0, size: "40px", render: function (n) { var t = '<div><span id="frpt-fr-DeleteColumn_' + n.ID + '" title="' + VIS.Msg.getMsg("Delete") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-delete frpt-glyphicon-trash" ><\/span><\/div>'; return u++, t } }), wt.push()) : (wt.push({ field: "OpenBracket", caption: VIS.Msg.getMsg("FRPT_OpenBracket"), sortable: !1, size: "130px" }), wt.push({ field: "Type", caption: VIS.Msg.getMsg("FRPT_Type"), sortable: !1, size: "150px" }), wt.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !1, size: "150px" }), wt.push({ field: "CloseBracket", caption: VIS.Msg.getMsg("FRPT_CloseBracket"), sortable: !1, size: "130px" }), wt.push({ field: "Operator", caption: VIS.Msg.getMsg("FRPT_Operator"), sortable: !1, size: "140px" }), wt.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), wt.push({ field: "AccountType", caption: VIS.Msg.getMsg("AccountType"), sortable: !1, size: "100px", render: function (n) { var t = accountTypeLookup, i = n.AccountType, r; return t && (r = i ? t.getDisplay(i) : t.getDisplay(null)), r } }), wt.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), wt.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "100px", hidden: !0 }), wt.push({ field: "ValueID", caption: VIS.Msg.getMsg("ValueID"), sortable: !0, size: "100px", hidden: !0 }), wt.push())); uh = ol.w2grid({ name: "gridLinkCLF_" + r.windowNo, recordHeight: 40, multiSelect: !1, columns: wt, records: pc }); ol.find(".frpt-glyphicon-trash").on("click", function (n) { VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { if (i) { s(!0); var r = t(n.target).attr("id"); r = r.substring(r.lastIndexOf("_") + 1); f(r); s(!1) } }) }); ol.find(".frpt-glyphicon-edit").on("click", function (i) { var f = t(i.target).attr("id"), u, e; f = f.substring(f.lastIndexOf("_") + 1); u = uh.records[t(i.target).attr("rcid")]; e = bt > 0 ? !1 : !0; lt = new n.AForms.Formula(r, !1, bt, io, f, rl, ly, e, !1); lt.show(); lt.setOpenBracket(u.OpenBracket); lt.setType(u.Type); lt.setCloseBracket(u.CloseBracket); lt.setOperator(u.Operator == "%%" ? "?" : u.Operator); lt.setValue(u.ValueID, u.Type); lt.setSeqNo(u.SeqNo); lt.setAccountType(u.AccountType) }); ce = t("#FR_CLFAccount_" + r.windowNo); ce.on("click", function () { if (a && (bl = !1, hy(), a = !1), bt > 0) { var t = bt > 0 ? !1 : !0; lt = new n.AForms.Formula(r, !1, bt, io, 0, rl, ly, t, !0); lt.show() } else h("FRPT_PleaseSelectLine", nt, "red") }) } function py(n) { function u(n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteConditionalFormatting", async: !1, data: { id: n, ColumnLineID: bt }, success: function (n) { var t = JSON.parse(n); kk(t, !0); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } var i = 0; try { fh != null && (fh.destroy(), fh = null) } catch (f) { } ti = []; ti.length == 0 && (VIS.Env.getCtx().getAD_Client_ID() == t("#ulreportcolumn_" + r.windowNo).find(".frpt-fr-seletedliItem").attr("clientid") || n == !0 ? (ti.push({ field: "Action", caption: '<div style="display:inline;"><span class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-plus" style="font-size:16px;" type="submit" id="FR_CFAccount_' + r.windowNo + '" ><\/span><\/div>', sortable: !1, size: "40px", render: function (n) { var t = '<div><span rcid="' + n.recid + '" id="frpt-fr-EditCF_' + n.ID + '" title="' + VIS.Msg.getMsg("Edit") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-edit frpt-glyphicon-edit frpt-pointer"><\/span><\/div>'; return i++, t } }), ti.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), ti.push({ field: "FRPT_ReportColumn_ID", caption: VIS.Msg.getMsg("FRPT_ReportColumn"), sortable: !0, size: "130px", render: function (n, t, i) { var r = ""; for (var u in wu) wu[u].Id == this.getCellValue(t, i) && (r = wu[u].Value); return r } }), ti.push({ field: "Operator", caption: VIS.Msg.getMsg("FRPT_Operator"), sortable: !1, size: "130px" }), ti.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !1, size: "140px" }), ti.push({ field: "DisplaysettingHtml", caption: VIS.Msg.getMsg("FRPT_CFDisplaySetting"), sortable: !1, size: "250px" }), ti.push({ field: "SetValue", caption: VIS.Msg.getMsg("FRPT_SetValue"), sortable: !1, size: "200px" }), ti.push({ field: "DisplaysettingID", caption: VIS.Msg.getMsg("FRPT_CFDisplaySetting"), sortable: !1, size: "200px", hidden: !0 }), ti.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), ti.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "100px", hidden: !0 }), ti.push({ field: "Action", caption: "", sortable: !0, size: "40px", render: function (n) { var t = '<div><span id="frpt-fr-DeleteCF_' + n.ID + '" title="' + VIS.Msg.getMsg("Delete") + '"  class="frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions vis vis-delete frpt-glyphicon-trash frpt-pointer" ><\/span><\/div>'; return i++, t } }), ti.push()) : (ti.push({ field: "ID", caption: VIS.Msg.getMsg("Id"), sortable: !0, size: "100px", hidden: !0 }), ti.push({ field: "FRPT_ReportColumn_ID", caption: VIS.Msg.getMsg("FRPT_ReportColumn"), sortable: !0, size: "130px", render: function (n, t, i) { var r = ""; for (var u in wu) wu[u].Id == this.getCellValue(t, i) && (r = wu[u].Value); return r } }), ti.push({ field: "Operator", caption: VIS.Msg.getMsg("FRPT_Operator"), sortable: !1, size: "130px" }), ti.push({ field: "Value", caption: VIS.Msg.getMsg("FRPT_Value"), sortable: !1, size: "140px" }), ti.push({ field: "DisplaysettingHtml", caption: VIS.Msg.getMsg("FRPT_CFDisplaySetting"), sortable: !1, size: "250px" }), ti.push({ field: "SetValue", caption: VIS.Msg.getMsg("FRPT_SetValue"), sortable: !1, size: "200px" }), ti.push({ field: "DisplaysettingID", caption: VIS.Msg.getMsg("FRPT_CFDisplaySetting"), sortable: !1, size: "200px", hidden: !0 }), ti.push({ field: "recid", caption: VIS.Msg.getMsg("recid"), sortable: !0, size: "100px", hidden: !0 }), ti.push({ field: "SeqNo", caption: VIS.Msg.getMsg("SeqNo"), sortable: !0, size: "100px", hidden: !0 }), ti.push())); fh = df.w2grid({ name: "gridConditionalFormatting_" + r.windowNo, recordHeight: 40, multiSelect: !1, columns: ti, records: cl }); df.find(".frpt-glyphicon-trash").on("click", function (n) { VIS.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (i) { if (i) { s(!0); var r = t(n.target).attr("id"); r = r.substring(r.lastIndexOf("_") + 1); u(r); s(!1) } }) }); df.find(".frpt-glyphicon-edit").on("click", function (n) { var i = t(n.target).attr("id"), r, u; i = i.substring(i.lastIndexOf("_") + 1); r = fh.records[t(n.target).attr("rcid")]; u = !0; nd(u, r) }); lp = t("#FR_CFAccount_" + r.windowNo); lp.on("click", function () { if (a && (bl = !1, hy(), a = !1), bt > 0) nd(!1); else h("FRPT_PleaseSelectLine", nt, "red") }) } function nd(i, r) { var u = t('<div class="frpt-fr-reportline frpt-fr-conditionalformatpopup vis-formouterwrpdiv"> '), o = t('<div class="frpt-cfp-topfieldswrp" style="margin-top: 5px;"> '), h = t('<input type="text">'), e = t("<select>"), f = t("<select>"), l = t('<input type="number" step="any" onkeydown="return event.keyCode !== 69" value="0.00">'), a = t('<input type="number" step="any" onkeydown="return event.keyCode !== 69" >'), c = t('<label class="frpt-error" style="display:none;color:red !important;left:0px;position: inherit;"><\/label>'), v = 0, y, p; r && (v = r.DisplaysettingID); kl = new n.DisplaySettingHelper(VIS.Msg.getMsg("FRPT_CFDisplaySetting"), v); u.append(o); o.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class="vis-control-wrap">').append(h).append("<label>" + VIS.Msg.getMsg("SeqNo") + "<\/label >"))); o.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class="vis-control-wrap">').append(e).append("<label>" + VIS.Msg.getMsg("FRPT_ReportColumn") + "<\/label >"))); o.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class="vis-control-wrap">').append(f).append('<label class="frpt-mandatory-star">' + VIS.Msg.getMsg("FRPT_Operator") + "<\/label>"))); o.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class="vis-control-wrap">').append(l).append("<label>" + VIS.Msg.getMsg("FRPT_Value") + "<\/label>"))); y = t("<label>" + VIS.Msg.getMsg("FRPT_CFApply") + "<\/label>"); u.append(t('<div class="frpt-fr-AppplyCalculate">').append(y)); p = kl.getControl(); u.append(t("<div style='width:100%;' class='frpt-fr-FReportLineSet-field'>").append(p)); u.append(t("<div style='width:100%; margin-top: 5px;' class='frpt-fr-FReportLineSet-field input-group vis-input-wrap'>").append(t("<div class='vis-control-wrap'>").append(a).append("<label>" + VIS.Msg.getMsg("FRPT_SetValue") + " <\/label>"))); u.append(t("<div style='width:100%;' class='frpt-fr-FReportLineSet-field'>").append(c)); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetConditionalFormattingLookup", async: !1, data: { id: bt, rc_id: b.val() }, success: function (n) { var o = JSON.parse(n), u; f.append(t('<Option value=""><\/option>')); for (u in o.Operator) f.append(t('<Option value="' + o.Operator[u].Id + '">' + VIS.Utility.encodeText(o.Operator[u].Value) + "<\/option>")); if (wu = o.ColumnLine, wu != null && wu.length > 0) for (u = 0; u < wu.length; u++)e.append(t('<Option value="' + wu[u].Id + '">' + VIS.Utility.encodeText(wu[u].Value) + "<\/option>")); i == !1 ? (h.val(o.Seqno), e.val(bt)) : (h.val(r.SeqNo), f.prop("selectedIndex", f.find("option:contains(" + r.Operator + ")").index()), e.prop("selectedIndex", e.find("option:contains(" + r.Operator + ")").index()), l.val(r.Value), a.val(r.SetValue), e.val(r.FRPT_ReportColumn_ID)); s(!1) }, error: function (n) { console.log(n); s(!1) } }); ws = new VIS.ChildDialog; ws.setContent(u); ws.setTitle(VIS.Msg.getMsg("FRPT_ConditionalFormatting")); ws.setHeight(345); ws.setWidth("40%"); ws.setEnableResize(!1); ws.setModal(!0); ws.show(); ws.onOkClick = function () { if (f.val() == null || f.val() == "") return c.text(VIS.Msg.getMsg("FRPT_OperatorRequired")), c.show(), setTimeout(function () { c.hide() }, 3e3), !1; CF_ID = i == !0 ? parseInt(r.ID) : 0; var n = []; n.push(h.val()); n.push(f.val()); n.push(kl.getValue()); n.push(l.val()); n.push(a.val()); n.push(e.val()); u.empty(); u.remove(); u = null; kl.dispose(); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveConditionalFormatting", async: !1, datatype: "Json", contentType: "application/json; charset=utf-8", data: { columnLineID: bt, param: JSON.stringify(n), CF_ID: CF_ID }, success: function (n) { var t = JSON.parse(n); hw(!0); s(!1) }, error: function (n) { console.log(n); s(!1) } }) } } function td(n) { var r, i; if ((n.ReportLineSet != null || n.ReportLineSet.length > 0) && dt == 2) { k.empty(); k.append(t('<Option value=""><\/option>')); for (i in n.ReportLineSet) k.append(t('<Option value="' + n.ReportLineSet[i].Id + '">' + VIS.Utility.encodeText(n.ReportLineSet[i].Value) + "<\/option>")) } if ((n.LineType != null || n.LineType.length > 0) && dt == 2) { ht.empty(); ht.append(t('<Option value=""><\/option>')); for (i in n.LineType) ht.append(t('<Option value="' + n.LineType[i].Id + '">' + VIS.Utility.encodeText(n.LineType[i].Value) + "<\/option>")) } if (n.PostingType != null || n.PostingType.length > 0) { if (dt == 2) { ur.empty(); ur.append(t('<Option value=""><\/option>')); for (i in n.PostingType) ur.append(t('<Option value="' + n.PostingType[i].Id + '">' + VIS.Utility.encodeText(n.PostingType[i].Value) + "<\/option>")) } ff.empty(); for (i in n.PostingType) ff.append(t('<Option value="' + n.PostingType[i].Id + '">' + VIS.Utility.encodeText(n.PostingType[i].Value) + "<\/option>")) } if ((n.LinkWith != null || n.LinkWith.length > 0) && dt == 2) { fi.empty(); fi.append(t('<Option value=""><\/option>')); for (i in n.LinkWith) fi.append(t('<Option value="' + n.LinkWith[i].Id + '">' + VIS.Utility.encodeText(n.LinkWith[i].Value) + "<\/option>")) } if ((n.GroupName != null || n.GroupName.length > 0) && dt == 2) { ni.empty(); ni.append(t('<Option value=""><\/option>')); for (i in n.GroupName) ni.append(t('<Option value="' + n.GroupName[i].Id + '">' + VIS.Utility.encodeText(n.GroupName[i].Value) + "<\/option>")) } if (n.ColumnType != null || n.ColumnType.length > 0) { at.empty(); for (i in n.ColumnType) at.append(t('<Option value="' + n.ColumnType[i].Id + '">' + VIS.Utility.encodeText(n.ColumnType[i].Value) + "<\/option>")) } if (kf) for (fo.empty(), i = 0; i < kf.length; i++)kf[i].ID != "AC" && fo.append(t('<Option value="' + kf[i].ID + '">' + VIS.Utility.encodeText(kf[i].Name) + "<\/option>")); if (n.Budget != null || n.Budget.length > 0) { uo.empty(); uo.append(t('<Option value=""><\/option>')); for (i in n.Budget) uo.append(t('<Option value="' + n.Budget[i].Id + '">' + VIS.Utility.encodeText(n.Budget[i].Value) + "<\/option>")) } if (n.AmountType != null || n.AmountType.length > 0) { vf.empty(); for (i in n.AmountType) vf.append(t('<Option value="' + n.AmountType[i].Id + '">' + VIS.Utility.encodeText(n.AmountType[i].Value) + "<\/option>")) } if ((n.ColumnSet != null || n.ColumnSet.length > 0) && dt == 3) { b.empty(); b.append(t('<Option value=""><\/option>')); for (i in n.ColumnSet) b.append(t('<Option value="' + n.ColumnSet[i].Id + '">' + VIS.Utility.encodeText(n.ColumnSet[i].Value) + "<\/option>")) } if ((n.Type != null || n.Type.length > 0) && dt == 2) { p.empty(); p.append(t('<Option value=""><\/option>')); p.append(t('<Option value="AD">All Dimension<\/option>')); for (i in n.Type) p.append(t('<Option value="' + n.Type[i].Id + '">' + VIS.Utility.encodeText(n.Type[i].Value) + "<\/option>")); r = ""; for (i in n.Type) n.Type[i].Id != "LF" && n.Type[i].Id != "LT" && n.Type[i].Id != "U1" && n.Type[i].Id != "U2" && (r += "<div class='d-flex align-item-center' id='" + n.Type[i].Value + "' value='" + n.Type[i].Id + "'><div class='mr-1'><input type='checkbox'  id='" + n.Type[i].Id + "' value='" + n.Type[i].Value + "'/><\/div><div>" + VIS.Utility.encodeText(n.Type[i].Value) + "<\/div><\/div>"); pt.html(r); sit() } if (n.Period != null || n.Period.length > 0) { d.empty(); for (i in n.Period) d.append(t('<Option value="' + n.Period[i].Id + '">' + VIS.Utility.encodeText(n.Period[i].Value) + "<\/option>")) } if (n.PeriodType != null || n.PeriodType.length > 0) { w.empty(); it.empty(); g.empty(); for (i in n.PeriodType) n.PeriodType[i].Id != "F" && (cv[n.PeriodType[i].Id] = VIS.Utility.encodeText(n.PeriodType[i].Value), w.append(t('<Option value="' + n.PeriodType[i].Id + '">' + VIS.Utility.encodeText(n.PeriodType[i].Value) + "<\/option>")), g.append(t('<Option value="' + n.PeriodType[i].Id + '">' + VIS.Utility.encodeText(n.PeriodType[i].Value) + "<\/option>"))), it.append(t('<Option value="' + n.PeriodType[i].Id + '">' + VIS.Utility.encodeText(n.PeriodType[i].Value) + "<\/option>")) } if (n.PeriodGroup != null || n.PeriodGroup.length > 0) { ii.empty(); for (i in n.PeriodGroup) ii.append(t('<Option value="' + n.PeriodGroup[i].Id + '">' + VIS.Utility.encodeText(n.PeriodGroup[i].Value) + "<\/option>")) } } function sit() { la = pt.find("#AY"); $BP = pt.find("#BP"); $MC = pt.find("#MC"); $LF = pt.find("#LF"); $LT = pt.find("#LT"); $OT = pt.find("#OT"); $PR = pt.find("#PR"); $PJ = pt.find("#PJ"); $SR = pt.find("#SR"); $X1 = pt.find("#X1"); $X2 = pt.find("#X2"); $X3 = pt.find("#X3"); $X4 = pt.find("#X4"); $X5 = pt.find("#X5"); $X6 = pt.find("#X6"); $X7 = pt.find("#X7"); $X8 = pt.find("#X8"); $X9 = pt.find("#X9"); la.on("click", rr); $BP.on("click", rr); $MC.on("click", rr); $LF.on("click", rr); $LT.on("click", rr); $OT.on("click", rr); $PR.on("click", rr); $PJ.on("click", rr); $SR.on("click", rr); $X1.on("click", rr); $X2.on("click", rr); $X3.on("click", rr); $X4.on("click", rr); $X5.on("click", rr); $X6.on("click", rr); $X7.on("click", rr); $X8.on("click", rr); $X9.on("click", rr) } function id() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveAccountElement", async: !1, datatype: "Json", type: "POST", data: { param: JSON.stringify(vh), id: tt }, success: function (n) { var t = JSON.parse(n); fit(tt); vh = [] }, error: function (n) { console.log(n); vh = [] } }) } function hit() { lit(); he = new VIS.ChildDialog; he.setContent(eh); he.setTitle(VIS.Msg.getMsg("FRPT_AddSubGroups")); he.setEnableResize(!1); he.setWidth(635); he.setWidth(500); he.setModal(!0); he.show(); he.onOkClick = function () { var i, n; for (ah = [], ah.push(tt), i = t(t(eh.children()).find(".frpt-fr-seletedliItem")), n = 0; n < i.length; n++)ah.push(t(i[n]).attr("value")); tt > 0 && rd() }; he.onClose = function () { }; he.onCancelClick = function () { }; al = t("#FR_txtSearchSubgroup_" + r.windowNo); al.on("change", function () { ud() }) } function rd() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveNewSubgroup", async: !1, datatype: "Json", type: "POST", data: { param: JSON.stringify(ah), id: tt, groupID: ni.val() }, success: function (n) { var t = JSON.parse(n); fa(tt); ah = [] }, error: function (n) { ah = []; console.log(n) } }) } function cit() { tu = t("<div style='height:450px; margin-top: 3px' class='vis-formouterwrpdiv'><\/div>"); tu.append(t("<div style='padding-right: 10px;' class='frpt-fr-FReportLineSet-field input-group vis-input-wrap'><div class='vis-control-wrap'><input type='text' maxlength=50 placeholder='" + VIS.Msg.getMsg("Search") + "' class='frpt-frf-search'  id='FR_txtSearchAccountElement_" + r.windowNo + "'><label id='FRPT_SearchLedger_" + r.windowNo + "'>" + VIS.Msg.getMsg("Search") + "<\/label><\/div><\/div>")); tu.append(t("<div class='frpt-fr-FReportLineSet-field input-group vis-input-wrap'><div class='vis-control-wrap'><\/input><select id='FR_cmbSearchAccountElement_" + r.windowNo + "'><\/select><label id='FRPT_SelectActLedger_" + r.windowNo + "'>" + VIS.Msg.getMsg("FRPT_SelectAccount") + "<\/label><\/div><\/div>")); lo = tu.find("#FR_cmbSearchAccountElement_" + r.windowNo); cw(); tu.on("click", function (n) { var i = t(n.target); i.hasClass("frpt-fr-seletedliItem") ? i.removeClass("frpt-fr-seletedliItem") : i.addClass("frpt-fr-seletedliItem"); tu.find("#FR_txtSearchAccountElement_" + r.windowNo).removeClass("frpt-fr-seletedliItem"); lo.removeClass("frpt-fr-seletedliItem"); tu.find("#FRPT_SearchLedger_" + r.windowNo).removeClass("frpt-fr-seletedliItem"); tu.find("#FRPT_SelectActLedger_" + r.windowNo).removeClass("frpt-fr-seletedliItem") }) } function lit() { eh = t("<div style='height:450px;'><\/div>"); eh.append(t("<div style='float:left;width:100%'> <input type='text' maxlength=50 placeholder='" + VIS.Msg.getMsg("Search") + "' class='frpt-frf-search' id='FR_txtSearchSubgroup_" + r.windowNo + "'><\/input><\/div>")); ud(); eh.on("click", function (n) { var i = t(n.target); i.hasClass("frpt-fr-seletedliItem") ? i.removeClass("frpt-fr-seletedliItem") : i.addClass("frpt-fr-seletedliItem") }) } function cw() { lo.val() == null && (lo.empty(), ait()); dy = t(' <script type="text/x-handlebars-template"><div style="float:left;width:100%;"><ul class="frpt-frf-addAccount">{{#each this}}<li value="{{Id}}">{{Value}}<\/li>{{/each}}​<\/ul><\/div><\/script>').html(); gy = Handlebars.compile(dy); ll = t("#FR_txtSearchAccountElement_" + r.windowNo); t(tu.children()[2]).remove(); t(tu.children()[2]).detach(); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetAccountElement", async: !1, datatype: "Json", type: "GET", cache: !1, data: { searchText: ll.val(), ElementName: lo.val() }, success: function (n) { var t = JSON.parse(n); (t != null || t != undefined) && tu.append(gy(t)) }, error: function (n) { console.log(n) } }) } function ait() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetAccountName", async: !1, datatype: "Json", type: "GET", cache: !1, success: function (n) { var i = JSON.parse(n), r; if (i != null || i != undefined) { lo.append(t('<Option value="-1" selected="selected"> <\/option>')); for (r in i) r == 0 ? lo.append(t('<Option value="' + i[r].Id + '" selected="selected">' + VIS.Utility.encodeText(i[r].Value) + "<\/option>")) : lo.append(t('<Option value="' + i[r].Id + '">' + VIS.Utility.encodeText(i[r].Value) + "<\/option>")) } }, error: function (n) { console.log(n) } }) } function ud() { var n = t(' <script type="text/x-handlebars-template"><div style="float:left;width:100%"><ul class="frpt-frf-addAccount">{{#each this}}<li value="{{Id}}">{{Value}}<\/li>{{/each}}​<\/ul><\/div><\/script>').html(), i = Handlebars.compile(n); al = t("#FR_txtSearchSubgroup_" + r.windowNo); t(eh.children()[1]).remove(); t(eh.children()[1]).detach(); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetSubGroupsForGroup", async: !1, datatype: "Json", type: "GET", cache: !1, data: { lineID: tt, id: io, searchText: al.val() }, success: function (n) { var t = JSON.parse(n); (t != null || t != undefined) && eh.append(i(t)) }, error: function (n) { console.log(n) } }) } function hc(n, t) { return VIS.Utility.Util.getValueOfInt(VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetFieldLength", { Tablename: n, Columnname: t })) } var bk; this.windowNo = null; var ai = t("<div class='frpt-frf-assign-content vis-forms-container vis-formouterwrpdiv'>"), cc = null, r = this, u = null, te = null, st = null, fs = null, es = null, fd = null, k = null, sa = [], b = null, ha = 0, ht = null, ur = null, fi = null, p = null, ca = !1, lw, aw, ih = !1, pt = null, wy = null, ul = !1, pu = [], rh = null, la = null; $BP = null; $X1 = null; $X2 = null; $X3 = null; $X4 = null; $X5 = null; $X6 = null; $X7 = null; $X8 = null; $X9 = null; $MC = null; $LF = null; $LT = null; $OT = null; $PR = null; $PJ = null; $SR = null; var vw = null, lc, fr, aa, dr, va, gr, ya, lr, pa, ac, wa, du, ba, gu, ka, nf, da, ga, l = "", ei = "", nu = t("<div id='rlfr_generateControl_" + r.windowNo + "' class='frpt-frf-form-data'>"), o = null, pe = null, ni = null, we = null, ie = null, ft = null, et = null, re = null, cf = null, be = null, nv = null, ke = null, fl = null, de = null, lf = null, ue = null, af = null, os = null, tv = null, ge = null, ss = null, gi = null, nr = null, ed = null, si = null, li = null, vi = null, fe = null, ee = null, ar = null, er = null, yi = null, pi = null, tf = null, el = null, vc = null, yc = null, by = null, ol = null, sl = null, ky = null, od = null, oe = [], no = [], vt = [], wt = [], hs = [], ti = [], wu = [], hl = [], to = [], se = [], pc = [], iv = [], cl = [], rf = null, uf = null, or = null, uh = null, fh = null, cs = null, he = null, dy = null, gy = null, tu = null, eh = null, ce = null, ls = null, ll = null, al = null, np = null, tt = 0, io = 0, bt = 0, oh = 0, ro = !1, sr = null, le = null, as = null, ff = null, uo = null, vf = null, at = null, fo = null, d = null, w = null, g = null, rv = null, ii = null, hr = null, it = null, yw = null, pw = null, tr = null, ut = null, ww = null, tp = null, eo = null, yt = null, nt = null, uv = null, vl = null, ri = null, ae = null, oo = null, sh = null, hh = null, ef = null, dh = VIS.Env.getCtx(), so = null, ho = null, vs = null, ys = null, ct = null, iu = null, co = null, of = null, ch = null, wi = null, ve = null, yf = [], gh = [], ip = null, lh = null, rp = null, ye = null, up = null, pf = null, fp = null, fv, ev, ep, wf = "", op = null, ov, sp, ru = "", wc = null, bc = null, sv, hv, hp, sf = "", bw = null, kw = null, oi = null, yl = null, pl = null, ps = null, wl = null, ui = null, dw = null, ot = 0, c = {}, lt = null, a = !1, kt = !1, ah = [], vh = [], cv = {}, lv = !0, bl = !0, dt = 0, yh = null, sd = null, vit = t(this), gw = null, gt = null, f = {}, e = {}, ws = null, vr = null, yr = null, pr = null, wr = null, uu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RowLineFormatting"), undefined, ta), fu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SubGroupLineFormatting"), undefined, ta), eu = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SourceLineFormatting"), undefined, ta), ou = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TrxLineFormatting"), undefined, ta), su = null, hu = null, cu = null, lu = null, bf = null, ph = null, br = null, lo = null, hd = null, kr = null, au = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_DGLineFormatting"), undefined, ta), vu = null, cp = !1, kf = null, bi = null, hi = null, ki = null, ci = null, cd = null, ld = null, yu = null, kc = null, ad = !0, df = null, lp = null, gf = null, kl = null, ir = null, dc = null, gc = null, dl = null, vd = null, nb = null, tb = null, ib = null, rb = null, nc = null, ao = null, bs = null, wh = !1, bh = !1, yd = !1, pd = null, wd = null, bd = !1, kd = 0, dd = !1, gd = null, av = null, vv = null, y = "", bu = "", nl, hf, yv, ks, pv, ds, wv, gs, bv, vo, kv, tc, dv, ic, gv, rc, ny, ty, di, iy, uc, v = t("<select id='fr_cmbDimensionType_" + r.windowNo + "'><\/select>"), cr = t("<div id='fr_generateControl_" + r.windowNo + "' class='frpt-frf-form-data'>"), ry = 0, ng, ub = null, ap = null, yo, po, wo, bo, ko, go, ns, ts, is, rs = null; this.initialize = function () { tg(); window.setTimeout(function () { ig(); gtt() }, 20) }; var kh = null, fc = null, nh = null; var uy = null, gl = -1, vp = !0, yp = !0, fy = !0; this.onmessage = function (n) { var i, u; if (n.Event == "FRPT_Report") { var r = n.Message.split("-"), f = VIS.Utility.Util.getValueOfInt(r[1]), t = VIS.Utility.Util.getValueOfInt(r[2]); t.length != 4 && (t = t.toString().padStart(4, "0")); i = sa.findIndex(n => n.id === t.toString()); i >= 0 && (u = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Data/GetCacheReportData", { AD_PInstance_ID: f }), sa != null && (cc = sa[i].class, cc.loadData(u.result))) } }; var hb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), o = t("<div class='input-group-append'>"), e; n.append(u); u.append(f); u.append(o); e = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_Activity_ID", 0, !1, null); i == "columnLine" ? (yv = t("<label>"), y = new VIS.Controls.VComboBox("C_Activity_ID", !1, !1, !0, e, 50), ks = y.getControl(), yv.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Activity_ID")), f.append(ks).append(yv), y.fireValueChanged = rt) : (aa = t("<label>"), l = new VIS.Controls.VTextBoxButton("C_Activity_ID", !1, !1, !0, VIS.DisplayType.MultiKey, e), dr = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), aa.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Activity_ID")), f.append(dr).append(aa), o.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = ttt) }, cb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), e = t("<div class='input-group-append'>"), o; n.append(u); u.append(f); u.append(e); o = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_BPartner_ID", 0, !1, null); i == "columnLine" ? (kv = t("<label>"), y = new VIS.Controls.VTextBoxButton("C_BPartner_ID", !1, !1, !0, VIS.DisplayType.Search, o), tc = y.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), kv.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID")), f.append(tc).append(kv), e.append(y.getBtn(0)), y.fireValueChanged = nk) : (wa = t("<label>"), l = new VIS.Controls.VTextBoxButton("C_BPartner_ID", !1, !1, !0, VIS.DisplayType.MultiKey, o), du = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), wa.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_BPartner_ID")), f.append(du).append(wa), e.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = nk) }, lb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), o = t("<div class='input-group-append'>"), e; n.append(u); u.append(f); u.append(o); e = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_Campaign_ID", 0, !1, null); i == "columnLine" ? (pv = t("<label>"), y = new VIS.Controls.VComboBox("C_Campaign_ID", !1, !1, !0, e, 50), ds = y.getControl(), pv.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Campaign_ID")), f.append(ds).append(pv), y.fireValueChanged = rt) : (va = t("<label>"), l = new VIS.Controls.VTextBoxButton("C_Campaign_ID", !1, !1, !0, VIS.DisplayType.MultiKey, e), gr = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), va.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Campaign_ID")), f.append(gr).append(va), o.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = itt) }, ab = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), o = t("<div class='input-group-append'>"), e; n.append(u); u.append(f); u.append(o); e = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "AD_Org_ID", 0, !1, "AD_Org.AD_Org_ID<>0 AND AD_Org.IsCostCenter='N' AND AD_Org.IsProfitCenter='N' AND AD_Org.IsSummary='N' AND AD_Org.IsActive='Y'"); i == "columnLine" ? (nl = t("<label>"), y = new VIS.Controls.VComboBox("Org_ID", !1, !1, !0, e, 50), hf = y.getControl(), hf.find("option[value=0]").remove(), nl.append(VIS.Msg.translate(VIS.Env.getCtx(), "Org_ID")), f.append(hf).append(nl), y.fireValueChanged = rt) : (lc = t("<label>"), l = new VIS.Controls.VTextBoxButton("AD_Org_ID", !1, !1, !0, VIS.DisplayType.MultiKey, e), fr = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), lc.append(VIS.Msg.translate(VIS.Env.getCtx(), "Org_ID")), f.append(fr).append(lc), o.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = utt) }, vb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), o = t("<div class='input-group-append'>"), e; n.append(u); u.append(f); u.append(o); e = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "AD_Org_ID", 0, !1, "AD_Org.AD_Org_ID<>0 AND (AD_Org.IsCostCenter='Y' OR AD_Org.IsProfitCenter='Y') AND IsSummary='N' AND AD_Org.IsActive='Y'"); i == "columnLine" ? (nl = t("<label>" + VIS.Msg.getMsg("OrganizationUnit") + "<\/label >"), y = new VIS.Controls.VComboBox("Org_ID", !1, !1, !0, e, 50), hf = y.getControl(), hf.find("option[value=0]").remove(), f.append(hf).append(nl), y.fireValueChanged = rt) : (lc = t("<label>" + VIS.Msg.getMsg("OrganizationUnit") + "<\/label >"), l = new VIS.Controls.VTextBoxButton("AD_Org_ID", !1, !1, !0, VIS.DisplayType.MultiKey, e), fr = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), f.append(fr).append(lc), o.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = rtt) }, yb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), e = t("<div class='input-group-append'>"), s, o; n.append(u); u.append(f); u.append(e); s = "C_Project.IsActive='Y' AND C_Project.IsSummary ='N' AND C_Project.isopportunity = 'N' AND C_Project.iscampaign = 'N' AND C_Project.AD_Client_ID = " + VIS.context.getAD_Client_ID(); o = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_Project_ID", 0, !1, s); i == "columnLine" ? (dv = t("<label>"), y = new VIS.Controls.VTextBoxButton("C_Project_ID", !1, !1, !0, VIS.DisplayType.Search, o), ic = y.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), dv.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Project_ID")), f.append(ic).append(dv), e.append(y.getBtn(0)), y.fireValueChanged = tk, y.setCustomInfo("Project")) : (ba = t("<label>"), l = new VIS.Controls.VTextBoxButton("C_Project_ID", !1, !1, !0, VIS.DisplayType.MultiKey, o), gu = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), ba.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_ProjectRef_ID")), f.append(gu).append(ba), e.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = tk, l.setCustomInfo("Project")) }, pb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), e = t("<div class='input-group-append'>"), o; n.append(u); u.append(f); u.append(e); o = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "M_Product_ID", 0, !1, null); i == "columnLine" ? (gv = t("<label>"), y = new VIS.Controls.VTextBoxButton("M_Product_ID", !1, !1, !0, VIS.DisplayType.Search, o), rc = y.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), gv.append(VIS.Msg.translate(VIS.Env.getCtx(), "M_Product_ID")), f.append(rc).append(gv), e.append(y.getBtn(0)), y.fireValueChanged = ik) : (ka = t("<label>"), l = new VIS.Controls.VTextBoxButton("M_Product_ID", !1, !1, !0, VIS.DisplayType.MultiKey, o), nf = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), ka.append(VIS.Msg.translate(VIS.Env.getCtx(), "M_Product_ID")), f.append(nf).append(ka), e.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = ik) }, wb = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), o = t("<div class='input-group-append'>"), e; n.append(u); u.append(f); u.append(o); e = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_SalesRegion_ID", 0, !1, null); i == "columnLine" ? (wv = t("<label>"), y = new VIS.Controls.VComboBox("C_SalesRegion_ID", !1, !1, !0, e, 50), gs = y.getControl(), wv.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_SalesRegion_ID")), f.append(gs).append(wv), y.fireValueChanged = rt) : (ya = t("<label>"), l = new VIS.Controls.VTextBoxButton("C_SalesRegion_ID", !1, !1, !0, VIS.DisplayType.MultiKey, e), lr = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), ya.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_SalesRegion_ID")), f.append(lr).append(ya), o.append(l.getBtn(0)).append(l.getBtn(1)), l.fireValueChanged = stt) }, dp = function () { var i = t("<div class='input-group vis-input-wrap'>"), u = t("<div class='vis-control-wrap'>"), f, e; av = t("<div class='VIS-AMTD-formData mb-0'>"); cr.append(av); av.append(i); i.append(u); ny = t("<label>"); ty = t("<label>"); ny.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Element_ID")); ty.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_ElementValue_ID")); f = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_Element_ID", 0, !1, null); y = new VIS.Controls.VComboBox("C_Element_ID", !1, !1, !0, f, 50); di = y.getControl(); av.css("width", "50%"); u.append(di).append(ny); e = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, !1); txtAcctElementValue = new VIS.Controls.VTextBoxButton("C_ElementValue_ID", !1, !1, !0, VIS.DisplayType.Search, e); txtAccountElement = txtAcctElementValue.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); vv = t("<div class='VIS-AMTD-formData VIS-AMTD-InputBtns mb-0 pr-0'>"); var n = t("<div class='input-group vis-input-wrap'>"), o = t("<div class='vis-control-wrap'>"), s = t("<div class='input-group-append'>"); cr.append(vv); vv.append(n); n.append(o); n.append(s); vv.css("width", "50%"); o.append(txtAccountElement).append(ty); s.append(txtAcctElementValue.getBtn(0)); di.on("change", function () { var n = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, !1, "C_Element_ID=" + di.val()); a = !0; txtAccountElement.lookup = n }) }, oy = function (n, i) { var u = t("<div class='input-group vis-input-wrap'>"), f = t("<div class='vis-control-wrap'>"), e = t("<div class='input-group-append'>"), o, s; n.append(u); u.append(f); u.append(e); o = new VIS.MLocationLookup(VIS.Env.getCtx(), r.windowNo); s = new VIS.MLocationLookup(VIS.Env.getCtx(), r.windowNo); i == "columnLine" ? (iy = t("<label>"), y = new VIS.Controls.VLocation("C_Location_ID", !1, !1, !0, VIS.DisplayType.Location, o), uc = y.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), iy.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Location_ID")), f.append(uc).append(iy), e.append(y.getBtn(1)), y.fireValueChanged = rk) : (da = t("<label>"), l = new VIS.Controls.VLocation("C_Location_ID", !1, !1, !0, VIS.DisplayType.Location, o), ga = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "), da.append(VIS.Msg.translate(VIS.Env.getCtx(), "C_Location_ID")), f.append(ga).append(da), e.append(l.getBtn(1)), l.fireValueChanged = rk) }, gp = function (n, i, u) { if (ry = 0, yu.val() == "0") { if (u) { s(!1); VIS.ADialog.info("FRPT_BalAggregationMadatory"); return } s(!1); return } if (kg(yu.val()), ry == 0) { if (u) { s(!1); VIS.ADialog.info("FRPT_BalAggregationMadatory"); return } s(!1); return } vo = t("<select>"); var f = "", e = 0, h = "", o = !0; u ? kb(o) : (h = i == "columnLine" ? v.find("option:selected").val() : p.find("option:selected").val(), o = !1); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetElementTypes", type: "POST", data: { allDimension: o, accountSchemaId: ry, elementType: h }, success: function (o) { var a = JSON.parse(o), h, c, p; if (a != null) for (h = 0; h < a.length; h++)if (u || f != a[h].TableName) if (f = a[h].TableName, e = VIS.Utility.Util.getValueOfInt(a[h].ColumnId), i == "columnLine") { if (bv = t("<label>"), f != "") { c = f + "_ID"; p = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, e, VIS.DisplayType.TableDir, c, 0, !1, null); y = new VIS.Controls.VTextBoxButton(c, !1, !1, !0, VIS.DisplayType.Search, p); vo = y.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); bv.append(VIS.Msg.translate(VIS.Env.getCtx(), c)); var v = t("<div class='input-group vis-input-wrap'>"), w = t("<div class='vis-control-wrap'>"), b = t("<div class='input-group-append'>"); n.append(v); v.append(w); v.append(b); w.append(vo).append(bv); b.append(y.getBtn(0)); y.fireValueChanged = ftt } } else if (pa = t("<label>"), f != "") if (c = f + "_ID", u) bb(n, a[h].ElementType, c, e), h == a.length - 1 && bb(n, "Checkbox", "FRPT_IsUnselectedDimension", e); else { p = VIS.MLookupFactory.get(VIS.Env.getCtx(), r.windowNo, e, VIS.DisplayType.TableDir, c, 0, !1, null); l = new VIS.Controls.VTextBoxButton(c, !1, !1, !0, VIS.DisplayType.MultiKey, p); ac = l.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " ").attr("data-element-type", a[h].ElementType); pa.append(VIS.Msg.translate(VIS.Env.getCtx(), c)); var v = t("<div class='input-group vis-input-wrap'>"), w = t("<div class='vis-control-wrap'>"), b = t("<div class='input-group-append'>"); n.append(v); v.append(w); v.append(b); w.append(ac).append(pa); b.append(l.getBtn(0)).append(l.getBtn(1)); l.fireValueChanged = ett } s(!1) }, error: function (n) { console.log(n); s(!1) } }) }; bk = !1; this.openAddAccountElementDialog = function (n) { cit(); var i = new VIS.ChildDialog; i.setContent(tu); i.setTitle(VIS.Msg.getMsg("FRPT_AddAccountElement")); i.setEnableResize(!1); i.setWidth(635); i.setWidth(500); i.setModal(!0); i.show(); i.onOkClick = function () { var i, r; for (vh.push(tt), i = t(t(tu.children()).find(".frpt-fr-seletedliItem")), r = 0; r < i.length; r++)vh.push(t(i[r]).attr("value")); n ? (n(i), vh = []) : tt > 0 && id() }; i.onClose = function () { }; i.onCancelClick = function () { }; ll = t("#FR_txtSearchAccountElement_" + r.windowNo); lo = tu.find("#FR_cmbSearchAccountElement_" + r.windowNo); ll.on("change", function () { cw() }); lo.on("change", function () { cw() }) }; this.getRoot = function () { return ai.css("background-color", "rgba(var(--v-c-primary), .6)"), ai }; this.disposeComponent = function () { ai = null; r = null; u = null; $divContainer = null; te = null; st = null; fs = null; es = null; fd = null; k.off("change"); k = null; ht = null; ur = null; fi = null; p = null; ni = null; we.off("click"); we = null; nv.off("click"); nv = null; ke.off("click"); ke = null; ge.off("click"); ge = null; gi = null; ed = null; si = null; vi = null; fe = null; ee = null; ar = null; er = null; el = null; vc = null; yc = null; oe = []; hl = []; no = []; vt = []; wt = []; hs = []; ti = []; wu = []; to = []; se = []; pc = []; iv = []; cl = []; rf = null; uf = null; or = null; uh = null; fh = null; cs = null; dy = null; gy = null; tu = null; ce = null; tt = null; oh = null; ls = null; ll = null; al = null; tv = null; gi = null; nr = null; cp = null; kf = null; ha = null; bi && (bi.off("click"), bi.remove(), bi = null); hi && (hi.off("click"), hi.remove(), hi = null); ki && (ki.off("click"), ki.remove(), ki = null); ci && (ci.off("click"), ci.remove(), ci = null); bf = null; ph = null; vs = null; br = null; cd = null; ld = null; hd = null; yu = null; kc = null; ad = null; df = null; lp = null; gf = null; kl = null; ir = null; dc = null; gc = null; dl = null; vd = null; lf && (lf.off("click"), lf.remove(), lf = null); ue && (ue.off("click"), ue.remove(), ue = null); af && (af.off("click"), af.remove(), af = null); os && (os.off("click"), os.remove(), os = null); ie && (ie.off("click"), ie.remove(), ie = null); ft && (ft.off("click"), ft.remove(), ft = null); et && (et.off("click"), et.remove(), et = null); f = {}; e = {}; vr.dispose(); pr.dispose(); yr.dispose(); wr.dispose(); kr.dispose(); uu.dispose(); eu.dispose(); fu.dispose(); ou.dispose(); au.dispose(); su.dispose(); hu.dispose(); cu.dispose(); lu.dispose(); vu.dispose(); vr = null; pr = null; yr = null; wr = null; kr = null; uu = null; eu = null; fu = null; ou = null; au = null; su = null; hu = null; cu = null; lu = null; vu = null; so = null; ho = null; bc = null; vs = null; wc = null; sv = null; hv = null; hp = null; sf = null; fp = null; fv = null; ev = null; ep = null; wf = null; ve = null; yf = []; gh = []; ip = null; lh = null; rp = null; ye = null; up = null; pf = null; o = null; pe = null; ys = null; ch = null; op = null; ov = null; sp = null; ru = null; b && (b.off("click"), b.remove(), b = null); ge && (ge.off("click"), ge.remove(), ge = null); ss && (ss.off("click"), ss.remove(), ss = null); be && (be.off("click"), be.remove(), be = null); de && (de.off("click"), de.remove(), de = null); re && (re.off("click"), re.remove(), re = null); cf && (cf.off("click"), cf.remove(), cf = null); fi && (fi.off("click"), fi.off("change"), fi.remove(), fi = null); pi && (pi.off("click"), pi.remove(), pi = null); yi && (yi.off("click"), yi.remove(), yi = null); it && (it.off("click"), it.off("change"), it.remove(), it = null); ii && (ii.off("click"), ii.off("change"), ii.remove(), ii = null); g && (g.off("click"), g.off("change"), g.remove(), g = null); w && (w.off("click"), w.off("change"), w.remove(), w = null); d && (d.off("click"), d.off("change"), d.remove(), d = null); pt = null; wy = null; pu = []; rh = null; la = null; $BP = null; $X1 = null; $X2 = null; $X3 = null; $X4 = null; $X5 = null; $X6 = null; $X7 = null; $X8 = null; $X9 = null; $MC = null; $LF = null; $LT = null; $OT = null; $PR = null; $PJ = null; $SR = null }; this.formSizeChanged = function () { var n = ai.find(".frpt-frf-top-wrap").height(), t = ai.find(".frpt-frf-rpt-line").height(), i = ai.find(".frpt-frf-report-detail>h4").height(); nh && fc && kh && nh.height(kh.height() - fc.height()); dt == 2 && (ku(), si.height(ai.height() - (n + t + i + 40 + 40))); dt == 3 && (ec(), li.height(ai.height() - (n + t + i + 40 + 40))); dt == 4 && eb() }; this.sizeChanged = function (n, t) { this.formSizeChanged(n, t) } } n.AForms = n.AForms || {}; r.prototype.refresh = function () { this.formSizeChanged() }; r.prototype.sizeChanged = function (n, t) { this.sizeChanged(n, t) }; r.prototype.init = function (n, i) { this.frame = i; this.windowNo = n; VIS.sseManager.register(this); t(".vis-height-full").eq(1).append("<div id='formBusy_" + this.windowNo + "' class='vis-busyindicatorouterwrap' title='FormBusy' ><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"); t("#formBusy_" + this.windowNo).css("visibility", "visible"); this.frame.getContentGrid().append(this.getRoot()); this.initialize() }; r.prototype.dispose = function () { this.disposeComponent(); VIS.sseManager.unregister(this); this.frame && this.frame.dispose(); this.frame = null }; n.AForms.FinancialReportSettings = r }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function r(n, r, u, f, e, o, s, h, c) { function lt() { var n, f; if (p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(tt).append(" <label>" + VIS.Msg.getMsg("SeqNo") + " <\/label>"))), p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(d).append(" <label>" + VIS.Msg.getMsg("FRPT_OpenBracket") + " <\/label>"))), p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(y).append(' <label class="frpt-mandatory-star">' + VIS.Msg.getMsg("FRPT_Type") + " <\/label>"))), p.append(t('<div class="frpt-fr-FReportLineSet-field">').append(t('<div class="input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(l).append(w).append(' <label class="frpt-mandatory-star">' + VIS.Msg.getMsg("FRPT_Value") + " <\/label>")).append(b)).append(i)), r && p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(a).append(" <label>" + VIS.Msg.getMsg("FRPT_Dimension") + " <\/label>"))), r && p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(v).append(" <label>" + VIS.Msg.getMsg("FRPT_Calculate") + " <\/label>"))), p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(g).append(" <label>" + VIS.Msg.getMsg("FRPT_CloseBracket") + " <\/label>"))), p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(nt).append(" <label>" + VIS.Msg.getMsg("FRPT_Operator") + " <\/label>"))), r) { var n = t("<div class='vis-control-wrap'>"), u = t("<div class='input-group-append'>"), e = VIS.MLookupFactory.get(VIS.Env.getCtx(), ot.windowNo, 0, VIS.DisplayType.TableDir, "PA_ReportColumn_ID", 0, !1, "PA_ReportColumn.PA_ReportColumnSet_ID IN (SELECT PA_ReportColumnSet_ID FROM PA_Report WHERE PA_Report_ID=@PA_ReportID@) AND PA_ReportColumn.IsActive = 'Y'"); ut = t("<label>"); k = new VIS.Controls.VTextBoxButton("PA_ReportColumn_ID", !1, !1, !0, VIS.DisplayType.MultiKey, e); st = k.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); ut.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ExcludeColumnCalculation")); n.append(st).append(ut); u.append(k.getBtn(0)).append(k.getBtn(1)); p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(n).append(u)) } else n = t("<div class='vis-control-wrap'>"), f = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDataReferenceID", { referenceName: "C_ElementValue AccountType" }), accountTypeLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), ot.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", f, !0), ft = t("<label>"), rt = new VIS.Controls.VComboBox("AccountType", !1, !1, !0, accountTypeLookup), ht = rt.getControl().attr("placeholder", " ").attr("data-placeholder", ""), ft.append(VIS.Msg.translate(VIS.Env.getCtx(), "AccountType")), n.append(ht).append(ft), p.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(n)); p.append(t('<div style="float: left;width: 100%;">').append(it)); a.prop("disabled", !0); a.css("opacity", "0.5"); v.prop("disabled", !0); v.css("opacity", "0.5"); pt(); at() } function at() { y.on("change", yt); if (b) b.on("click", function () { ot.openAddAccountElementDialog(vt) }); if (w) w.on("keydown", function () { i.hide() }); if (l) l.on("change", function () { i.hide() }) } function vt(n) { n && (l.empty(), l.append(" <option value=''><\/option>"), l.append(" <option value='" + n[0].value + "' >" + t(n[0]).text() + "<\/option>"), l.val(n[0].value), i.hide()) } function yt() { if (r) { var n = y.val(), e = 0; if (l.empty(), i.hide(), n == "F") w.css("display", "inherit"), l.css("display", "none"), b.css("display", "none"), l.removeClass("frpt-cmb_formulaValue"), a.prop("disabled", !0), a.css("opacity", "0.5"), v.prop("disabled", !0), v.css("opacity", "0.5"), it.css("visibility", "hidden"); else { if (l.css("display", "inherit"), w.css("display", "none"), a.prop("disabled", !0), a.css("opacity", "0.5"), v.prop("disabled", !0), v.css("opacity", "0.5"), l.attr("disabled", !1), n == "R") e = u, b.css("display", "none"), a.prop("disabled", !0), a.css("opacity", "0.5"), v.prop("disabled", !0), v.css("opacity", "0.5"), l.removeClass("frpt-cmb_formulaValue"), it.css("visibility", "hidden"); else { if (n == "L") { b.css("display", "inherit"); l.addClass("frpt-cmb_formulaValue"); a.prop("disabled", !1); a.css("opacity", "1"); v.prop("disabled", !1); v.css("opacity", "1"); it.css("visibility", "hidden"); e = 0; return } n == "S" && (f ? (e = f, b.css("display", "none"), a.prop("disabled", !1), a.css("opacity", "1"), l.removeClass("frpt-cmb_formulaValue"), v.prop("disabled", !1), v.css("opacity", "1")) : (it.text(VIS.Msg.getMsg("FRPT_SelectGroupOnReportLineSetTab")), it.css("visibility", "visible"), y.val(""), y.trigger("change"))) } t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetType", async: !1, data: { type: y.val(), ReportLineID: e }, success: function (n) { var i = JSON.parse(n), r; if (l.append(t('<Option value=""><\/option>')), i) for (r in i) l.append(t('<Option value="' + i[r].Id + '">' + VIS.Utility.encodeText(i[r].Value) + "<\/option>")) } }) } } else y.val() == "" ? l.attr("disabled", !0) : l.attr("disabled", !1) } function pt() { var n = "", i = u; n = r ? VIS.Application.contextUrl + "FinancialReportSetting/GetFormulaLookup" : VIS.Application.contextUrl + "FinancialReportSetting/GetColumnFormulaLookup"; t.ajax({ url: n, async: !1, data: { id: i }, success: function (n) { var i = JSON.parse(n), u; if (i) { d.append(t('<Option value=""><\/option>')); for (u in i.OpenBracket) d.append(t('<Option value="' + i.OpenBracket[u].Id + '">' + VIS.Utility.encodeText(i.OpenBracket[u].Value) + "<\/option>")); y.append(t('<Option value=""><\/option>')); for (u in i.Type) y.append(t('<Option value="' + i.Type[u].Id + '">' + VIS.Utility.encodeText(i.Type[u].Value) + "<\/option>")); if (r) { v.append(t('<Option value=""><\/option>')); for (u in i.Calculate) v.append(t('<Option value="' + i.Calculate[u].Id + '">' + VIS.Utility.encodeText(i.Calculate[u].Value) + "<\/option>")); a.append(t('<Option value=""><\/option>')); for (u in i.ElementType) a.append(t('<Option value="' + i.ElementType[u].Id + '">' + VIS.Utility.encodeText(i.ElementType[u].Value) + "<\/option>")) } else { l.css("display", "inherit"); b.css("display", "none"); l.append(t('<Option value=""><\/option>')); for (u in i.Value) l.append(t('<Option value="' + i.Value[u].Id + '">' + VIS.Utility.encodeText(i.Value[u].Value) + "<\/option>")) } nt.append(t('<Option value=""><\/option>')); for (u in i.Operator) nt.append(t('<Option value="' + i.Operator[u].Id + '">' + VIS.Utility.encodeText(i.Operator[u].Value) + "<\/option>")); g.append(t('<Option value=""><\/option>')); for (u in i.OpenBracket) g.append(t('<Option value="' + i.CloseBracket[u].Id + '">' + VIS.Utility.encodeText(i.CloseBracket[u].Value) + "<\/option>")); c && tt.val(i.SeqNo) } }, error: function () { } }) } var ot = n, p = t('<div style="width:100%" class="frpt-fr-reportline frpt-fr-formulapopupwrp vis-formouterwrpdiv"> '), d = t("<select>"), y = t("<select>"), v = t("<select>"), g = t("<select>"), nt = t("<select>"), l = t("<select disabled>"), ut, st, k = "", ft, ht, rt = "", b = t("<div class='input-group-append'><span title='" + VIS.Msg.getMsg("FRPT_Type") + "' class='frpt-frf-btns frpt-glyphicons-deminsions vis vis-plus input-group-text' style='display: inherit;'><\/span>"), a, w; b.css("display", "none"); a = t("<select>"); w = t('<input style="display:none" type="number" step="any" onkeydown="return event.keyCode !== 69" placeholder=" " data-placeholder="">'); i = t('<label class="frpt-error" style="display:none;color:red !important"><\/label>'); var tt = t("<input>"), ct = 0, et = [], it = t('<label style="color:red !important;visibility:hidden;font-weight: normal;margin-bottom:0px;"><\/label>'); ct = u; lt(); this.setOpenBracket = function (n) { d.val(n) }; this.setType = function (n) { y.val(n); y.trigger("change") }; this.setCalculate = function (n) { v.val(n) }; this.setCloseBracket = function (n) { g.val(n) }; this.setOperator = function (n) { nt.val(n) }; this.setColumnCalculation = function (n) { n != "" && n != null ? k.setValue(n) : k.setValue(null) }; this.setAccountType = function (n) { rt.setValue(n) }; this.fillComboTypeValue = function (n, t, i) { n == "L" ? (l.empty(), l.append(" <option value=''><\/option>"), l.append(" <option value='" + t + "' >" + i + "<\/option>")) : n == "S" && (l.empty(), l.append(" <option value=''><\/option>"), l.append(" <option value='" + t + "' >" + i + "<\/option>")) }; this.setDimenstion = function (n) { a.val(n) }; this.setValue = function (n, t) { t == "F" ? (w.val(n), w.css("display", "inherit"), l.css("display", "none"), b.css("display", "none")) : (l.val(n), w.css("display", "none"), l.css("display", "inherit"), t == "L" && b.css("display", "inherit")) }; this.setSeqNo = function (n) { tt.val(n) }; this.hasData = function () { return et.length > 0 ? !0 : !1 }; this.clearData = function () { et = [] }; this.dispose = function () { p.remove(); d.remove(); y.remove(); r && v.remove(); g.remove(); nt.remove(); l.remove(); w.remove(); tt.remove(); a.remove(); p = null; d = null; y = null; v = null; g = null; nt = null; l = null; w = null; tt = null; a = null; ut = null; st = null; k = null; ft = null; ht = null; rt = null }; this.getRoot = function () { return p }; this.saveArray = function (n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveFormulaArray", async: !1, type: "POST", data: { param: JSON.stringify(et), id: n }, success: function (n) { var t = JSON.parse(n); r ? o(t) : s(t) }, error: function () { } }) }; this.ok = function () { var n = []; n.push(r); n.push(d.val()); n.push(y.val()); r ? n.push(v.val()) : n.push(0); n.push(g.val()); n.push(nt.val()); n.push(tt.val()); y.val() == "F" ? n.push(w.val()) : n.push(l.val()); n.push(ct); e ? n.push(e) : n.push(0); n.push(a.val()); r ? n.push(k.getValue()) : n.push(rt.getValue()); h ? et.push(n) : t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveFormula", async: !1, type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(n), success: function (n) { var t = JSON.parse(n); r ? o(t) : s(t) }, error: function () { } }) }; this.getTxtVal = function () { return y.val() == "F" ? w.val() : l.val() } } var i = null; r.prototype.show = function () { var n = new VIS.ChildDialog, t; n.setContent(this.getRoot()); n.setTitle(VIS.Msg.getMsg("FRPT_Formula")); n.setEnableResize(!1); n.setWidth(635); n.setWidth(700); n.setModal(!0); n.show(); t = this; n.onOkClick = function () { var n = t.getTxtVal(); if (n == "" || n == null) return i.text(VIS.Msg.getMsg("FRPT_ValueCannotNull")), i.show(), !1; t.ok() }; n.onCancelClick = function () { }; n.onClose = function () { t.dispose() } }; n.AForms.Formula = r }(FRPT, jQuery), function (n, t) { function i(i, r, u) { function ue() { fe(); oe(); ce(); ae() } function fe() { fu = t("<div id=FRPT_ParaDiv" + e + ">"); o = t('<div class="frpt-frf-form-wrap" id=FRPT_ParaDivContainer' + e + ">"); v = t("<select id=FRPT_ParaCmbAcctSchema" + e + ">"); pt = t("<select id=FRPT_ParacmbActivity" + e + ">"); fi = t('<input type="text" placeholder=" " data-placeholder="" data-hasbtn=" " id=FRPT_ParatxtBPartner' + e + ">"); ei = t('<input type="text" placeholder=" " data-placeholder="" data-hasbtn=" " id=FRPT_ParatxtProduct' + e + ">"); vr = t("<select id=FRPT_ParacmbBPartner" + e + ">"); p = t("<select id=FRPT_ParacmbCalendar" + e + ">"); yt = t("<select id=FRPT_ParacmbACampaign" + e + ">"); wt = t("<select id=FRPT_ParacmbGLBudget" + e + ">"); bt = t("<select id=FRPT_ParacmbLedgerCode" + e + ">"); ft = t("<select id=FRPT_ParacmbMonth" + e + ">"); st = t("<select id=FRPT_ParacmbOrg" + e + ">"); te = t("<select id=FRPT_ParacmbTrxOrg" + e + ">"); ui = t("<select id=FRPT_ParacmbPeriodType" + e + ">"); yr = t("<select id=FRPT_ParacmbProduct" + e + ">"); vt = t("<select id=FRPT_ParacmbProject" + e + ">"); lt = t("<select id=FRPT_ParacmbReportHierarchy" + e + ">"); at = t("<select id=FRPT_ParacmbSalesRegion" + e + ">"); c = t("<select id=FRPT_ParacmbYear" + e + ">"); v = t("<select id=FRPT_ParacmbAcctSchema" + e + ">"); et = t("<select id=FRPT_ParacmbPeriodGroup" + e + ">"); y = t("<select id=FRPT_ParacmbPeriodGroupTypey" + e + ">"); si = t('<input type="date" placeholder=" " data-placeholder="" id=FRPT_ParacmbAccountDate' + e + ">"); hi = t('<input type="date" placeholder=" " data-placeholder="" id=FRPT_ParacmbAccountDateTo' + e + ">"); nr = t('<input type="checkbox" id=FRPT_ParachkPrintOpeningBalance' + e + ">"); tr = t('<input type="checkbox" id=FRPT_ParachkUpdateBalanc' + e + ">"); h = t('<input type="checkbox" id=FRPT_ParaProfitAndLoss' + e + ">"); w = t('<input placeholder=" " data-placeholder="" data-hasbtn=" " type="text" data-texts="" id=FRPT_ParatxtOrg' + e + ">"); eu = t('<button class="input-group-text"><i class="vis vis-search" id=FRPT_ParabtnOpenOrgHierarchy' + e + "><\/i><\/button>"); ou = t('<button class="fa fa-arrow-left frpt-border-colour" type = "button"><\/button>'); su = t('<button class="fa fa-arrow-left frpt-border-colour" type = "button"><\/button>'); $txtOrgTrx = t('<input placeholder=" " data-placeholder="" data-hasbtn=" " type="text" data-texts="" id=FRPT_ParatxtOrgTrx' + e + ">"); hu = t('<button class="input-group-text"><i class="vis vis-search" id=FRPT_ParabtnOpenOrgTrxHierarchy' + e + "><\/i><\/button>"); ti = t("<select id=FRPT_ParacmbElementType" + e + ">"); kt = t("<select id=FRPT_ParacmbBalaneAggrigation" + e + ">"); ie = t("<select id=FRPT_ParacmbUseElementDimenssion" + e + ">"); b = t("<select id=FRPT_ParacmbUE1" + e + ">"); k = t("<select id=FRPT_ParacmbUE2" + e + ">"); d = t("<select id=FRPT_ParacmbUE3" + e + ">"); g = t("<select id=FRPT_ParacmbUE4" + e + ">"); ot = t("<select id=FRPT_ParacmbUE5" + e + ">"); nt = t("<select id=FRPT_ParacmbUE6" + e + ">"); tt = t("<select id=FRPT_ParacmbUE7" + e + ">"); it = t("<select id=FRPT_ParacmbUE8" + e + ">"); rt = t("<select id=FRPT_ParacmbUE9" + e + ">"); ht = t("<select id=FRPT_ParacmbDownloadPdf" + e + ">") } function ee() { var n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetElementTypeName", { C_AccSchemaId: v.val() }), i, r; if (n != null && n.length > 0) for (cu = [], i = 0; i < n.length; i++)cu.push({ Name: n[i].ElementName, elementType: n[i].ElementType, isheavydata: n[i].IsHeavyData }); r = t.grep(cu, function (n) { n.elementType == "X1" ? gu = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X2" ? nf = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X3" ? tf = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X4" ? rf = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X5" ? uf = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X6" ? ff = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X7" ? ef = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X8" ? of = n.isheavydata == "Y" ? !0 : !1 : n.elementType == "X9" && (sf = n.isheavydata == "Y" ? !0 : !1) }) } function oe() { var r = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetReportParameters", { ReportID: oi }), u, e, hr, cr, vi, yi, dr, gr, pi, wi, bi, ki, ir, rr, ur, fr, er, or, sr, n, i; if (df = [], r != null && r.length > 0) { for (u = 0; u < r.length; u++)if (e = r[u].Value, df.push({ elementValue: e, mandatory: r[u].IsMandatory ? !0 : !1 }), e == "AC") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(pt).append("<label>" + VIS.Msg.getMsg("Activity") + "<\/label>"); r[u].IsMandatory == "Y" && f(pt); ct.push("AY") } else if (e == "AD") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(si).append("<label>" + VIS.Msg.getMsg("FRPT_AcctDateRange") + " " + VIS.Msg.getMsg("From") + "<\/label>"); n = t('<div class="input-group vis-input-wrap">'); i = t('<div class="vis-control-wrap">'); s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(hi).append("<label>" + VIS.Msg.getMsg("To") + "<\/label>"); r[u].IsMandatory == "Y" && (f(si), f(hi)) } else if (e == "AS") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(v).append("<label>" + VIS.Msg.getMsg("AccountingSchema") + "<\/label>"); r[u].IsMandatory == "Y" && f(v) } else if (e == "BP") { ru = r[u].IsMandatory == "Y" ? !0 : !1; var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'), dt = t('<div class="input-group-append">'); o.append(s); s.append(n); n.append(i); n.append(dt); hr = "C_BPartner.IsActive='Y' AND C_BPartner.IsSummary ='N' AND C_BPartner.AD_Client_ID = " + VIS.context.getAD_Client_ID(); cr = VIS.MLookupFactory.get(VIS.Env.getCtx(), VIS.Env.getWindowNo(), 0, VIS.DisplayType.Search, "C_BPartner_ID", 0, !1, hr); fi = new VIS.Controls.VTextBoxButton("C_BPartner_ID", ru, !1, !0, VIS.DisplayType.Search, cr); i.append(fi).append(fi.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " ")); i.append("<label>" + VIS.Msg.getMsg("BusPartner") + "<\/label>"); dt.append(fi.getBtn(0)).append(fi.getBtn(1)); ct.push("BP") } else if (e == "CL") { var ii = t('<div class="input-group vis-input-wrap">'), ri = t('<div class="vis-control-wrap">'), ui = t('<div class="frpt-frf-form-dataPara">'); o.append(ui); ui.append(ii); ii.append(ri); ri.append(p).append("<label>" + VIS.Msg.getMsg("Calendar") + "<\/label>"); r[u].IsMandatory == "Y" && f(p) } else if (e == "CM") { var lr = t('<div class="input-group vis-input-wrap">'), ar = t('<div class="vis-control-wrap">'), bu = t('<div class="frpt-frf-form-dataPara">'); o.append(bu); s.append(lr); lr.append(ar); ar.append(yt).append("<label>" + VIS.Msg.getMsg("FRPT_Campaign") + "<\/label>"); r[u].IsMandatory == "Y" && f(yt); ct.push("MC") } else if (e == "GL") { var vr = t('<div class="input-group vis-input-wrap">'), yr = t('<div class="vis-control-wrap">'), pr = t('<div class="frpt-frf-form-dataPara">'); o.append(pr); pr.append(vr); vr.append(yr); yr.append(wt).append("<label>" + VIS.Msg.getMsg("FRPT_GLBudget") + "<\/label>"); r[u].IsMandatory == "Y" && f(wt) } else if (e == "LC") { var wr = t('<div class="input-group vis-input-wrap">'), br = t('<div class="vis-control-wrap">'), kr = t('<div class="frpt-frf-form-dataPara">'); o.append(kr); kr.append(wr); wr.append(br); br.append(bt).append("<label>" + VIS.Msg.getMsg("FRPT_LedgerCode") + "<\/label>"); r[u].IsMandatory == "Y" && f(bt); ct.push("AC") } else if (e == "MO") vi = t('<div class="input-group vis-input-wrap">'), yi = t('<div class="vis-control-wrap">'), vi.append(yi), di = t('<div style="display:none"  class="frpt-frf-form-dataPara">').append(vi), yi.append(ft).append("<label>" + VIS.Msg.getMsg("Month") + "<\/label>"), r[u].IsMandatory == "Y" && f(ft), o.append(di); else if (e == "OR") { if (window.VA003) { var a = t('<div class="input-group vis-input-wrap">'), ci = t('<div class="vis-control-wrap">'), li = t('<div class="frpt-frf-form-dataPara">'), ai = t('<div class="input-group-append">'); o.append(li); li.append(a); a.append(ci); a.append(ai); ci.append(w).append("<label>" + VIS.Msg.getMsg("Org") + "<\/label>"); ai.append(eu).append(ou); r[u].IsMandatory == "Y" && f(w) } else { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(st).append("<label>" + VIS.Msg.getMsg("Org") + "<\/label>"); r[u].IsMandatory == "Y" && f(st) } ct.push("OO") } else if (e == "PD") { dr = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetColumnforLookup", null); $mandatoryForPR = r[u].IsMandatory == "Y" ? !0 : !1; var ku = t("<div>"), n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'), dt = t('<div class="input-group-append">'); o.append(s); s.append(n); n.append(i); n.append(dt); gr = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), VIS.Env.getWindowNo(), dr, VIS.DisplayType.Search); ei = new VIS.Controls.VTextBoxButton("M_Product_ID", $mandatoryForPR, !1, !0, VIS.DisplayType.Search, gr); i.append(ei).append(ei.getControl()); dt.append(ei.getBtn(0)).append(ei.getBtn(1)); i.append("<label>" + VIS.Msg.getMsg("Product") + "<\/label>"); ct.push("PR") } else if (e == "PJ") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(vt).append("<label>" + VIS.Msg.getMsg("FRPT_Project") + "<\/label>"); r[u].IsMandatory == "Y" && f(vt); ct.push("PJ") } else if (e == "PO") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); pi = t('<label class="vis-ec-col-lblchkbox">'); i.append(pi); pi.append(nr).append(VIS.Msg.getMsg("FRPT_PrintOpeningBal")); r[u].IsMandatory == "Y" && nr.prop("checked", !0) } else if (e == "UB") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); wi = t('<label class="vis-ec-col-lblchkbox">'); i.append(wi); wi.append(tr).append(VIS.Msg.getMsg("FRPT_UpdateBalance")); r[u].IsMandatory == "Y" && tr.prop("checked", !0) } else if (e == "PL") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); bi = t('<label class="vis-ec-col-lblchkbox">'); i.append(bi); bi.append(h).append(VIS.Msg.getMsg("FRPT_ProfitAndLoss")); r[u].IsMandatory == "Y" && h.prop("checked", !0) } else if (e == "PT") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(et).append("<label>" + VIS.Msg.getMsg("FRPT_PeriodGroup") + "<\/label>"); r[u].IsMandatory == "Y" && f(et); ki = t('<div class="input-group vis-input-wrap">'); ir = t('<div class="vis-control-wrap">'); gi = t('<div  style="display:none" class="frpt-frf-form-dataPara">').append(ki); ki.append(ir); ir.append(y).append("<label>" + VIS.Msg.getMsg("FRPT_PeriodGroupType") + "<\/label>"); r[u].IsMandatory == "Y" && f(y); o.append(gi) } else if (e == "RH") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(lt).append("<label>" + VIS.Msg.getMsg("FRPT_RepHierarchy") + "<\/label>"); r[u].IsMandatory == "Y" && f(lt) } else if (e == "SR") { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i); i.append(at).append("<label>" + VIS.Msg.getMsg("Sales Region") + "<\/label>"); r[u].IsMandatory == "Y" && f(at); ct.push("SR") } else if (e == "TO") { if (window.VA003) { var a = t('<div class="input-group vis-input-wrap">'), ci = t('<div class="vis-control-wrap">'), li = t('<div class="frpt-frf-form-dataPara">'), ai = t('<div class="input-group-append">'); o.append(li); li.append(a); a.append(ci); a.append(ai); ci.append($txtOrgTrx).append("<label>" + VIS.Msg.getMsg("OrganizationUnit") + "<\/label>"); ai.append(hu).append(su); r[u].IsMandatory == "Y" && f($txtOrgTrx) } else { var n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), nu = t('<div class="input-group-append">'), s = t('<div class="frpt-frf-form-dataPara">'); o.append(s); s.append(n); n.append(i).append(nu); rr = !1; r[u].IsMandatory == "Y" && (rr = !0); ur = ""; ur = ct.includes("OO") ? " AD_Client_ID=" + VIS.context.getAD_Client_ID() + " AND IsActive='Y' AND IsSummary='N' AND CAST(LegalEntityOrg AS int) IN (@FRPT_FRFSelOrg_ID@) AND IsOrgUnit='Y' AND (IsCostCenter='Y' OR IsProfitCenter='Y') " : " AD_Client_ID=" + VIS.context.getAD_Client_ID() + " AND IsActive='Y' AND IsSummary='N' AND IsOrgUnit='Y' AND (IsCostCenter='Y' OR IsProfitCenter='Y') "; kf = VIS.MLookupFactory.get(VIS.Env.getCtx(), l.windowNo, 528, VIS.DisplayType.MultiKey, "AD_Org_ID", 0, !1, ur); ut = new VIS.Controls.VTextBoxButton("AD_Org_ID", rr, !1, !0, VIS.DisplayType.MultiKey, kf); i.append(ut.getControl()).append("<label>" + VIS.Msg.getMsg("OrganizationUnit") + "<\/label>"); nu.append(ut.getBtn(0)); r[u].IsMandatory == "Y" && (ut.getControl().addClass("vis-ev-col-mandatory").data("ismandatory", "Y"), ut.fireValueChanged = function () { var n = ut.value; ut.isMandatory == !0 && (n.length > 0 ? (ctrl.css("background-color", "#eee"), ut.getControl().removeClass("vis-ev-col-mandatory")) : (ctrl.css("background-color", "#eee"), ut.getControl().addClass("vis-ev-col-mandatory"))) }) } ct.push("OT") } else if (e == "YE") fr = t('<div class="input-group vis-input-wrap">'), er = t('<div class="vis-control-wrap">'), uu = t('<div style="display:none"  class="frpt-frf-form-dataPara">').append(fr), fr.append(er), er.append(c).append("<label>" + VIS.Msg.getMsg("Year") + "<\/label>"), r[u].IsMandatory == "Y" && f(c), o.append(uu); else if (e == "PG") { var tu = t('<div class="input-group vis-input-wrap">'), iu = t('<div class="vis-control-wrap">'), cu = t('<div class="frpt-frf-form-dataPara">'); o.append(cu); cu.append(tu); tu.append(iu); iu.append(et).append("<label>" + VIS.Msg.getMsg("FRPT_PeriodGroup") + "<\/label>"); r[u].IsMandatory == "Y" && f(et) } else if (e == "GT") or = t('<div class="input-group vis-input-wrap">'), sr = t('<div class="vis-control-wrap">'), gi = t('<div  style="display:none" class="frpt-frf-form-dataPara">').append(or), or.append(sr), sr.append(y).append("<label>" + VIS.Msg.getMsg("FRPT_PeriodGroupType") + "<\/label>"), r[u].IsMandatory == "Y" && f(y), o.append(gi); else if (e == "DT") { var lu = t('<div class="input-group vis-input-wrap">'), au = t('<div class="vis-control-wrap">'), vu = t('<div class="frpt-frf-form-dataPara">'); o.append(vu); vu.append(lu); lu.append(au); au.append(ti).append("<label>" + VIS.Msg.getMsg("FRPT_TypeNotInclude") + "<\/label>"); r[u].IsMandatory == "Y" && f(ti) } else if (e == "BA") { var yu = t('<div class="input-group vis-input-wrap">'), pu = t('<div class="vis-control-wrap">'), wu = t('<div class="frpt-frf-form-dataPara">'); o.append(wu); wu.append(yu); yu.append(pu); pu.append(kt).append("<label>" + VIS.Msg.getMsg("FRPT_BalanceAggrigation") + "<\/label>"); r[u].IsMandatory == "Y" && f(kt) } else if (e == "X1") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), hf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(b).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement1_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(b), gt = !0, ni.push("X1"); else if (e == "X2") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), cf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(k).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement2_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(k), gt = !0, ni.push("X2"); else if (e == "X3") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), lf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(d).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement3_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(d), gt = !0, ni.push("X3"); else if (e == "X4") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), af = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(g).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement4_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(g), gt = !0, ni.push("X4"); else if (e == "X5") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), vf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(ot).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement5_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(ot), gt = !0, ni.push("X5"); else if (e == "X6") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), yf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(nt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement6_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(nt), gt = !0, ni.push("X6"); else if (e == "X7") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), pf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(tt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement7_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(tt), gt = !0, ni.push("X7"); else if (e == "X8") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), wf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(it).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement8_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(it), gt = !0, ni.push("X8"); else if (e == "X9") n = t('<div class="input-group vis-input-wrap">'), i = t('<div class="vis-control-wrap">'), bf = t('<div class="frpt-frf-form-dataPara">').append(n), n.append(i), i.append(rt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "UserElement9_ID") + "<\/label>"), r[u].IsMandatory == "Y" && f(rt), gt = !0, ni.push("X9"); else if (e == "DR") { var ii = t('<div class="input-group vis-input-wrap">'), ri = t('<div class="vis-control-wrap">'), ui = t('<div class="frpt-frf-form-dataPara">'); o.append(ui); ui.append(ii); ii.append(ri); ri.append(ht).append("<label>" + VIS.Msg.getMsg("FRPT_DownloadPdf") + "<\/label>"); r[u].IsMandatory == "Y" && f(ht) } fi.fireValueChanged = se; ei.fireValueChanged = he } fu.append(o) } function se() { lr = fi.getValue() } function he() { ar = ei.getValue() } function f(n) { if (n.is("input:checkbox")) { n.addClass("vis-ev-col-mandatory").data("ismandatory", "Y"); n.on("click", function () { n.is(":checked") ? n.removeClass("vis-ev-col-mandatory") : n.addClass("vis-ev-col-mandatory") }) } else { n.addClass("vis-ev-col-mandatory").data("ismandatory", "Y"); n.on("change", function () { n.val().length > 0 ? n.removeClass("vis-ev-col-mandatory") : n.addClass("vis-ev-col-mandatory"); n.data("ismandatory") == "Y" && (n.val() == -1 || n.val() == "") ? n.addClass("vis-ev-col-mandatory") : n.removeClass("vis-ev-col-mandatory") }) } } function ce() { t.ajax({ url: VIS.Application.contextUrl + "ReportParameters/LoadReportParameters", data: { reportID: parseInt(oi), PType: JSON.stringify(ct) }, success: function (n) { var t = JSON.parse(n); l.log.fine("lookup Loaded"); le(t) }, error: function (n) { l.log.severe(n.message); console.log(n) } }) } function le(n) { var i = null, t; if (v.empty(), v.append("<option><\/option>"), n.AcctSchema) for (i = n.AcctSchema, t = 0; t < i.length; t++)v.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (pt.empty(), pt.append("<option><\/option>"), n.Activity) for (i = n.Activity, t = 0; t < i.length; t++)pt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (vr.empty(), vr.append("<option><\/option>"), n.BPartner) for (i = n.BPartner, t = 0; t < i.length; t++)vr.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (p.empty(), p.append("<option><\/option>"), n.Calendar) for (i = n.Calendar, t = 0; t < i.length; t++)p.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (yt.empty(), yt.append("<option><\/option>"), n.Campaign) for (i = n.Campaign, t = 0; t < i.length; t++)yt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (wt.empty(), wt.append("<option><\/option>"), n.GLBudget) for (i = n.GLBudget, t = 0; t < i.length; t++)wt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (bt.empty(), bt.append("<option><\/option>"), n.LedgerCode) for (i = n.LedgerCode, t = 0; t < i.length; t++)bt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (st.empty(), st.append("<option><\/option>"), n.Org) for (i = n.Org, t = 0; t < i.length; t++)st.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (et.empty(), et.append("<option><\/option>"), n.PeriodGroup) for (i = n.PeriodGroup, t = 0; t < i.length; t++)et.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (ui.empty(), ui.append("<option><\/option>"), n.PeriodType) for (i = n.PeriodType, t = 0; t < i.length; t++)ui.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (yr.empty(), yr.append("<option><\/option>"), n.Product) for (i = n.Product, t = 0; t < i.length; t++)yr.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (vt.empty(), vt.append("<option><\/option>"), n.Project) for (i = n.Project, t = 0; t < i.length; t++)vt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (lt.empty(), lt.append("<option><\/option>"), n.ReportHierarchy) for (i = n.ReportHierarchy, t = 0; t < i.length; t++)lt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (at.empty(), at.append("<option><\/option>"), n.SalesRegion) for (i = n.SalesRegion, t = 0; t < i.length; t++)at.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (ti.empty(), n.ElementType) for (i = n.ElementType, t = 0; t < i.length; t++)ti.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (kt.empty(), kt.append("<option><\/option>"), n.BlcAggregation) for (i = n.BlcAggregation, t = 0; t < i.length; t++)kt.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>"); if (ht.empty(), n.DownloadPDFList) for (i = n.DownloadPDFList, t = 0; t < i.length; t++)ht.append("<option value=" + i[t].Id + ">" + VIS.Utility.encodeText(i[t].Value) + "<\/option>") } function ae() { p.on("change", no); c.on("change", to); et.on("change", io); eu.on("click", be); ou.on("click", ke); su.on("click", de); hu.on("click", ge); if (gt == !0) v.on("change", ve); st.on("change", function () { VIS.context.setWindowContext(l.windowNo, "FRPT_FRFSelOrg_ID", st.val()); gf(st.val()) }) } function ii(n, i, r, u, e, s, h) { function p() { n == "X1" ? (ir = e.getValue(), ci.data("ismandatory") == "Y" && ri(ci)) : n == "X2" ? (rr = e.getValue(), li.data("ismandatory") == "Y" && ri(li)) : n == "X3" ? (ur = e.getValue(), ai.data("ismandatory") == "Y" && ri(ai)) : n == "X4" ? (fr = e.getValue(), vi.data("ismandatory") == "Y" && ri(vi)) : n == "X5" ? (er = e.getValue(), yi.data("ismandatory") == "Y" && ri(yi)) : n == "X6" ? (or = e.getValue(), pi.data("ismandatory") == "Y" && ri(pi)) : n == "X7" ? (sr = e.getValue(), wi.data("ismandatory") == "Y" && ri(wi)) : n == "X8" ? (hr = e.getValue(), bi.data("ismandatory") == "Y" && ri(bi)) : n == "X9" && (cr = e.getValue(), ki.data("ismandatory") == "Y" && ri(ki)) } var c = t("<div>"), y = VIS.MLookupFactory.getMLookUp(VIS.Env.getCtx(), VIS.Env.getWindowNo(), i, VIS.DisplayType.Search), l, a, v; if (e = new VIS.Controls.VTextBoxButton(r, u, !1, !0, VIS.DisplayType.Search, y), c.append(t("<div>").append(e).append(e.getControl()).append(e.getBtn(0)).append(e.getBtn(1))), h = t('<div class="frpt-frf-form-dataPara">').append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), s) + "<\/label>").append(c), o.append(h), dt = h, e.fireValueChanged = p, l = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetFRPT_ReportParameter", { ReportId: oi, EValue: n }), l != null && l.length > 0) for (a = 0; a < l.length; a++)v = l[a].Value, v == "X1" ? (lu = h, ci = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X2" ? (au = h, li = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X3" ? (vu = h, ai = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X4" ? (yu = h, vi = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X5" ? (pu = h, yi = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X6" ? (wu = h, pi = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X7" ? (bu = h, wi = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X8" ? (ku = h, bi = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) : v == "X9" && (du = h, ki = c.find("input"), l[a].IsMandatory == "Y" && f(c.find("input"))) } function ri(n) { n.val().trim().length > 0 ? n.data("ismandatory") == "Y" && n.val().trim().length <= 0 ? n.css("background-color", "#ffb6c1") : n.css("background-color", "white") : n.data("ismandatory") == "Y" && n.val().trim().length <= 0 ? n.css("background-color", "#ffb6c1") : n.css("background-color", "white") } function a(n) { h.is(":checked") ? (n.removeClass("vis-ev-col-mandatory"), n.attr("disabled", !0)) : n.data("ismandatory") == "Y" ? (n.addClass("vis-ev-col-mandatory"), n.attr("disabled", !1)) : (n.removeClass("vis-ev-col-mandatory"), n.attr("disabled", !1)) } function ve() { var n = v.val() == "" ? 0 : v.val(); ee(); t.ajax({ url: VIS.Application.contextUrl + "ReportParameters/GetUserElements", async: !1, type: "POST", data: { accounttSchemaID: n }, success: function (n) { var l = JSON.parse(n), et, ht, y, st, h, p, c; if (l != null) { var u = "", w = "", r = null, ft = null; for (s = null, b.empty(), k.empty(), d.empty(), g.empty(), ot.empty(), nt.empty(), tt.empty(), it.empty(), rt.empty(), et = 0, ht = "", y = 0; y < l.length; y++)if (u = l[y].ElementType, ni.indexOf(u) > -1) { w = l[y].TableName; var e = l[y].ElementType, i = l[y].ElementName, ut = ""; if (w == "C_ProfitAndLoss" && (s = e), st = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetColumnName", { TableName: w }), st != null && st.length > 0) { for (et = 1, c = 0; c < st.length; c++)ut += st[c].Value + "||' '||"; ut.endsWith("||") && (ut = ut.substring(0, ut.lastIndexOf("||") - 5)) } else et = 0; var ct = ut + " AS Name", ft = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetUElemetsforControls", { TableName: w, Name: ct }), f = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetAD_ColumnforSearch", { TableName: w }); if (f == 0 || f == null) continue; if (h = w + "_ID", l != null && l.length > 0) { if (u == "X1") if (r = b, s == "X1" && a(b), gu) { ii("X1", f, h, e, ci, "UserElement1_ID", lu); dt.find("label").text(i); continue } else o.append(hf), hf.find("label").text(i); else if (u == "X2") if (r = k, s == "X2" && a(k), nf) { ii("X2", f, h, e, li, "UserElement2_ID", au); dt.find("label").text(i); continue } else o.append(cf), cf.find("label").text(i); else if (u == "X3") if (r = d, s == "X3" && a(d), tf) { ii("X3", f, h, e, ai, "UserElement3_ID", vu); dt.find("label").text(i); continue } else o.append(lf), lf.find("label").text(i); else if (u == "X4") if (r = g, s == "X4" && a(g), rf) { ii("X4", f, h, e, vi, "UserElement4_ID", yu); dt.find("label").text(i); continue } else o.append(af), af.find("label").text(i); else if (u == "X5") if (r = ot, s == "X5" && a(ot), uf) { ii("X5", f, h, e, yi, "UserElement5_ID", pu); dt.find("label").text(i); continue } else o.append(vf), vf.find("label").text(i); else if (u == "X6") if (r = nt, s == "X6" && a(nt), ff) { ii("X6", f, h, e, pi, "UserElement6_ID", wu); dt.find("label").text(i); continue } else o.append(yf), yf.find("label").text(i); else if (u == "X7") if (r = tt, s == "X7" && a(tt), ef) { ii("X7", f, h, e, wi, "UserElement7_ID", bu); dt.find("label").text(i); continue } else o.append(pf), pf.find("label").text(i); else if (u == "X8") if (r = it, s == "X8" && a(it), of) { ii("X8", f, h, e, bi, "UserElement8_ID", ku); dt.find("label").text(i); continue } else o.append(wf), wf.find("label").text(i); else if (u == "X9") if (r = rt, s == "X9" && a(rt), sf) { ii("X9", f, h, e, ki, "UserElement9_ID", du); dt.find("label").text(i); continue } else o.append(bf), bf.find("label").text(i); if (et == 0 && (p = t(r.parents()[0]).find("label").text() + ", ", ht += p), r.append(t("<option value=-1><\/option>")), ft != null && ft.length > 0) for (c = 0; c < ft.length; c++)r.append(t("<option value=" + ft[c].ID + ">" + VIS.Utility.encodeText(ft[c].Name) + "<\/option>")) } } et == 0 && v.val() != "" && (p != null || p != undefined) && (p.endsWith(",") && (ht = p.substring(0, p.lastIndexOf(","))), VIS.ADialog.info("IdentifierNotFound", !1, ht, !1)) } }, error: function (n) { console.log(n) } }); ye() } function ye() { var t, i, n; if (v.val() == "" && (ir = -1, rr = -1, ur = -1, fr = -1, er = -1, or = -1, sr = -1, hr = -1, cr = -1, ci != null && lu.remove(), li != null && au.remove(), ai != null && vu.remove(), vi != null && yu.remove(), yi != null && pu.remove(), pi != null && wu.remove(), wi != null && bu.remove(), bi != null && ku.remove(), ki != null && du.remove()), t = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportParameters/GetParametersforUElemets", { ReportId: oi }), t != null && t.length > 0) for (i = 0; i < t.length; i++)(n = t[i].Value, t[i].IsMandatory == "Y") && (n == "X1" ? h.is(":checked") || b.val() == -1 && b.val() == null || f(b) : n == "X2" ? h.is(":checked") || k.val() == -1 && k.val() != null || f(k) : n == "X3" ? h.is(":checked") || d.val() == -1 && d.val() == null || f(d) : n == "X4" ? h.is(":checked") || g.val() == -1 && g.val() == null || f(g) : n == "X5" ? !h.is(":checked") && (ot.val() != -1 || ot.val() != null) : n == "X6" ? h.is(":checked") || nt.val() == -1 && nt.val() == null || f(nt) : n == "X7" ? h.is(":checked") || tt.val() == -1 && tt.val() == null || f(tt) : n == "X8" ? h.is(":checked") || it.val() == -1 && it.val() == null || f(it) : n == "X9" && (h.is(":checked") || rt.val() == -1 && rt.val() == null || f(rt))) } function pe(n) { w.val(""); w.data("texts", ""); $txtOrgTrx.val(""); $txtOrgTrx.data("texts", ""); n.length > 0 && (w.data("texts", n[0]), w.val(n[1]), w.attr("title", n[1]), w.css("background-color", "transparent"), VIS.context.setWindowContext(l.windowNo, "FRPT_FRFSelOrg_ID", n[0]), gf(n[0])) } function we(n) { $txtOrgTrx.val(""); $txtOrgTrx.data("texts", ""); n.length > 0 && ($txtOrgTrx.data("texts", n[0]), $txtOrgTrx.val(n[1]), $txtOrgTrx.attr("title", n[1]), $txtOrgTrx.css("background-color", "transparent"), VIS.context.setWindowContext(l.windowNo, "FRPT_FRFSelOrgTrx_ID", n[0])) } function gf(n) { n.length > 0 && t.ajax({ type: "POST", url: VIS.Application.contextUrl + "ReportParameters/GetOrgCalendar", data: { orgID: n }, success: function (n) { var t = JSON.parse(n), i; if (l.log.fine("Org Calendar Loaded"), t && t.length > 0) for (p.empty(), p.append("<option><\/option>"), i = 0; i < t.length; i++)p.append("<option value=" + t[i].Id + ">" + VIS.Utility.encodeText(t[i].Value) + "<\/option>") }, error: function (n) { l.log.severe(n.message) } }) } function be() { var t = new n.AForms.OrgTree(pe, !0, null); t.show() } function ke() { t(this).parents(".input-group-append").siblings().find("input").removeAttr("title"); w.val(""); w.data("texts", "") } function de() { t(this).parents(".input-group-append").siblings().find("input").removeAttr("title"); $txtOrgTrx.val(""); $txtOrgTrx.data("texts", "") } function ge() { var t = new n.AForms.OrgTree(we, !1, w.data("texts")); t.show() } function no() { p.val() > 0 ? t.ajax({ url: VIS.Application.contextUrl + "ReportParameters/GetCalendarYear", data: { calendarID: p.val() }, success: function (n) { var t = JSON.parse(n), i; if (l.log.fine("Year Loaded"), c.empty(), c.append("<option><\/option>"), uu.show(), c.data("ismandatory") == "Y" && c.val() == "" && f(c), t && t.length > 0) for (i = 0; i < t.length; i++)c.append("<option value=" + t[i].Id + ">" + VIS.Utility.encodeText(t[i].Value) + "<\/option>") }, error: function (n) { l.log.severe(n.message) } }) : (c.empty(), c.append("<option><\/option>"), uu.hide(), di.hide()) } function to() { c.val() > 0 ? t.ajax({ url: VIS.Application.contextUrl + "ReportParameters/GetYearMonth", data: { yearID: c.val() }, success: function (n) { var t = JSON.parse(n), i; if (t && t.length > 0 && (l.log.fine("Months Loaded"), ft.empty(), ft.append("<option><\/option>"), di != undefined && di.show(), ft.data("ismandatory") == "Y" && ft.val() == "" && f(ft), t && t.length > 0)) for (i = 0; i < t.length; i++)ft.append("<option value=" + t[i].Id + ">" + VIS.Utility.encodeText(t[i].Value) + "<\/option>") }, error: function (n) { l.log.severe(n.message) } }) : (ft.empty(), ft.append("<option><\/option>"), di.hide()) } function io() { et.val() > 0 ? t.ajax({ url: VIS.Application.contextUrl + "ReportParameters/GetPeriodGroupType", data: { id: et.val() }, success: function (n) { var t = JSON.parse(n), i; if (t && t.length > 0 && (l.log.fine("Group Types Loaded"), y.empty(), y.append("<option><\/option>"), gi.show(), y.data("ismandatory") == "Y" && y.val() == "" && f(y), t && t.length > 0)) for (i = 0; i < t.length; i++)y.append("<option value=" + t[i].Id + ">" + VIS.Utility.encodeText(t[i].Value) + "<\/option>") }, error: function (n) { l.log.severe(n.message) } }) : (y.empty(), y.append("<option><\/option>"), gi.hide()) } function ne() { if (v.data("ismandatory") == "Y" && v.val().length == 0) return VIS.ADialog.info("FRPT_AcctSchMadatory"), !1; if (ru == !0 && (lr == 0 || lr == null)) return VIS.ADialog.info("FRPT_BPMadatory"), !1; if (p.data("ismandatory") == "Y" && p.val().length == 0) return VIS.ADialog.info("FRPT_CalendarMadatory"), !1; if (yt.data("ismandatory") == "Y" && yt.val().length == 0) return VIS.ADialog.info("FRPT_CampaignMadatory"), !1; if (wt.data("ismandatory") == "Y" && wt.val().length == 0) return VIS.ADialog.info("FRPT_GLBudgetMadatory"), !1; if (bt.data("ismandatory") == "Y" && bt.val().length == 0) return VIS.ADialog.info("FRPT_LedgerCodeMadatory"), !1; if (ft.data("ismandatory") == "Y" && c.val().length != 0 && ft.val().length == 0) return VIS.ADialog.info("FRPT_MonthMadatory"), !1; if (window.VA003) { if (w.data("ismandatory") == "Y" && w.data("texts").length == 0) return VIS.ADialog.info("FRPT_OrgMadatory"), !1 } else if (st.data("ismandatory") == "Y" && st.val().length == 0) return VIS.ADialog.info("FRPT_OrgMadatory"), !1; if (window.VA003) { if ($txtOrgTrx.data("ismandatory") == "Y" && $txtOrgTrx.data("texts").length == 0) return VIS.ADialog.info("FRPT_OrgTrxMadatory"), !1 } else if (ut != null && ut.isMandatory == !0 && ut.value == null) return VIS.ADialog.info("FRPT_trxOrgMadatory"), !1; if (ui.data("ismandatory") == "Y" && ui.val().length == 0) return VIS.ADialog.info("FRPT_PeriodTypeMadatory"), !1; if (re == !0 && (ar == 0 || ar == null)) return VIS.ADialog.info("FRPT_ProductMadatory"), !1; if (vt.data("ismandatory") == "Y" && vt.val().length == 0) return VIS.ADialog.info("FRPT_ProjectMadatory"), !1; if (lt.data("ismandatory") == "Y" && lt.val().length == 0) return VIS.ADialog.info("FRPT_RHMadatory"), !1; if (at.data("ismandatory") == "Y" && at.val().length == 0) return VIS.ADialog.info("FRPT_SalesRegionMadatory"), !1; if (c.data("ismandatory") == "Y" && c.val().length == 0) return VIS.ADialog.info("FRPT_YearMadatory"), !1; if (pt.data("ismandatory") == "Y" && pt.val().length == 0) return VIS.ADialog.info("FRPT_ActivityMadatory"), !1; if (et.data("ismandatory") == "Y" && et.val().length == 0) return VIS.ADialog.info("FRPT_PeriodGroupMadatory"), !1; if (y.data("ismandatory") == "Y" && y.val().length == 0) return VIS.ADialog.info("FRPT_PGTypeMadatory"), !1; if (si.data("ismandatory") == "Y" && si.val().length == 0 || hi.data("ismandatory") == "Y" && hi.val().length == 0) return VIS.ADialog.info("FRPT_AccountDateMadatory"), !1; if (ti.data("ismandatory") == "Y" && ti.val().length == 0) return VIS.ADialog.info("FRPT_ElementTypeMadatory"), !1; if (kt.data("ismandatory") == "Y" && kt.val().length == 0) return VIS.ADialog.info("FRPT_BlcAggrigationMadatory"), !1; if (ht.data("ismandatory") == "Y" && ht.val().length == 0) return VIS.ADialog.info("FRPT_DownloadPdfMandatory"), !1; if (ci != null) { if (ci.data("ismandatory") == "Y" && (ir == -1 || ir == null)) return VIS.ADialog.info("FillMandatory"), !1; pr = ir } else if (b.data("ismandatory") != "Y" || b.val() != -1 && b.val() != null || s == "X1" && h.is(":checked")) b.val() != null && (pr = b.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (li != null) { if (li.data("ismandatory") == "Y" && (rr == -1 || rr == null)) return VIS.ADialog.info("FillMandatory"), !1; wr = rr } else if (k.data("ismandatory") != "Y" || k.val() != -1 && k.val() != null || s == "X2" && h.is(":checked")) k.val() != null && (wr = k.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (ai != null) { if (ai.data("ismandatory") == "Y" && (ur == -1 || ur == null)) return VIS.ADialog.info("FillMandatory"), !1; br = ur } else if (d.data("ismandatory") != "Y" || d.val() != -1 && d.val() != null || s == "X3" && h.is(":checked")) d.val() != null && (br = d.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (vi != null) { if (vi.data("ismandatory") == "Y" && (fr == -1 || fr == null)) return VIS.ADialog.info("FillMandatory"), !1; kr = fr } else if (g.data("ismandatory") != "Y" || g.val() != -1 && g.val() != null || s == "X4" && h.is(":checked")) g.val() != null && (kr = g.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (yi != null) { if (yi.data("ismandatory") == "Y" && (er == -1 || er == null)) return VIS.ADialog.info("FillMandatory"), !1; dr = er } else if (ot.data("ismandatory") != "Y" || ot.val() != -1 && ot.val() != null || s == "X5" && h.is(":checked")) ot.val() != null && (dr = ot.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (pi != null) { if (pi.data("ismandatory") == "Y" && (or == -1 || or == null)) return VIS.ADialog.info("FillMandatory"), !1; gr = or } else if (nt.data("ismandatory") != "Y" || nt.val() != -1 && nt.val() != null || s == "X6" && h.is(":checked")) nt.val() != null && (gr = nt.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (wi != null) { if (wi.data("ismandatory") == "Y" && (sr == -1 || sr == null)) return VIS.ADialog.info("FillMandatory"), !1; nu = sr } else if (tt.data("ismandatory") != "Y" || tt.val() != -1 && tt.val() != null || s == "X7" && h.is(":checked")) tt.val() != null && (nu = tt.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (bi != null) { if (bi.data("ismandatory") == "Y" && (hr == -1 || hr == null)) return VIS.ADialog.info("FillMandatory"), !1; tu = hr } else if (it.data("ismandatory") != "Y" || it.val() != -1 && it.val() != null || s == "X8" && h.is(":checked")) it.val() != null && (tu = it.val()); else return VIS.ADialog.info("FillMandatory"), !1; if (ki != null) { if (ki.data("ismandatory") == "Y" && (cr == -1 || cr == null)) return VIS.ADialog.info("FillMandatory"), !1; iu = cr } else if (rt.data("ismandatory") != "Y" || rt.val() != -1 && rt.val() != null || s == "X9" && h.is(":checked")) rt.val() != null && (iu = rt.val()); else return VIS.ADialog.info("FillMandatory"), !1; return !0 } var l, fu, o, oi, e, v, p, c, ft, ui, st, lt, vr, yr, at, te, vt, yt, pt, wt, bt, et, y, si, hi, nr, tr, h, w, eu, ou, su, ti, kt, b, k, d, g, ot, nt, tt, it, rt, ht, hu = null, kf = null, ut = null, ie = null, cu = {}, fi = null, ei = null, df = [], ci = null, li = null, ai = null, vi = null, yi = null, pi = null, wi = null, bi = null, ki = null, lu = null, au = null, vu = null, yu = null, pu = null, wu = null, bu = null, ku = null, du = null, ir = -1, rr = -1, ur = -1, fr = -1, er = -1, or = -1, sr = -1, hr = -1, cr = -1, pr = -1, wr = -1, br = -1, kr = -1, dr = -1, gr = -1, nu = -1, tu = -1, iu = -1, gu = null, nf = null, tf = null, rf = null, uf = null, ff = null, ef = null, of = null, sf = null, hf = null, cf = null, lf = null, af = null, vf = null, yf = null, pf = null, wf = null, bf = null, dt = null, s = null, lr = 0, ar = 0, ru = null, re = null, uu, di, gi, gt = !1, ro = r, ni = [], ct = []; l = this; this.log = VIS.Logging.VLogger.getVLogger("ReportParameters"); this.windowNo = VIS.Env.getWindowNo(); console.log(l.windowNo); e = u; oi = i; ue(); h.on("click", function () { var n = null; s != null && (s == "X1" ? (a(b), n = b) : s == "X2" ? (a(k), n = k) : s == "X3" ? (a(d), n = d) : s == "X4" ? (a(g), n = g) : s == "X5" ? (a(ot), n = ot) : s == "X6" ? (a(nt), n = nt) : s == "X7" ? (a(tt), n = tt) : s == "X8" ? (a(it), n = it) : s == "X9" && (a(rt), n = rt), n != null && (h.is(":checked") ? (n.val(""), n.attr("disabled", !0)) : (n.attr("disabled", !1), n.val("")))) }); this.getRoot = function () { return fu }; this.ok = function (n, i) { var u, r, f, s, o; if (!ne()) return i && i.css("display", "none"), !1; for (u = "", u = window.VA003 ? w.data("texts") : st.val(), r = null, window.VA003 ? r = $txtOrgTrx.data("texts") : ut != null && (r = ut.value), r != null && (r = r.replaceAll(" ", ""), r = r.replaceAll(",", "A")), VIS.Env.getCtx().setContext(oi + "_" + e, "DownloadPdf", ht.val()), f = [], u != null && ht.val() == "OW" ? f = u.split(",") : f[0] = u, s = tr.is(":checked"), o = 0; o < f.length; o++)o > 0 && (s = !1), t.ajax({ type: "POST", url: VIS.Application.contextUrl + "Data/GetData", data: { C_Period_ID: ui.val(), Org_ID: f[o], C_BPartner_ID: lr, M_Product_ID: ar, C_Project_ID: vt.val(), C_Activity_ID: pt.val(), C_SalesRegion_ID: at.val(), C_Campaign_ID: yt.val(), DetailsSourceFirst: !1, UpdateBalances: s, PA_Hierarchy_ID: lt.val(), Fact_Accumulation_ID: kt.val(), RecordID: oi, AcctSchemaID: v.val(), calendarID: p.val(), yearID: c.val(), monthID: ft.val(), trxOrgArray: r, GLBudgetID: wt.val(), ledgercodeID: bt.val(), periodGroupID: et.val(), periodGroupTypeID: y.val(), date: si.val(), dateTo: hi.val(), printOpenBalance: nr.is(":checked"), ElementType: ti.val(), UserElement1_ID: pr, UserElement2_ID: wr, UserElement3_ID: br, UserElement4_ID: kr, UserElement5_ID: dr, UserElement6_ID: gr, UserElement7_ID: nu, UserElement8_ID: tu, UserElement9_ID: iu, windowNo: e, IsProfitAndLoss: h.is(":checked"), downloadPdf: ht.val() }, success: function (t) { n && n(t.result) }, error: function (n) { l.log.severe(n.message) } }) }; this.getRowDetail = function (n, i, r, u, f, e) { var o, s; if (!ne()) return !1; o = ""; o = window.VA003 ? w.data("texts") : st.val(); o != "" && e != "" && ht.val() == "OW" && (o = e); s = null; window.VA003 ? s = $txtOrgTrx.data("texts") : ut != null && (s = ut.value); t.ajax({ type: "POST", url: VIS.Application.contextUrl + "Data/GetRowDetail", data: { C_Period_ID: ui.val(), Org_ID: o, C_BPartner_ID: lr, M_Product_ID: ar, C_Project_ID: vt.val(), C_Activity_ID: pt.val(), C_SalesRegion_ID: at.val(), C_Campaign_ID: yt.val(), DetailsSourceFirst: !1, UpdateBalances: tr.is(":checked"), PA_Hierarchy_ID: lt.val(), Fact_Accumulation_ID: kt.val(), RecordID: u, AcctSchemaID: v.val(), calendarID: p.val(), yearID: c.val(), monthID: ft.val(), trxOrgID: s, GLBudgetID: wt.val(), ledgercodeID: bt.val(), periodGroupID: et.val(), periodGroupTypeID: y.val(), date: si.val(), dateTo: hi.val(), printOpenBalance: nr.is(":checked"), PA_ReportLine_ID: i, PA_ReportColumn_ID: r, ElementType: ti.val(), UserElement1_ID: pr, UserElement2_ID: wr, UserElement3_ID: br, UserElement4_ID: kr, UserElement5_ID: dr, UserElement6_ID: gr, UserElement7_ID: nu, UserElement8_ID: tu, UserElement9_ID: iu, IsProfitAndLoss: h.is(":checked"), downloadPdf: ht.val() }, success: function (t) { n && n(t.result, f) }, error: function (n) { l.log.severe(n.message) } }) }; this.cancel = function () { }; this.dispose = function () { } } n.AForms = n.AForms || {}; i.prototype.show = function () { var n = new VIS.ChildDialog, t; n.setContent(this.getRoot()); n.setTitle(VIS.Msg.getMsg("FRPT_ReportParameters")); n.setEnableResize(!1); n.setHeight(600); n.setWidth(700); n.setModal(!0); n.show(); t = this; n.onOkClick = function () { t.ok() }; n.onCancelClick = function () { t.cancel() }; n.onClose = function () { t.dispose() } }; n.AForms.ReportParameters = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i() { function pi(n) { var t = document.createElement("a"); t.href = n; t.download = n.substring(n.lastIndexOf("\\") + 1); document.body.appendChild(t); t.click(); document.body.removeChild(t) } function wi(n) { return n.hasClass("frpt-border-top") ? "frpt-border-top" : n.hasClass("frpt-border-bottom") ? "frpt-border-bottom" : n.hasClass("frpt-border-both") ? "frpt-border-both" : n.hasClass("frpt-border-double") ? "frpt-border-double" : n.hasClass("frpt-border-single") ? "frpt-border-single" : null } function bi(n, t) { var i = 0; return n == null ? i : (typeof n == "string" ? n : n = n.toString(), t ? (n.contains("−") ? n = (-1 * st.GetConvertedNumber(n, t)).toString() : n.contains(".") && (n = st.GetConvertedNumber(n, t).toString()), i = n != "" ? n : i) : (n.contains("−") && !n.contains(".") ? n = (-1 * st.GetConvertedNumber(n, t)).toString() : n.contains(",") && (n = st.GetConvertedNumber(n, t).toString()), i = n != "" ? n : i), i) } var c = t("<div style='overflow:auto;height:100%;width:100%;background: #fff;' class='vis-app-aform-root vis-forms-container'>"), ht, e, h, f, g, ut, nt, w, ri, ui, fi, ei, oi, tt, ft, it, v, r, i, u, s, ct, b, si, hi, ci, y = !1, lt = !1, at = 0, o = this, l, vt, yt, rt, k, pt = !0, p, wt, dt, ti, ii; this.ReportID = 0; p = null; wt = null; this.reportWindowNO; var et = null, a = null, bt, gt, ot = null, kt = "", st = VIS.DisplayType.GetNumberFormat(VIS.DisplayType.Amount), li = VIS.Env.isDecimalPoint(), d = VIS.Env.getCtx().getAD_Language(); this.setReportName = function (n) { n && n != null && (kt = n) }; this.getReportName = function () { return kt }; this.getRoot = function () { return c }; this.initializeComponent = function (n, i, r) { var s, u; wt = i; o.ReportID = n; o.reportWindowNO = r; v = new VIS.CFrame; v.setName(VIS.Utility.encodeText(this.getReportName())); v.setTitle(VIS.Utility.encodeText(this.getReportName())); v.setContent(o); v.hideHeader(!0); v.show(); rt = t('<button class="frpt-genrate-report frpt-frf-genrptbtn" id=FRPT_Gbtn' + o.reportWindowNO + ">" + VIS.Msg.getMsg("FRPT_GenerateReport") + "<\/button>"); k = t('<div class="frpt-rptleftmaindatasec vis-leftsidebarouterwrap" id=FRPT_Param' + o.reportWindowNO + ">"); h = t('<div class="vis-busyindicatorouterwrap" id=FRPT_Busy' + o.reportWindowNO + ' style="display: none; z-index:998 !important"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"><\/i><\/div><\/div>'); f = t('<div style="background: #fff;" class="frpt-report-header" id=FRPT_DivAll' + o.reportWindowNO + "> "); vi(); l = t("<div class='frpt-report-left' id=FRPT_RepLeft" + o.reportWindowNO + ">"); $rightPart = t("<div  class='frpt-report-right' id=FRPT_RepRight" + o.reportWindowNO + ">"); ht = t("<div id=FRPT_DivContent" + o.reportWindowNO + ">"); ht.append(l); ht.append($rightPart); vt = t("<div class='frpt-left-title' id=FRPT_DivTitle" + o.reportWindowNO + ">"); yt = t("<button id=FRPT_BtnExpand" + o.reportWindowNO + ">").append(t('<i class="fa fa-bars"><\/i>')); vt.append(yt); l.append(vt); s = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetReference"); gt = VIS.MLookupFactory.get(VIS.Env.getCtx(), 0, 0, VIS.DisplayType.List, "AD_Ref_List_ID", s, !1, "AD_Ref_List.IsActive='Y'"); ot = new VIS.Controls.VComboBox("AD_Ref_List_ID", !0, !1, !0, gt); ot.setValue("A4L"); u = t('<div class="vis-control-wrap frpt-list-size">'); bt.append(u); u.append(ot.getControl()); e = t('<div style="float: left;width:100%" id=FRPT_DGrid' + o.reportWindowNO + " data-ReportID= " + o.ReportID + ">"); l.css("height", c.height() - 42); l.append(k); l.append(rt); c.append(f); c.append(h); $rightPart.css("height", c.height() - 48); $rightPart.css("width", c.width() - 280); f.append(l); f.append($rightPart); $rightPart.append(e); k.css("height", l.height() - 82); yi(); ai() }; this.disposeComponent = function () { dt() }; this.dispose = function () { }; var ni = function (n, t, i) { var c = [], a = [], v = {}, u = n.data, e, y, f, h, r, o, s; for (r in n.ColumnDetail) e = { resizable: !0 }, y = { editable: !1, nullable: !0 }, et = n.ColumnDetail[r].ColumnPrecision >= 0 ? n.ColumnDetail[r].ColumnPrecision : n.AmountFormat, v[n.ColumnDetail[r].ColumnName.toUpperCase()] = y, e.title = VIS.Utility.encodeText(n.ColumnDetail[r].Name), e.field = n.ColumnDetail[r].ColumnName.toUpperCase(), e.hidden = n.ColumnDetail[r].IsHidden, e.title == "Name" || e.title == "Description" ? (e.width = "350px", e.attributes = { "class": "frpt-" + r }) : e.title == "SeqNo" || (e.width = "200px", e.format = "{0:" + (et == null ? "n" : "n" + et) + "}", e.attributes = { "class": "frpt-" + r + " frpt-grid-amt-col" }), c.push(e); let l = -1; for (f = 0; f < u[0].RowCount; f++) { h = {}; for (r in u) l = u[r].ColumnPrecision != null && u[r].ColumnPrecision >= 0 ? u[r].ColumnPrecision : n != null && n.AmountFormat != null ? n.AmountFormat : 2, h[u[r].ColumnName.toUpperCase()] = (typeof u[r].Values[f] == "number" || u[r].Values[f] === null) && u[r].ColumnName.toUpperCase().contains("COL_") ? u[r].Values[f] == 0 && (u[r].PrintValues[f] == "BL" || u[r].PrintValues[f] == "AN") ? null : u[r].Values[f] == null && (u[r].PrintValues[f] == "ZE" || u[r].PrintValues[f] == "AZ") ? 0..toLocaleString(navigator.language, { maximumFractionDigits: l, minimumFractionDigits: l }) : u[r].Values[f] : u[r].Values[f]; h.recid = f + 1; a[f] = h } o = new kendo.data.DataSource({ batch: !0, schema: { model: { id: "TPK", fields: v } }, transport: { read: function (n) { n.success(a) }, update: function (n) { updateBatch(n.data.models) }, parameterMap: function (n, t) { if (t !== "read" && n.models) return { models: kendo.stringify(n.models) } } } }); n.ShowHierarchy == !0 && (n.HasSubGroup == !0 ? (s = [], s.push({ field: "PA_REPORTLINE_ID" }), s.push({ field: "SUBHIERARCHY" }), o.group(s)) : s.push({ field: "PA_REPORTLINE_ID" })); o.sort({ field: "SEQNO", dir: "asc" }); i == !0 ? t.kendoGrid({ navigatable: !0, columns: c, dataSource: o, editable: !1, columnMenu: !1, sortable: !1, groupable: !1, allowCopy: !0, resizable: !0, navigatable: !0, dataBound: onRowDetailBound, selectable: "single, row", scrollable: !0 }) : t.kendoGrid({ navigatable: !0, columns: c, dataSource: o, editable: !1, columnMenu: !1, sortable: !1, groupable: !1, allowCopy: !0, resizable: !0, navigatable: !0, dataBound: ti, selectable: "single, row", scrollable: !0 }); t.css("width", $rightPart.width()) }, ai = function () { p = new n.AForms.ReportParameters(o.ReportID, wt, o.reportWindowNO); k.append(p.getRoot()) }, vi = function () { g = t("<div class='vis-report-header'>").append(t('<h3 class="vis-report-tittle">').append(VIS.Utility.encodeText(kt))); ut = t('<a href="javascript:void(0)" class="vis-icon-menuclose vis vis-cross" id=FRPT_BtnClose' + o.reportWindowNO + ">"); nt = t('<div class="vis-report-top-icons" id=FRPT_ActionContainer' + o.reportWindowNO + ">"); bt = t('<div class="input-group vis-input-wrap frpt-list-control" id=FRPT_DivPageSize' + o.reportWindowNO + ">"); var n = t('<div><span class="d-inline-block mr-2">' + VIS.Msg.getMsg("FRPT_PDFPageSize") + "<\/span><\/div>"); nt.append(bt.append(n)); w = t("<ul>"); nt.append(w); it = t('<input type="checkbox" id=FRPT_ChkExpandAll' + o.reportWindowNO + ">"); w.append(t('<div style="display: inline-flex;padding: 0 5px;">').append(it).append(t("<label>").append(VIS.Msg.getMsg("ExpandAll")))); ft = t("<a href='javascript:void(0)' style='cursor:pointer;' class='vis vis-save-csv' id=FRPT_BtnSavecsv" + o.reportWindowNO + "><\/a>"); w.append(ft); tt = t("<a href='javascript:void(0)' style='cursor:pointer;' class='vis vis-save-pdf' id=FRPT_BtnSavePdf" + o.reportWindowNO + "><\/a>"); w.append(tt); g.append(nt); g.append(ut); f.append(g) }, yi = function () { yt.on("click", function () { if (pt) { k.css("display", "none"); rt.css("display", "none"); l.animate({ width: "40px" }, "slow"); var n = c.width() - 50; setTimeout(function () { }, 500); pt = !1 } else k.css("display", "block"), rt.css("display", "block"), l.animate({ width: "272px" }, "slow"), pt = !0 }); rt.on("click", function () { p != null && (y = VIS.Utility.Util.getValueOfBoolean(VIS.Env.getCtx().getContext(o.ReportID, "FRPT_IsRepeatHeader") == !0 ? !0 : !1), at = VIS.Utility.Util.getValueOfInt(VIS.Env.getCtx().getContext(o.ReportID, "ColumnAfterIndex")), lt = VIS.Utility.Util.getValueOfBoolean(VIS.Env.getCtx().getContext(o.ReportID, "FRPT_IsListSource") == !0 ? !0 : !1), h.css("display", "block"), p.ok(null, h)) }); ut.on("click", function () { dt() }); tt.on("click", function () { var v = "", b = null, i = null, c = VIS.context.getContext("#AD_Org_Name"), rt = ot.getValue(), k, u, h, l, p, r, o, n, g, nt; if (c != null && c != "*" ? y ? (b = '<div><p style="text-align:center; font-size: 12px;"><b>' + c + '<\/b><\/p><p style = "text-align:right; font-size: 8px;">' + VIS.Msg.getMsg("FRPT_PrintDate") + " " + (new Date).toLocaleDateString() + "<\/p><\/div> ", c = VIS.Utility.encodeText(t(f.find(".vis-report-header")[0]).find("h3").text()), b += '<div  style="text-align:center; font-size: 12px;"><b>' + c + "<\/b><\/div> <div><\/div>") : (v = '<div><p style="text-align:center; font-size: 12px;"><b>' + c + '<\/b><\/p><p style = "text-align:' + (d == "ar_IQ" ? "left" : "right") + '; font-size: 8px;">' + VIS.Msg.getMsg("FRPT_PrintDate") + " " + (new Date).toLocaleDateString() + "<\/p><\/div> ", c = VIS.Utility.encodeText(t(f.find(".vis-report-header")[0]).find("h3").text()), v += '<div  style="text-align:center"><b>' + c + "<\/b><\/div> <div><\/div>") : (c = VIS.Utility.encodeText(t(f.find(".vis-report-header")[0]).find("h3").text()), y ? b = '<div  style="text-align:center; font-size: 12px;"><b>' + c + "<\/b><\/div> <div><\/div>" : v = '<div  style="text-align:center; font-size: 12px;"><b>' + c + "<\/b><\/div> <div><\/div>"), k = t(f[0]).find(".frpt-frf-form-dataPara"), i = y ? '<p style="text-align:left"><p>' : '<p style="text-align:' + (d == "ar_IQ" ? "right" : "left") + '"><p>', d == "ar_IQ") for (n = k.length; n >= 0; n--)t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label").length > 0 && (t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("option:selected").text() != "" && t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("select")[0].id.slice(0, 23) != "FRPT_ParacmbDownloadPdf" ? (i += " " + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("option:selected").text() + "", i += n == 0 ? "<b> :" + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText + "<\/b>" : "<b> :" + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText + "<\/b>,") : t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val() != "" && t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val() != undefined && (t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).attr("type") == "checkbox" ? i += t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).is(":checked") : t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).attr("type") == "date" ? (i += ": " + new Date(t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val()).toLocaleDateString(), t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[1]).val() != undefined && t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[1]).val() != "" && (i += " -- " + t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[1]).val())) : i += a == "OW" && s != null && t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText == "Organization" ? " " + s.OrgName : a == "OW" && s != null && t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText == "Organization Unit" ? " " + s.OrgUnitName : " " + t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val(), i += "<b> :" + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText + "<\/b>, ")); else for (n = 0; n < k.length; n++)t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label").length > 0 && (t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("option:selected").text() != "" && t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("select")[0].id.slice(0, 23) != "FRPT_ParacmbDownloadPdf" ? (i += "<b>" + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText + "<\/b>", i += ": " + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("option:selected").text() + "", i += n != k.length - 1 ? ", " : ".") : t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val() != "" && t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val() != undefined && (i += "<b>" + t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText + "<\/b>", t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).attr("type") == "checkbox" ? i += ": " + t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).is(":checked") + ", " : t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).attr("type") == "date" ? (i += ": " + new Date(t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val()).toLocaleDateString(), t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[1]).val() != undefined && t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[1]).val() != "" && (i += " -- " + t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[1]).val()), i += ", ") : i += a == "OW" && s != null && t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText == "Organization" ? ": " + s.OrgName + ", " : a == "OW" && s != null && t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("label")[0].innerText == "Organization Unit" ? ": " + s.OrgUnitName + ", " : ": " + t(t(t(f[0]).find(".frpt-frf-form-dataPara")[n]).find("input")[0]).val() + ", ")); i != "" && (i = '<div style="font-size: 10px;">' + i.replace(/,\s*$/, "") + "<\/p><\/div>", y ? i = i.substring(0, i.length - 2) : v += i.substring(0, i.length - 2)); var tt = "", it = "", w = e.find(".k-grid-header").clone(); if (t.each(t(w).find("th"), function () { t(this).css("display") == "none" && t(this).remove() }), tt = w, w = e.find(".k-grid-content").clone(), t(this).find(".k-grid-content").css("padding-right", "6px"), t.each(t(w).find("tr"), function () { t.each(t(this).find("td"), function () { t(this).css("display") == "none" && t(this).remove() }) }), it = w, u = "<head><meta charset='UTF-8'><\/head><table><thead>", h = tt.find(".k-grid-header-wrap"), h = h.find("table thead tr th"), y && (u += "<tr><td colspan=" + h.length + ">" + b + "<\/td><\/tr>", u += "<tr><td colspan=" + h.length + ">" + i + "<\/td><\/tr>"), u += "<tr>", d == "ar_IQ") for (r = h.length - 1; r >= 0; r--)u += r > 1 ? "<td style='text-align:right;font-size: 10.5px;'><b>" + VIS.Utility.encodeText(h[r].innerText) + "<\/b><\/td>" : "<td style='text-align:left;font-size: 10.5px;'><b>" + VIS.Utility.encodeText(h[r].innerText) + "<\/b><\/td>"; else for (r = 0; r < h.length; r++)h[r].innerHTML == "Name" || h[r].innerHTML == "Description" ? (g = at > 0 ? "20px" : "0px", u += "<td style='text-align:left;font-size: 10.5px;padding-left: " + g + "'><b>" + h[r].innerText + "<\/b><\/td>") : u += "<td style='text-align:right;font-size: 10.5px;'><b>" + VIS.Utility.encodeText(h[r].innerText) + "<\/b><\/td>"; for (u += "<\/tr><\/thead><tbody>", l = " border = 0 ", p = it.find("table tbody tr"), r = 0; r < p.length; r++) { if (u += "<tr style='" + t(p[r])[0].style.cssText + "'>", o = t(p[r]).find("td"), d == "ar_IQ") for (n = o.length - 1; n >= 0; n--)u += t(o[n]).attr("class").contains("frpt-grid-amt-col") ? "<td " + l + " style='text-align:right'>" + VIS.Utility.encodeText(o[n].innerText) + "<\/td>" : "<td " + l + " style = '" + (o[n].style.cssText != "" ? "padding-left: 10px;" : t(p[r])[0].style.cssText) + "'>" + VIS.Utility.encodeText(o[n].innerText) + "<\/td>"; else for (n = 0; n < o.length; n++)l = " border = 0 ", o[n].className.contains("frpt-border-top") ? l = " border = 1 " : o[n].className.contains("frpt-border-bottom") ? l = " border = 2 " : o[n].className.contains("frpt-border-both") ? l = " border = 3 " : o[n].className.contains("frpt-border-double") ? l = " border = 4 " : o[n].className.contains("frpt-border-single") && (l = " border = 5 "), t(o[n]).attr("class").contains("frpt-grid-amt-col") ? u += "<td " + l + " style='text-align:right'>" + VIS.Utility.encodeText(o[n].innerText) + "<\/td>" : (g = at > 0 ? "20px" : "0px", u += "<td " + l + " style = '" + t(p[r])[0].style.cssText + ";padding-left: " + g + "'>" + VIS.Utility.encodeText(o[n].innerText) + "<\/td>"); u += "<\/tr>" } u += "<\/tbody><\/table>"; v += u; nt = null; a == "OW" && s != null ? nt = s.OrgName : VIS.Env.getCtx().getContext("#AD_Org_Name") != "*" && (nt = VIS.Env.getCtx().getContext("#AD_Org_Name")); t.ajax({ url: VIS.Application.contextUrl + "AccountingGroup/HTMLtoPDF", datatype: "json", type: "post", cache: !1, data: { html: VIS.Utility.encodeText(v), pageSize: rt, isRepeatHeader: y, orgName: nt }, success: function (n) { var t = JSON.parse(n); a == "OW" || a == "CO" ? pi(t) : window.open(VIS.Application.contextUrl + t); return } }) }); var n = { "#A1550": function () { return !0 } }; ft.on("click", function () { var c = "", l = "", f = e.find(".k-grid-header").clone(), s, h, n, u, i, a; t.each(t(f).find("th"), function () { t(this).css("display") == "none" && t(this).remove() }); c = f; f = e.find(".k-grid-content").clone(); t.each(t(f).find("tr"), function () { t.each(t(this).find("td"), function () { t(this).css("display") == "none" && t(this).remove() }) }); l = f; var v = (new Date).toISOString().slice(0, 19).replace(/-/g, ""), r = "<head><meta charset='UTF-8'><\/head><table><thead><tr><td>", o = c.find(".k-grid-header-wrap"); for (o = o.find("table thead tr th"), n = 0; n < o.length; n++)r += o[n].innerText + "<\/td><td>"; for (r += "<\/td><\/tr><\/thead><tbody>", s = l.find("table tbody tr"), h = "", n = 0; n < s.length; n++) { for (h = t(s[n])[0].style.cssText, r += "<tr style='" + h + "'>", u = t(s[n]).find("td"), i = 0; i < u.length; i++)r += t(u[i]).find(".frpt-grid-amt-col").length > 0 ? "<td style='text-align:right'>" + VIS.Utility.encodeText(u[i].innerText) + "<\/td>" : "<td style = '" + (u[i].style.cssText != "" ? u[i].style.cssText : h) + "'>" + VIS.Utility.encodeText(u[i].innerText) + "<\/td>"; r += "<\/tr>" } r += "<\/tbody><\/table>"; a = "data:application/vnd.ms-excel;charset=UTF-8," + encodeURIComponent(r); t(this).attr("href", a).attr("download", "file-" + v + ".xls") }); it.on("click", function () { var f = it.is(":checked"), t = e.data("kendoGrid")._data, n, r, u, i; if (t && t.length > 0) if (f == !0) for (n = 0; n < t.length; n++)r = e.find("[data-uid='" + t[n].uid + "']"), t[n].FRPT_RECORDTYPE == "L" ? (u = r.find("td:first"), i = u.find("span:first"), i.data("isexpanded", "Y"), i.removeClass("frpt-right-arrow"), lt && i.addClass("frpt-down-arrow")) : r.css("display", ""); else for (n = 0; n < t.length; n++)r = e.find("[data-uid='" + t[n].uid + "']"), t[n].FRPT_RECORDTYPE == "L" ? (u = r.find("td:first"), i = u.find("span:first"), i.data("isexpanded", "N"), i.removeClass("frpt-down-arrow"), lt && i.addClass("frpt-right-arrow")) : r.css("display", "none") }) }; dt = function () { g = ut = nt = w = ri = ui = fi = ei = oi = tt = ft = null; e != null && (e.data("kendoGrid") && e.data("kendoGrid").destroy(), e.empty(), e.remove()); e = null; c.empty(); c.remove(); c = null; v != null && (v.dispose(), v = null) }; ti = function () { var ht = o.reportWindowNO, c = this._data, ut = it.is(":checked"), b, y, k, g, nt, w, rt, v, n, l, a, f, tt; if (c && c.length != 0) { for (b = !1, n = 0; n < i.length; n++)if (i[n].ColumnType != "C" && i[n].ColumnName != "Name" && i[n].ColumnName != "Description") for (l = 0; l < c.length; l++)if (f = e.find("[data-uid='" + c[l].uid + "']"), b = !1, c[l].FRPT_RECORDTYPE == "L") { for (y = 0; y < r.length; y++)if (c[l].PA_REPORTLINE_ID == r[y].LineID && r[y].LineType == "C") { b = !0; break } b == !1 && (i[n].ColumnName.toUpperCase().contains("COL_") ? (appliedAmt = VIS.Utility.Util.getValueOfDecimal(bi(c[l][i[n].ColumnName.toUpperCase()], li)), appliedAmt && t(f.find(".frpt-" + n)).append("<span id = FRPT_Info" + o.reportWindowNO + ' data-reportid="' + o.ReportID + '" data-columnid="' + i[n].ColumnID + '" data-lineid="' + c[l].PA_REPORTLINE_ID + '" style="float: right;font-size: 15px;margin-top: 3px;" class=" frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions glyphicon glyphicon-info-sign frpt-glyphicon-info"><\/span>')) : c[l][i[n].ColumnName.toUpperCase()]) } for (l = 0; l < c.length; l++) { if (f = e.find("[data-uid='" + c[l].uid + "']"), l + 1 < c.length && c[l + 1].PA_REPORTLINE_ID != c[l].PA_REPORTLINE_ID) { c[l].FRPT_RECORDTYPE == "L" ? t(f.find(".frpt-0")).css("padding-left", "24px") : t(f.find(".frpt-0")).css("padding-left", "35px"); continue } if (l + 1 == c.length) { c[l].FRPT_RECORDTYPE == "L" ? t(f.find(".frpt-0")).css("padding-left", "24px") : t(f.find(".frpt-0")).css("padding-left", "35px"); continue } if (c[l].FRPT_RECORDTYPE == "L") { for (k = "frpt-down-arrow frpt-english-style", g = "frpt-right-arrow frpt-english-style", d == "ar_IQ" && (k = "frpt-down-arrow frpt-arbic-style", g = "frpt-left-arrow frpt-arabic-style"), n = 0; n < r.length; n++)if (c[l].PA_REPORTLINE_ID == r[n].LineID && r[n].LineType != "C") { if (ut == !0) t(f.find(".frpt-0")).prepend("<span id=FRPT_RExp" + o.reportWindowNO + ' data-columnid="xx" data-isexpanded="Y" data-lineid="' + c[l].PA_REPORTLINE_ID + '" class="fa ' + k + '"><\/span>'); else for (t(f.find(".frpt-0")).prepend("<span id=FRPT_RExp" + o.reportWindowNO + ' data-columnid="xx" data-isexpanded="N" data-lineid="' + c[l].PA_REPORTLINE_ID + '" class="fa ' + g + '"><\/span>'), nt = 0, w = 0; w < c.length; w++)if (c[w].PA_REPORTLINE_ID == r[n].LineID) if (nt == 0) { nt++; continue } else rt = e.find("[data-uid='" + c[w].uid + "']"), rt.css("display", "none"); break } } else t(f.find(".frpt-0")).css("padding-left", "35px") } e.on("click", "SPAN", function (n) { var r = t(n.target).data("lineid"), f = t(n.target).data("columnid"), l, i, u, a; if (f == "xx") { if (l = t(n.target).data("isexpanded"), l == "Y") for (t(n.target).data("isexpanded", "N"), t(n.target).removeClass("frpt-down-arrow"), t(n.target).addClass("frpt-right-arrow"), i = 0; i < c.length; i++)c[i].PA_REPORTLINE_ID == r && c[i].FRPT_RECORDTYPE != "L" && (u = e.find("[data-uid='" + c[i].uid + "']"), u.css("display", "none")); else for (t(n.target).data("isexpanded", "Y"), t(n.target).removeClass("frpt-right-arrow"), t(n.target).addClass("frpt-down-arrow"), i = 0; i < c.length; i++)c[i].PA_REPORTLINE_ID == r && c[i].FRPT_RECORDTYPE != "L" && (u = e.find("[data-uid='" + c[i].uid + "']"), u.css("display", "")); return } (r || f) && p != null && (h.css("display", "block"), a = s != null ? s.OrgID : "", p.getRowDetail(ii, r, f, o.ReportID, o.reportWindowNO, a)) }); if (u) for (c = this._data, l = 0; l < c.length; l++)f = e.find("[data-uid='" + c[l].uid + "']"), c[l].FRPT_RECORDTYPE == "L" && (u.BgColor && t(f[0]).css("background", u.BgColor), u.FontColor && t(f[0]).css("color", u.FontColor), u.FontWeight && (u.FontWeight == "B" ? t(f[0]).css("font-weight", "bold") : u.FontWeight == "N" ? t(f[0]).css("font-weight", "normal") : u.FontWeight == "I" ? t(f[0]).css("font-style", "italic") : u.FontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : u.FontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : u.FontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : u.FontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : u.FontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : u.FontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), u.TextAlign && (u.TextAlign == "C" ? t(f[0]).css("text-align", "center") : u.TextAlign == "R" ? t(f[0]).css("text-align", "right") : u.TextAlign == "L" && t(f[0]).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "U" && u.FormatSubGroupLines == !0 && (u.UBGColor && t(f[0]).css("background", u.UBGColor), u.UFontColor && t(f[0]).css("color", u.UFontColor), u.UFontWeight && (u.UFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : u.UFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : u.UFontWeight == "I" ? t(f[0]).css("font-style", "italic") : u.UFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : u.UFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : u.UFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : u.UFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : u.UFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : u.UFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), u.UTextAlign && (u.UTextAlign == "C" ? t(f[0]).css("text-align", "center") : u.UTextAlign == "R" ? t(f[0]).css("text-align", "right") : u.UTextAlign == "L" && t(f[0]).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "T" && u.FormatTrxLines == !0 && (u.TBgColor && t(f[0]).css("background", u.TBgColor), u.TFontColor && t(f[0]).css("color", u.TFontColor), u.TFontWeight && (u.TFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : u.TFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : u.TFontWeight == "I" ? t(f[0]).css("font-style", "italic") : u.TFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : u.TFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : u.TFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : u.TFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : u.TFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : u.TFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), u.TTextAlign && (u.TTextAlign == "C" ? t(f[0]).css("text-align", "center") : u.TTextAlign == "R" ? t(f[0]).css("text-align", "right") : u.TTextAlign == "L" && t(f[0]).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "S" && u.FormatSourceLines == !0 && (u.SBgColor && t(f[0]).css("background", u.SBgColor), u.SFontColor && t(f[0]).css("color", u.SFontColor), u.SFontWeight && (u.SFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : u.SFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : u.SFontWeight == "I" ? t(f[0]).css("font-style", "italic") : u.SFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : u.SFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : u.SFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : u.SFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : u.SFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : u.SFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), u.STextAlign && (u.STextAlign == "C" ? t(f[0]).css("text-align", "center") : u.STextAlign == "R" ? t(f[0]).css("text-align", "right") : u.STextAlign == "L" && t(f[0]).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "D" && u.FormatDGLines == !0 && (u.DGBgColor && t(f[0]).css("background", u.DGBgColor), u.DGFontColor && t(f[0]).css("color", u.DGFontColor), u.DGFontWeight && (u.DGFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : u.DGFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : u.DGFontWeight == "I" ? t(f[0]).css("font-style", "italic") : u.DGFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : u.DGFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : u.DGFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : u.DGFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : u.DGFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : u.DGFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), u.DGTextAlign && (u.DGTextAlign == "C" ? t(f[0]).css("text-align", "center") : u.DGTextAlign == "R" ? t(f[0]).css("text-align", "right") : u.DGTextAlign == "L" && t(f[0]).css("text-align", "left"))); if (r) for (c = this._data, v = null, n = 0; n < r.length; n++)for (v = r[n].HorizontalLine == "AF" ? "frpt-border-bottom" : r[n].HorizontalLine == "BE" ? "frpt-border-top" : r[n].HorizontalLine == "BO" ? "frpt-border-both" : r[n].HorizontalLine == "DU" ? "frpt-border-double" : r[n].HorizontalLine == "SL" ? "frpt-border-single" : "", l = 0; l < c.length; l++)c[l].PA_REPORTLINE_ID == r[n].LineID && (f = e.find("[data-uid='" + c[l].uid + "']"), t(f[0]).addClass(v), t(f[0]).attr("isignoreline", r[n].IsIgnoreHorLine), c[l].FRPT_RECORDTYPE == "L" && (r[n].BgColor && t(f[0]).css("background", r[n].BgColor), r[n].FontColor && t(f[0]).css("color", r[n].FontColor), r[n].FontWeight && (r[n].FontWeight == "B" ? t(f[0]).css("font-weight", "bold") : r[n].FontWeight == "N" ? t(f[0]).css("font-weight", "normal") : r[n].FontWeight == "I" ? t(f[0]).css("font-style", "italic") : r[n].FontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : r[n].FontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : r[n].FontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : r[n].FontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : r[n].FontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : r[n].FontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), r[n].TextAlign && (r[n].TextAlign == "C" ? t(f[0]).css("text-align", "center") : r[n].TextAlign == "R" ? t(f[0]).css("text-align", "right") : r[n].TextAlign == "L" && t(f[0]).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "U" && r[n].FormatSubGroupLines == !0 ? (r[n].UBGColor && t(f[0]).css("background", r[n].UBGColor), r[n].UFontColor && t(f[0]).css("color", r[n].UFontColor), r[n].UFontWeight && (r[n].UFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : r[n].UFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : r[n].UFontWeight == "I" ? t(f[0]).css("font-style", "italic") : r[n].UFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : r[n].UFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : r[n].UFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : r[n].UFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : r[n].UFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : r[n].UFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), r[n].UTextAlign && (r[n].UTextAlign == "C" ? t(f[0]).css("text-align", "center") : r[n].UTextAlign == "R" ? t(f[0]).css("text-align", "right") : r[n].UTextAlign == "L" && t(f[0]).css("text-align", "left"))) : c[l].FRPT_RECORDTYPE == "T" ? r[n].FormatTrxLines == !0 && (r[n].TBGColor && t(f[0]).css("background", r[n].TBGColor), r[n].TFontColor && t(f[0]).css("color", r[n].TFontColor), r[n].TFontWeight && (r[n].TFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : r[n].TFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : r[n].TFontWeight == "I" ? t(f[0]).css("font-style", "italic") : r[n].TFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : r[n].TFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : r[n].TFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : r[n].TFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : r[n].TFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : r[n].TFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), r[n].TTextAlign && (r[n].TTextAlign == "C" ? t(f[0]).css("text-align", "center") : r[n].TTextAlign == "R" ? t(f[0]).css("text-align", "right") : r[n].TTextAlign == "L" && t(f[0]).css("text-align", "left"))) : c[l].FRPT_RECORDTYPE == "S" ? r[n].FormatSourceLines == !0 && (r[n].SBGColor && t(f[0]).css("background", r[n].SBGColor), r[n].SFontColor && t(f[0]).css("color", r[n].SFontColor), r[n].SFontWeight && (r[n].SFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : r[n].SFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : r[n].SFontWeight == "I" ? t(f[0]).css("font-style", "italic") : r[n].SFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : r[n].SFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : r[n].SFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : r[n].SFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : r[n].SFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : r[n].SFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), r[n].STextAlign && (r[n].STextAlign == "C" ? t(f[0]).css("text-align", "center") : r[n].STextAlign == "R" ? t(f[0]).css("text-align", "right") : r[n].STextAlign == "L" && t(f[0]).css("text-align", "left"))) : c[l].FRPT_RECORDTYPE == "D" && r[n].FormatDGLines == !0 && (r[n].DGBGColor && t(f[0]).css("background", r[n].DGBGColor), r[n].DGFontColor && t(f[0]).css("color", r[n].DGFontColor), r[n].DGFontWeight && (r[n].DGFontWeight == "B" ? t(f[0]).css("font-weight", "bold") : r[n].DGFontWeight == "N" ? t(f[0]).css("font-weight", "normal") : r[n].DGFontWeight == "I" ? t(f[0]).css("font-style", "italic") : r[n].DGFontWeight == "U" ? t(f[0]).css("text-decoration", "underline") : r[n].DGFontWeight == "E" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic")) : r[n].DGFontWeight == "F" ? (t(f[0]).css("font-weight", "bold"), t(f[0]).css("text-decoration", "underline")) : r[n].DGFontWeight == "G" ? (t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline")) : r[n].DGFontWeight == "H" ? (t(f[0]).css("font-weight", "normal"), t(f[0]).css("text-decoration", "underline")) : r[n].DGFontWeight == "J" && (t(f[0]).css("font-weight", "bold"), t(f[0]).css("font-style", "italic"), t(f[0]).css("text-decoration", "underline"))), r[n].DGTextAlign && (r[n].DGTextAlign == "C" ? t(f[0]).css("text-align", "center") : r[n].DGTextAlign == "R" ? t(f[0]).css("text-align", "right") : r[n].DGTextAlign == "L" && t(f[0]).css("text-align", "left")))); for (n = 0; n < i.length; n++) { var ft = i[n].FormatSubGroupLines, et = i[n].FormatTrxLines, ot = i[n].FormatSourceLines, st = i[n].FormatDGLines; for (l = 0; l < c.length; l++)if (c[l].FRPT_RECORDTYPE == "L" && (f = e.find("[data-uid='" + c[l].uid + "']"), (f.hasClass("frpt-border-top") || f.hasClass("frpt-border-bottom") || f.hasClass("frpt-border-both") || f.hasClass("frpt-border-double") || f.hasClass("frpt-border-single")) && (f.attr("isignoreline") == "Y" && (i[n].ColumnName == "Name" || i[n].ColumnName == "Description") ? v = "" : (v = wi(f), (v != null || v != "") && t(f.find(".frpt-" + n)).addClass(v))), i[n].BGColor != null && t(f.find(".frpt-" + n)).css("background", i[n].BGColor), i[n].FontColor != null && t(f.find(".frpt-" + n)).css("color", i[n].FontColor), i[n].FontWeight != null && (i[n].FontWeight == "B" ? t(f.find(".frpt-" + n)).css("font-weight", "bold") : i[n].FontWeight == "N" ? t(f.find(".frpt-" + n)).css("font-weight", "normal") : i[n].FontWeight == "I" ? t(f.find(".frpt-" + n)).css("font-style", "italic") : i[n].FontWeight == "U" ? t(f.find(".frpt-" + n)).css("text-decoration", "underline") : i[n].FontWeight == "E" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic")) : i[n].FontWeight == "F" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].FontWeight == "G" ? (t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].FontWeight == "H" ? (t(f.find(".frpt-" + n)).css("font-weight", "normal"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].FontWeight == "J" && (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline"))), i[n].TextAlign && (i[n].TextAlign == "C" ? t(f.find(".frpt-" + n)).css("text-align", "center") : i[n].TextAlign == "R" ? t(f.find(".frpt-" + n)).css("text-align", "right") : i[n].TextAlign == "L" && t(f.find(".frpt-" + n)).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "U" && ft == !0 && (f = e.find("[data-uid='" + c[l].uid + "']"), i[n].UBGColor != null && t(f.find(".frpt-" + n)).css("background", i[n].UBGColor), i[n].UFontColor != null && t(f.find(".frpt-" + n)).css("color", i[n].UFontColor), i[n].UFontWeight != null && (i[n].UFontWeight == "B" ? t(f.find(".frpt-" + n)).css("font-weight", "bold") : i[n].UFontWeight == "N" ? t(f.find(".frpt-" + n)).css("font-weight", "normal") : i[n].UFontWeight == "I" ? t(f.find(".frpt-" + n)).css("font-style", "italic") : i[n].UFontWeight == "U" ? t(f.find(".frpt-" + n)).css("text-decoration", "underline") : i[n].UFontWeight == "E" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic")) : i[n].UFontWeight == "F" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].UFontWeight == "G" ? (t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].UFontWeight == "H" ? (t(f.find(".frpt-" + n)).css("font-weight", "normal"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].UFontWeight == "J" && (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline"))), i[n].UTextAlign && (i[n].UTextAlign == "C" ? t(f.find(".frpt-" + n)).css("text-align", "center") : i[n].UTextAlign == "R" ? t(f.find(".frpt-" + n)).css("text-align", "right") : i[n].UTextAlign == "L" && t(f.find(".frpt-" + n)).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "S" && ot == !0 && (f = e.find("[data-uid='" + c[l].uid + "']"), i[n].SBGColor != null && t(f.find(".frpt-" + n)).css("background", i[n].SBGColor), i[n].SFontColor != null && t(f.find(".frpt-" + n)).css("color", i[n].SFontColor), i[n].SFontWeight != null && (i[n].SFontWeight == "B" ? t(f.find(".frpt-" + n)).css("font-weight", "bold") : i[n].SFontWeight == "N" ? t(f.find(".frpt-" + n)).css("font-weight", "normal") : i[n].SFontWeight == "I" ? t(f.find(".frpt-" + n)).css("font-style", "italic") : i[n].SFontWeight == "U" ? t(f.find(".frpt-" + n)).css("text-decoration", "underline") : i[n].SFontWeight == "E" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic")) : i[n].SFontWeight == "F" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].SFontWeight == "G" ? (t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].SFontWeight == "H" ? (t(f.find(".frpt-" + n)).css("font-weight", "normal"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].SFontWeight == "J" && (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline"))), i[n].STextAlign && (i[n].STextAlign == "C" ? t(f.find(".frpt-" + n)).css("text-align", "center") : i[n].STextAlign == "R" ? t(f.find(".frpt-" + n)).css("text-align", "right") : i[n].STextAlign == "L" && t(f.find(".frpt-" + n)).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "T" && et == !0 && (f = e.find("[data-uid='" + c[l].uid + "']"), i[n].TBGColor != null && t(f.find(".frpt-" + n)).css("background", i[n].TBGColor), i[n].TFontColor != null && t(f.find(".frpt-" + n)).css("color", i[n].TFontColor), i[n].TFontWeight != null && (i[n].TFontWeight == "B" ? t(f.find(".frpt-" + n)).css("font-weight", "bold") : i[n].TFontWeight == "N" ? t(f.find(".frpt-" + n)).css("font-weight", "normal") : i[n].TFontWeight == "I" ? t(f.find(".frpt-" + n)).css("font-style", "italic") : i[n].TFontWeight == "U" ? t(f.find(".frpt-" + n)).css("text-decoration", "underline") : i[n].TFontWeight == "E" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic")) : i[n].TFontWeight == "F" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].TFontWeight == "G" ? (t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].TFontWeight == "H" ? (t(f.find(".frpt-" + n)).css("font-weight", "normal"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].TFontWeight == "J" && (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline"))), i[n].TTextAlign && (i[n].TTextAlign == "C" ? t(f.find(".frpt-" + n)).css("text-align", "center") : i[n].TTextAlign == "R" ? t(f.find(".frpt-" + n)).css("text-align", "right") : i[n].TTextAlign == "L" && t(f.find(".frpt-" + n)).css("text-align", "left"))), c[l].FRPT_RECORDTYPE == "D" && st == !0 && (f = e.find("[data-uid='" + c[l].uid + "']"), i[n].DGBGColor != null && t(f.find(".frpt-" + n)).css("background", i[n].DGBGColor), i[n].DGFontColor != null && t(f.find(".frpt-" + n)).css("color", i[n].DGFontColor), i[n].DGFontWeight != null && (i[n].DGFontWeight == "B" ? t(f.find(".frpt-" + n)).css("font-weight", "bold") : i[n].DGFontWeight == "N" ? t(f.find(".frpt-" + n)).css("font-weight", "normal") : i[n].DGFontWeight == "I" ? t(f.find(".frpt-" + n)).css("font-style", "italic") : i[n].DGFontWeight == "U" ? t(f.find(".frpt-" + n)).css("text-decoration", "underline") : i[n].DGFontWeight == "E" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic")) : i[n].DGFontWeight == "F" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].DGFontWeight == "G" ? (t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].DGFontWeight == "H" ? (t(f.find(".frpt-" + n)).css("font-weight", "normal"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].DGFontWeight == "J" && (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline"))), i[n].DGTextAlign && (i[n].DGTextAlign == "C" ? t(f.find(".frpt-" + n)).css("text-align", "center") : i[n].DGTextAlign == "R" ? t(f.find(".frpt-" + n)).css("text-align", "right") : i[n].DGTextAlign == "L" && t(f.find(".frpt-" + n)).css("text-align", "left"))), i[n].IsConditionalFromatting == !0) for (a = 0; a < i[n].ConditionalFormatting.length; a++)f = e.find("[data-uid='" + c[l].uid + "']"), tt = !1, c[l][i[n].FRPT_CF_Column] == i[n].ConditionalFormatting[a].FRPT_CF_ID && (tt = !0), tt && (i[n].ConditionalFormatting[a].BGColor != null && t(f.find(".frpt-" + n)).css("background", i[n].ConditionalFormatting[a].BGColor), i[n].ConditionalFormatting[a].FontColor != null && t(f.find(".frpt-" + n)).css("color", i[n].ConditionalFormatting[a].FontColor), i[n].ConditionalFormatting[a].FontWeight != null && (i[n].ConditionalFormatting[a].FontWeight == "B" ? t(f.find(".frpt-" + n)).css("font-weight", "bold") : i[n].ConditionalFormatting[a].FontWeight == "N" ? t(f.find(".frpt-" + n)).css("font-weight", "normal") : i[n].ConditionalFormatting[a].FontWeight == "I" ? t(f.find(".frpt-" + n)).css("font-style", "italic") : i[n].ConditionalFormatting[a].FontWeight == "U" ? t(f.find(".frpt-" + n)).css("text-decoration", "underline") : i[n].ConditionalFormatting[a].FontWeight == "E" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic")) : i[n].ConditionalFormatting[a].FontWeight == "F" ? (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].ConditionalFormatting[a].FontWeight == "G" ? (t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].ConditionalFormatting[a].FontWeight == "H" ? (t(f.find(".frpt-" + n)).css("font-weight", "normal"), t(f.find(".frpt-" + n)).css("text-decoration", "underline")) : i[n].ConditionalFormatting[a].FontWeight == "J" && (t(f.find(".frpt-" + n)).css("font-weight", "bold"), t(f.find(".frpt-" + n)).css("font-style", "italic"), t(f.find(".frpt-" + n)).css("text-decoration", "underline"))), i[n].ConditionalFormatting[a].TextAlign && (i[n].ConditionalFormatting[a].TextAlign == "C" ? t(f.find(".frpt-" + n)).css("text-align", "center") : i[n].ConditionalFormatting[a].TextAlign == "R" ? t(f.find(".frpt-" + n)).css("text-align", "right") : i[n].ConditionalFormatting[a].TextAlign == "L" && t(f.find(".frpt-" + n)).css("text-align", "left"))) } e.find("tr").removeClass("frpt-border-top").removeClass("frpt-border-bottom").removeClass("frpt-border-both").removeClass("frpt-border-double") } }; this.loadData = function (n) { if (n.ErrorMsg) { VIS.ADialog.info(n.ErrorMsg); h.css("display", "none"); return } if (e == null || e == undefined) { h.css("display", "none"); return } e.off("click"); r = n.LineFormat; u = n.HeaderSetting; i = n.ColumnDetail; s = n.OrganizationData; e.empty(); ni(n, e, !1); t(e.find(".k-grid-content")).css("height", $rightPart.height() - 32).css("padding-right", "6px"); h.css("display", "none"); toastr.success(VIS.Msg.getMsg("FRPT_ReportGenerated"), "", { timeOut: 3e3, positionClass: "toast-top-center", closeButton: !0 }); a = VIS.Utility.Util.getValueOfString(VIS.Env.getCtx().getContext(o.ReportID + "_" + o.reportWindowNO, "DownloadPdf")); (a == "OW" || a == "CO") && tt.trigger("click") }; ii = function (i, r) { var o; if (i.ErrorMsg) { VIS.ADialog.info(i.ErrorMsg); h.css("display", "none"); return } var u = e.data("kendoGrid"), f = u.dataItem(u.select()), s = f.NAME; u = null; f = null; o = new n.AForms.TrxDetailViewr(r); o.show(s, i, r); h.css("display", "none"); return } } function r(n) { var o = t("<div class='FRPT-rptOuterWrp' id=FRPT_TDDivDialog" + n + ">"), f = t("<div id=FRPT_TDDivDGrid" + n + ">"), r, u, i, s, h, l, a, c, e, v; self = this; this.getRoot = function () { return o }; v = function (n, i) { s = t("<div class='vis-report-header' id = FRPT_TDtoolbar" + i + ">").append(t('<h3 class="vis-report-tittle">').append(n)); h = t('<a href="javascript:void(0)" class="vis-icon-menuclose vis vis-cross" id = FRPT_TDclose' + i + ">"); l = t('<div class="vis-report-top-icons" id = FRPT_TDactioncontainer' + i + ">"); a = t("<ul>"); l.append(a); c = t("<a style='cursor:pointer;' class='vis vis-save-csv' id = FRPT_TDSaveCsv" + i + "><\/a>"); a.append(c); s.append(l); s.append(h); o.append(s) }; this.show = function (n, s, h) { r = s.LineFormat; u = s.HeaderSetting; i = VIS.Utility.encodeText(s.ColumnDetail); v(n, h); o.append(f); p(s); e = new VIS.CFrame; e.setName(VIS.Utility.encodeText(n)); e.setTitle(VIS.Utility.encodeText(n)); e.setContent(self); e.hideHeader(!0); e.show(); t(f.find(".k-grid-content")).css("height", o.height() - 77); y() }; this.dispose = function () { }; var y = function () { h.on("click", function () { b() }); c.on("click", function () { var c = "", l = "", e = f.find(".k-grid-header").clone(), s, h, n, u, i, a; t.each(t(e).find("th"), function () { t(this).css("display") == "none" && t(this).remove() }); c = e; e = f.find(".k-grid-content").clone(); t.each(t(e).find("tr"), function () { t.each(t(this).find("td"), function () { t(this).css("display") == "none" && t(this).remove() }) }); l = e; var v = (new Date).toISOString().slice(0, 19).replace(/-/g, ""), r = "<head><meta charset='UTF-8'><\/head><table><thead><tr><td>", o = c.find(".k-grid-header-wrap"); for (o = o.find("table thead tr th"), n = 0; n < o.length; n++)r += VIS.Utility.encodeText(o[n].innerText) + "<\/td><td>"; for (r += "<\/td><\/tr><\/thead><tbody>", s = l.find("table tbody tr"), h = "", n = 0; n < s.length; n++) { for (h = t(s[n])[0].style.cssText, r += "<tr style='" + h + "'>", u = t(s[n]).find("td"), i = 0; i < u.length; i++)r += t(u[i]).find(".frpt-grid-amt-col").length > 0 ? "<td style='text-align:right'>" + VIS.Utility.encodeText(u[i].innerText) + "<\/td>" : "<td style = '" + (u[i].style.cssText != "" ? u[i].style.cssText : h) + "'>" + u[i].innerText + "<\/td>"; r += "<\/tr>" } r += "<\/tbody><\/table>"; a = "data:application/vnd.ms-excel;charset=UTF-8," + encodeURIComponent(r); t(this).attr("href", a).attr("download", "file-" + v + ".xls") }) }, b = function () { f.off("click"); h.off("click"); c.off("click"); r = u = i = s = h = l = a = c = null; p = w = y = null; r = u = i = null; f.data("kendoGrid").destroy(); f = null; o.empty(); o.remove(); o = null; e != null && (e.dispose(), e = null) }, p = function (n) { var c = [], l = [], a = {}, i = n.data, u, v, r, e, t, o, s; for (t in n.ColumnDetail) u = { resizable: !0 }, colPrecision = n.ColumnDetail[t].ColumnPrecision >= 0 ? n.ColumnDetail[t].ColumnPrecision : n.AmountFormat, v = { editable: !1, nullable: !0 }, a[n.ColumnDetail[t].ColumnName.toUpperCase()] = v, u.title = n.ColumnDetail[t].Name, u.field = n.ColumnDetail[t].ColumnName.toUpperCase(), u.hidden = n.ColumnDetail[t].IsHidden, u.title == "Name" || u.title == "Description" ? (u.width = "250px", u.attributes = { "class": "frpt-" + t }) : u.title == "SeqNo" || (u.width = "100px", u.format = "{0:" + (colPrecision == null ? "n" : "n" + colPrecision) + "}", u.attributes = { "class": "frpt-" + t + " frpt-grid-amt-col" }), c.push(u); let h = -1; for (r = 0; r < i[0].RowCount; r++) { e = {}; for (t in i) h = i[t].ColumnPrecision != null && i[t].ColumnPrecision >= 0 ? i[t].ColumnPrecision : n != null && n.AmountFormat != null ? n.AmountFormat : 2, e[i[t].ColumnName.toUpperCase()] = (typeof i[t].Values[r] == "number" || i[t].Values[r] === null) && i[t].ColumnName.toUpperCase().contains("COL_") ? i[t].Values[r] == 0 && (i[t].PrintValues[r] == "BL" || i[t].PrintValues[r] == "AN") ? null : i[t].Values[r] == null && (i[t].PrintValues[r] == "ZE" || i[t].PrintValues[r] == "AZ") ? 0..toLocaleString(navigator.language, { maximumFractionDigits: h, minimumFractionDigits: h }) : i[t].Values[r] : i[t].Values[r]; e.recid = r + 1; l[r] = e } o = new kendo.data.DataSource({ batch: !0, schema: { model: { id: "TPK", fields: a } }, transport: { read: function (n) { n.success(l) }, update: function (n) { updateBatch(n.data.models) }, parameterMap: function (n, t) { if (t !== "read" && n.models) return { models: kendo.stringify(n.models) } } } }); n.ShowHierarchy == !0 && (n.HasSubGroup == !0 ? (s = [], s.push({ field: "HIERARCHY" }), s.push({ field: "SUBHIERARCHY" }), o.group(s)) : o.group({ field: "HIERARCHY" })); f.kendoGrid({ navigatable: !0, columns: c, dataSource: o, editable: !1, columnMenu: !1, sortable: !0, groupable: !1, allowCopy: !0, resizable: !0, navigatable: !0, dataBound: w, selectable: "single, row", scrollable: !0 }) }, w = function () { for (var e, n, s = this._data, o = 0; o < s.length; o++)s[o].FACT_ACCT_ID > 0 && s[o].FRPT_RECORDTYPE == "T" && (n = f.find("[data-uid='" + s[o].uid + "']"), t(n.find(".frpt-2")).append("<span id=FRPT_Zoom" + self.reportWindowNO + ' data-factacctid="' + s[o].FACT_ACCT_ID + '" style="float: right;font-size: 15px;"  class=" frpt-glyphicons-deminsions-div frpt-glyphicons-deminsions glyphicon glyphicon-zoom-in frpt-glyphicon-info"><\/span>')); f.on("click", "SPAN", function (n) { function c(n, i, r) { var u = null; return t.ajax({ url: h, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } var o = t(n.target).data("factacctid"), s, h, i, l, r; if (o) { s = VIS.Application.contextUrl; h = s + "JsonData/JDataSet"; var v = function (n, t, i) { var f = i ? !0 : !1, u = { sql: n, page: 1, pageSize: 0 }, r; return t && (u.param = t), r = null, c(u, f, function (n) { r = (new VIS.DB.DataSet).toJson(n); i && i(r) }), r }, y = function (n, t, i) { var u = i ? !0 : !1, f = { sql: n, page: 1, pageSize: 0 }, r = null; return c(f, u, function (n) { t = (new VIS.DB.DataSet).toJson(n); var t = (new VIS.DB.DataSet).toJson(n); r = t.getTable(0).getRows().length > 0 ? t.getTable(0).getRow(0).getCell(0) : null; t.dispose(); t = null; u && i(r) }), r }, i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportReader/loadFactAccountDetails", { FactAcctId: o }), a = VIS.Utility.Util.getValueOfInt(i.AD_Table_ID), u = VIS.Utility.Util.getValueOfInt(i.Record_ID), f = VIS.Utility.Util.getValueOfInt(i.AD_Window_ID), e = VIS.Utility.Util.getValueOfString(i.AD_TableName); f == 0 && e == "GL_Journal" ? (i = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ReportReader/loadWindowDetails", { TableName: e, RecordeId: u }), i.BatchID != 0 ? (r = new VIS.Query, r.addRestriction("GL_Journalbatch_ID", VIS.Query.prototype.EQUAL, i.BatchIDs), VIS.viewManager.startWindow(i.AD_Window_ID, r)) : (l = u, r = new VIS.Query, r.addRestriction("GL_Journal_ID", VIS.Query.prototype.EQUAL, l), VIS.viewManager.startWindow(i.GLWindow_ID, r))) : f == 0 ? VIS.AEnv.zoom(a, u) : VIS.viewManager.startWindow(f, VIS.Query.prototype.getEqualQuery(e + "_ID", u)) } }); if (u) for (s = this._data, o = 0; o < s.length; o++)n = f.find("[data-uid='" + s[o].uid + "']"), s[o].FRPT_RECORDTYPE == "L" && (u.BgColor && t(n[0]).css("background", u.BgColor), u.FontColor && t(n[0]).css("color", u.FontColor), u.FontWeight && (u.FontWeight == "B" ? t(n[0]).css("font-weight", "bold") : u.FontWeight == "N" ? t(n[0]).css("font-weight", "normal") : u.FontWeight == "I" ? t(n[0]).css("font-style", "italic") : u.FontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : u.FontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : u.FontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : u.FontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : u.FontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : u.FontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), u.TextAlign && (u.TextAlign == "C" ? t(n[0]).css("text-align", "center") : u.TextAlign == "R" ? t(n[0]).css("text-align", "right") : u.TextAlign == "L" && t(n[0]).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "U" && u.FormatSubGroupLines == !0 && (u.UBGColor && t(n[0]).css("background", u.UBGColor), u.UFontColor && t(n[0]).css("color", u.UFontColor), u.UFontWeight && (u.UFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : u.UFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : u.UFontWeight == "I" ? t(n[0]).css("font-style", "italic") : u.UFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : u.UFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : u.UFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : u.UFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : u.UFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : u.UFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), u.UTextAlign && (u.UTextAlign == "C" ? t(n[0]).css("text-align", "center") : u.UTextAlign == "R" ? t(n[0]).css("text-align", "right") : u.UTextAlign == "L" && t(n[0]).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "T" && u.FormatTrxLines == !0 && (u.TBgColor && t(n[0]).css("background", u.TBgColor), u.TFontColor && t(n[0]).css("color", u.TFontColor), u.TFontWeight && (u.TFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : u.TFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : u.TFontWeight == "I" ? t(n[0]).css("font-style", "italic") : u.TFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : u.TFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : u.TFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : u.TFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : u.TFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : u.TFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), u.TTextAlign && (u.TTextAlign == "C" ? t(n[0]).css("text-align", "center") : u.TTextAlign == "R" ? t(n[0]).css("text-align", "right") : u.TTextAlign == "L" && t(n[0]).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "S" && u.FormatSourceLines == !0 && (u.SBgColor && t(n[0]).css("background", u.SBgColor), u.SFontColor && t(n[0]).css("color", u.SFontColor), u.SFontWeight && (u.SFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : u.SFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : u.SFontWeight == "I" ? t(n[0]).css("font-style", "italic") : u.SFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : u.SFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : u.SFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : u.SFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : u.SFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : u.SFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), u.STextAlign && (u.STextAlign == "C" ? t(n[0]).css("text-align", "center") : u.STextAlign == "R" ? t(n[0]).css("text-align", "right") : u.STextAlign == "L" && t(n[0]).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "D" && u.FormatDGLines == !0 && (u.DGBgColor && t(n[0]).css("background", u.DGBgColor), u.SFontColor && t(n[0]).css("color", u.DGFontColor), u.DGFontWeight && (u.DGFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : u.DGFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : u.DGFontWeight == "I" ? t(n[0]).css("font-style", "italic") : u.DGFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : u.DGFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : u.DGFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : u.DGFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : u.DGFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : u.DGFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), u.DGTextAlign && (u.DGTextAlign == "C" ? t(n[0]).css("text-align", "center") : u.DGTextAlign == "R" ? t(n[0]).css("text-align", "right") : u.DGTextAlign == "L" && t(n[0]).css("text-align", "left"))); if (r) for (s = this._data, e = 0; e < r.length; e++)for (o = 0; o < s.length; o++)s[o].PA_REPORTLINE_ID == r[e].LineID && (n = f.find("[data-uid='" + s[o].uid + "']"), s[o].FRPT_RECORDTYPE == "L" && (r[e].BgColor && t(n[0]).css("background", r[e].BgColor), r[e].FontColor && t(n[0]).css("color", r[e].FontColor), r[e].FontWeight && (r[e].FontWeight == "B" ? t(n[0]).css("font-weight", "bold") : r[e].FontWeight == "N" ? t(n[0]).css("font-weight", "normal") : r[e].FontWeight == "I" ? t(n[0]).css("font-style", "italic") : r[e].FontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : r[e].FontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : r[e].FontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : r[e].FontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : r[e].FontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : r[e].FontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), r[e].TextAlign && (r[e].TextAlign == "C" ? t(n[0]).css("text-align", "center") : r[e].TextAlign == "R" ? t(n[0]).css("text-align", "right") : r[e].TextAlign == "L" && t(n[0]).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "U" && r[e].FormatSubGroupLines == !0 ? (r[e].UBGColor && t(n[0]).css("background", r[e].UBGColor), r[e].UFontColor && t(n[0]).css("color", r[e].UFontColor), r[e].UFontWeight && (r[e].UFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : r[e].UFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : r[e].UFontWeight == "I" ? t(n[0]).css("font-style", "italic") : r[e].UFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : r[e].UFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : r[e].UFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : r[e].UFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : r[e].UFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : r[e].UFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), r[e].UTextAlign && (r[e].UTextAlign == "C" ? t(n[0]).css("text-align", "center") : r[e].UTextAlign == "R" ? t(n[0]).css("text-align", "right") : r[e].UTextAlign == "L" && t(n[0]).css("text-align", "left"))) : s[o].FRPT_RECORDTYPE == "T" ? r[e].FormatTrxLines == !0 && (r[e].TBGColor && t(n[0]).css("background", r[e].TBGColor), r[e].TFontColor && t(n[0]).css("color", r[e].TFontColor), r[e].TFontWeight && (r[e].TFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : r[e].TFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : r[e].TFontWeight == "I" ? t(n[0]).css("font-style", "italic") : r[e].TFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : r[e].TFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : r[e].TFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : r[e].TFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : r[e].TFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : r[e].TFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), r[e].TTextAlign && (r[e].TTextAlign == "C" ? t(n[0]).css("text-align", "center") : r[e].TTextAlign == "R" ? t(n[0]).css("text-align", "right") : r[e].TTextAlign == "L" && t(n[0]).css("text-align", "left"))) : s[o].FRPT_RECORDTYPE == "S" ? r[e].FormatSourceLines == !0 && (r[e].SBGColor && t(n[0]).css("background", r[e].SBGColor), r[e].SFontColor && t(n[0]).css("color", r[e].SFontColor), r[e].SFontWeight && (r[e].SFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : r[e].SFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : r[e].SFontWeight == "I" ? t(n[0]).css("font-style", "italic") : r[e].SFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : r[e].SFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : r[e].SFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : r[e].SFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : r[e].SFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : r[e].SFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), r[e].STextAlign && (r[e].STextAlign == "C" ? t(n[0]).css("text-align", "center") : r[e].STextAlign == "R" ? t(n[0]).css("text-align", "right") : r[e].STextAlign == "L" && t(n[0]).css("text-align", "left"))) : s[o].FRPT_RECORDTYPE == "D" && r[e].FormatDGLines == !0 && (r[e].DGBGColor && t(n[0]).css("background", r[e].DGBGColor), r[e].DGFontColor && t(n[0]).css("color", r[e].DGFontColor), r[e].DGFontWeight && (r[e].DGFontWeight == "B" ? t(n[0]).css("font-weight", "bold") : r[e].DGFontWeight == "N" ? t(n[0]).css("font-weight", "normal") : r[e].DGFontWeight == "I" ? t(n[0]).css("font-style", "italic") : r[e].DGFontWeight == "U" ? t(n[0]).css("text-decoration", "underline") : r[e].DGFontWeight == "E" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic")) : r[e].DGFontWeight == "F" ? (t(n[0]).css("font-weight", "bold"), t(n[0]).css("text-decoration", "underline")) : r[e].DGFontWeight == "G" ? (t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline")) : r[e].DGFontWeight == "H" ? (t(n[0]).css("font-weight", "normal"), t(n[0]).css("text-decoration", "underline")) : r[e].DGFontWeight == "J" && (t(n[0]).css("font-weight", "bold"), t(n[0]).css("font-style", "italic"), t(n[0]).css("text-decoration", "underline"))), r[e].DGTextAlign && (r[e].DGTextAlign == "C" ? t(n[0]).css("text-align", "center") : r[e].DGTextAlign == "R" ? t(n[0]).css("text-align", "right") : r[e].DGTextAlign == "L" && t(n[0]).css("text-align", "left")))); for (e = 0; e < i.length; e++)if (i[e].BGColor != null || i[e].FontColor != null || i[e].FontWeight != null) { var h = i[e].FormatSubGroupLines, c = i[e].FormatTrxLines, l = i[e].FormatSourceLines, a = i[e].FormatDGLines; for (o = 0; o < s.length; o++)s[o].FRPT_RECORDTYPE == "L" && (n = f.find("[data-uid='" + s[o].uid + "']"), i[e].BGColor != null && t(n.find(".frpt-" + e)).css("background", i[e].BGColor), i[e].FontColor != null && t(n.find(".frpt-" + e)).css("color", i[e].FontColor), i[e].FontWeight != null && (i[e].FontWeight == "B" ? t(n.find(".frpt-" + e)).css("font-weight", "bold") : i[e].FontWeight == "N" ? t(n.find(".frpt-" + e)).css("font-weight", "normal") : i[e].FontWeight == "I" ? t(n.find(".frpt-" + e)).css("font-style", "italic") : i[e].FontWeight == "U" ? t(n.find(".frpt-" + e)).css("text-decoration", "underline") : i[e].FontWeight == "E" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic")) : i[e].FontWeight == "F" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].FontWeight == "G" ? (t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].FontWeight == "H" ? (t(n.find(".frpt-" + e)).css("font-weight", "normal"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].FontWeight == "J" && (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline"))), i[e].TextAlign && (i[e].TextAlign == "C" ? t(n.find(".frpt-" + e)).css("text-align", "center") : i[e].TextAlign == "R" ? t(n.find(".frpt-" + e)).css("text-align", "right") : i[e].TextAlign == "L" && t(n.find(".frpt-" + e)).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "U" && h == !0 && (n = f.find("[data-uid='" + s[o].uid + "']"), i[e].UBGColor != null && t(n.find(".frpt-" + e)).css("background", i[e].UBGColor), i[e].UFontColor != null && t(n.find(".frpt-" + e)).css("color", i[e].UFontColor), i[e].UFontWeight != null && (i[e].UFontWeight == "B" ? t(n.find(".frpt-" + e)).css("font-weight", "bold") : i[e].UFontWeight == "N" ? t(n.find(".frpt-" + e)).css("font-weight", "normal") : i[e].UFontWeight == "I" ? t(n.find(".frpt-" + e)).css("font-style", "italic") : i[e].UFontWeight == "U" ? t(n.find(".frpt-" + e)).css("text-decoration", "underline") : i[e].UFontWeight == "E" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic")) : i[e].UFontWeight == "F" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].UFontWeight == "G" ? (t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].UFontWeight == "H" ? (t(n.find(".frpt-" + e)).css("font-weight", "normal"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].UFontWeight == "J" && (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline"))), i[e].UTextAlign && (i[e].UTextAlign == "C" ? t(n.find(".frpt-" + e)).css("text-align", "center") : i[e].UTextAlign == "R" ? t(n.find(".frpt-" + e)).css("text-align", "right") : i[e].UTextAlign == "L" && t(n.find(".frpt-" + e)).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "S" && l == !0 && (n = f.find("[data-uid='" + s[o].uid + "']"), i[e].SBGColor != null && t(n.find(".frpt-" + e)).css("background", i[e].SBGColor), i[e].SFontColor != null && t(n.find(".frpt-" + e)).css("color", i[e].SFontColor), i[e].SFontWeight != null && (i[e].SFontWeight == "B" ? t(n.find(".frpt-" + e)).css("font-weight", "bold") : i[e].SFontWeight == "N" ? t(n.find(".frpt-" + e)).css("font-weight", "normal") : i[e].SFontWeight == "I" ? t(n.find(".frpt-" + e)).css("font-style", "italic") : i[e].SFontWeight == "U" ? t(n.find(".frpt-" + e)).css("text-decoration", "underline") : i[e].SFontWeight == "E" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic")) : i[e].SFontWeight == "F" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].SFontWeight == "G" ? (t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].SFontWeight == "H" ? (t(n.find(".frpt-" + e)).css("font-weight", "normal"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].SFontWeight == "J" && (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline"))), i[e].STextAlign && (i[e].STextAlign == "C" ? t(n.find(".frpt-" + e)).css("text-align", "center") : i[e].STextAlign == "R" ? t(n.find(".frpt-" + e)).css("text-align", "right") : i[e].STextAlign == "L" && t(n.find(".frpt-" + e)).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "T" && c == !0 && (n = f.find("[data-uid='" + s[o].uid + "']"), i[e].TBGColor != null && t(n.find(".frpt-" + e)).css("background", i[e].TBGColor), i[e].TFontColor != null && t(n.find(".frpt-" + e)).css("color", i[e].TFontColor), i[e].TFontWeight != null && (i[e].TFontWeight == "B" ? t(n.find(".frpt-" + e)).css("font-weight", "bold") : i[e].TFontWeight == "N" ? t(n.find(".frpt-" + e)).css("font-weight", "normal") : i[e].TFontWeight == "I" ? t(n.find(".frpt-" + e)).css("font-style", "italic") : i[e].TFontWeight == "U" ? t(n.find(".frpt-" + e)).css("text-decoration", "underline") : i[e].TFontWeight == "E" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic")) : i[e].TFontWeight == "F" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].TFontWeight == "G" ? (t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].TFontWeight == "H" ? (t(n.find(".frpt-" + e)).css("font-weight", "normal"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].TFontWeight == "J" && (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline"))), i[e].TTextAlign && (i[e].TTextAlign == "C" ? t(n.find(".frpt-" + e)).css("text-align", "center") : i[e].TTextAlign == "R" ? t(n.find(".frpt-" + e)).css("text-align", "right") : i[e].TTextAlign == "L" && t(n.find(".frpt-" + e)).css("text-align", "left"))), s[o].FRPT_RECORDTYPE == "D" && a == !0 && (n = f.find("[data-uid='" + s[o].uid + "']"), i[e].DGBGColor != null && t(n.find(".frpt-" + e)).css("background", i[e].DGBGColor), i[e].DgFontColor != null && t(n.find(".frpt-" + e)).css("color", i[e].DGFontColor), i[e].DGFontWeight != null && (i[e].DGFontWeight == "B" ? t(n.find(".frpt-" + e)).css("font-weight", "bold") : i[e].DGFontWeight == "N" ? t(n.find(".frpt-" + e)).css("font-weight", "normal") : i[e].DGFontWeight == "I" ? t(n.find(".frpt-" + e)).css("font-style", "italic") : i[e].DGFontWeight == "U" ? t(n.find(".frpt-" + e)).css("text-decoration", "underline") : i[e].DGFontWeight == "E" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic")) : i[e].DGFontWeight == "F" ? (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].DGFontWeight == "G" ? (t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].DGFontWeight == "H" ? (t(n.find(".frpt-" + e)).css("font-weight", "normal"), t(n.find(".frpt-" + e)).css("text-decoration", "underline")) : i[e].DGFontWeight == "J" && (t(n.find(".frpt-" + e)).css("font-weight", "bold"), t(n.find(".frpt-" + e)).css("font-style", "italic"), t(n.find(".frpt-" + e)).css("text-decoration", "underline"))), i[e].DGTextAlign && (i[e].DGTextAlign == "C" ? t(n.find(".frpt-" + e)).css("text-align", "center") : i[e].DGTextAlign == "R" ? t(n.find(".frpt-" + e)).css("text-align", "right") : i[e].DGTextAlign == "L" && t(n.find(".frpt-" + e)).css("text-align", "left"))) } } } n.AForms.ReportReader = i; n.AForms.TrxDetailViewr = r }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i(n, i, r, u, f, e, o, s) { function p(n, i, r, u, f, e) { t.ajax({ url: VIS.Application.contextUrl + "FRPT/PostingLogicFRPT/PostImediateFRPT", dataType: "json", async: !0, data: { AD_Client_ID: VIS.context.getAD_Client_ID(), AD_Table_ID: n, Record_ID: i, force: r, OrgID: u, AD_Window_ID: f, DocTypeID: e }, error: function () { VIS.ADialog.info("ERRORGettingPostingServer"); s() }, success: function (n) { n.result != "OK" && VIS.ADialog.info("", !0, n.result, null); s() } }) } var w = this; this.log = VIS.Logging.VLogger.getVLogger("PostingLogic"); var b = n, h = i, c = r, l = u, a = f, v = e, y = o; p(h, c, l, a, v, y) } i.prototype.dispose = function () { this.disposeComponent() }; n.PostingLogic = i }(FRPT, jQuery); FRPT = FRPT || {}, function (n, t) { function i(n, i, r) { function d() { i || l.text(VIS.Msg.getMsg("FRPT_SelectOrgUnitHierarchy")); var n = t('<div class="input-group vis-input-wrap frpt-search-wrap">'), r = t('<div class="vis-control-wrap">'); n.append(r); r.append(f).append(l); h = t('<div class="frpt-search-wrap"> <input value="" placeholder="' + VIS.Msg.getMsg("FRPT_Search") + '" type="text" id="searchText"> <a class="frpt-search-icon" id="searchBtn"><span class="vis vis-search"><\/span><\/a> <\/div>'); v.append(n).append(h); u = t('<div style="float:left;width:100%" id="0orgrighttree" class="frpt-orgtreecontent-wrap">'); e.append(w.append(v).append(u).append(g)); nt(); a = e.find("#searchBtn") } function y() { var i = t("#searchText").val(), n; i !== "" ? (t("#0orgrighttree .k-group .k-group .k-in").closest("li").hide(), t("#0orgrighttree .k-group").closest("li").hide(), t("#0orgrighttree .k-in").filter(function () { return t(this).text().toLowerCase().includes(i.toLowerCase()) }).each(function () { t(this).parents("ul, li").each(function () { var n = t("#0orgrighttree").data("kendoTreeView"); n.expand(t(this).parents("li")); t(this).show() }) }), t("#0orgrighttree .k-group .k-in:contains(" + i + ")").each(function () { t(this).parents("ul, li").each(function () { t(this).show() }) })) : (t("#0orgrighttree .k-group").find("li").show(), n = t("#0orgrighttree > .k-group > li"), t.each(n, function (i) { n[i].getAttribute("data-expanded") == null && t(n[i]).find("li").hide() })) } function g() { $bsyDiv = t('<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"><\/i><\/div><\/div>'); $bsyDiv[0].style.visibility = "hidden"; e.append($bsyDiv) } function nt() { var n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "OrgnizationTree/loadHirarchies", { IsOrg: i }), t, r; if (n != null && n.length > 0) for (t = 0; t < n.length; t++)r = "<option ", VIS.Utility.Util.getValueOfInt(n[t].TreeOrgId) > 0 && (r += " selected "), VIS.Utility.Util.getValueOfInt(n[t].TreeOrgId) > 0 ? (r += ' data-isDefault="Y"', s = n[t].Tree_ID) : r += ' data-isDefault="N" ', r += " value=" + n[t].Tree_ID + ">" + VIS.Utility.encodeText(n[t].Name) + "<\/option>", f.append(r); f.on("change", tt) } function tt() { $bsyDiv[0].style.visibility = "visible"; var n = f.val(); if (n < 0) { u.data("kendoTreeView") != undefined && (u.data("kendoTreeView").destroy(), u.empty()); return } t.ajax({ type: "POST", url: VIS.Application.contextUrl + "OrgStructure/FRPTCreateTree", data: { windowNo: 0, treeID: n, LegalEntityIds: r }, success: function (n) { treeData = JSON.parse(n); p(treeData); $bsyDiv[0].style.visibility = "hidden" }, error: function () { VIS.ADialog.error("VA003_ControllerNotFound"); $bsyDiv[0].style.visibility = "hidden" } }) } function it() { u.data("kendoTreeView") != undefined && (u.data("kendoTreeView").destroy(), u.empty()); var n = s > 0 ? s : VIS.Utility.Util.getValueOfInt(f.val()); n > 0 && ($bsyDiv[0].style.visibility = "visible", t.ajax({ type: "POST", url: VIS.Application.contextUrl + "OrgStructure/FRPTCreateTree", data: { windowNo: 0, treeID: n, LegalEntityIds: r }, success: function (n) { treeData = JSON.parse(n); p(treeData); $bsyDiv[0].style.visibility = "hidden" }, error: function () { VIS.ADialog.error("VA003_ControllerNotFound"); $bsyDiv[0].style.visibility = "hidden" } })) } function p(n) { u.data("kendoTreeView") != undefined && (u.data("kendoTreeView").destroy(), u.empty()); c = u.kendoTreeView({ dataSource: n, template: "<div style='float: left;border-radius: 4px; background: #= item.bColor #;'><img src='" + VIS.Application.contextUrl + "#= item.ImageSource #' style='vertical-align: text-top;float: left;margin: 4px 0px 0px 10px; '><i class='#= item.ImageSource #' style='float: left;'><\/i><p style='float: left;min-width:122px;border-radius:4px;margin:0px;padding: 7px 10px 7px 10px;  color: #= item.color #'>#= item.text #<\/p><input type='hidden' class='data-id' value='#= item.NodeID #' data-text='#= item.text #'  data-legal='#= item.IsLegal #'  data-summary='#= item.IsSummary #'  data-parentid='#= item.ParentID #'  data-Treeparentid='#= item.TreeParentID #'   data-treeid='" + b + "' /><\/div>" }) } var e = t("<div><\/div>"), u = null, c = null, w = t("<div><\/div>"), b = 0, o = [], k = n, s = 0, h = null, l = t("<label>" + VIS.Msg.getMsg("FRPT_SelectOrgHierarchy") + "<\/label>"), f = t("<select>"), a = null, v = t("<div>"); d(); a.on("click", function () { y() }); h.on("change", function () { y() }); this.show = function () { var n = new VIS.ChildDialog, u, r; n.setHeight(600); n.setWidth(600); n.setContent(e); n.setModal(!0); n.setTitle(VIS.Msg.getMsg("FRPT_OrgHierarchy")); i ? n.setTitle(VIS.Msg.getMsg("FRPT_OrgHierarchy")) : n.setTitle(VIS.Msg.getMsg("FRPT_OrgUnitHierarchy")); n.show(); it(); u = ""; r = ""; n.onOkClick = function () { var f = c.data("kendoTreeView").select(), n = f.find(".data-id"), i; if (n && n.length > 0) for (i = 0; i < n.length; i++)t(n[i]).data("summary") || (r.length > 0 && (r += " , ", u += " , "), r += t(n[i]).val(), u += t(n[i]).data("text")); o.push(r); o.push(u); k(o) }; n.onCancelClick = function () { }; n.onClose = function () { } } } n.AForms.OrgTree = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n) { function t() { VIS.CalloutEngine.call(this, "FRPT.QuantityEntityCallout") } VIS.Utility.inheritPrototype(t, VIS.CalloutEngine); t.prototype.entity = function (n, t, i, r, u) { if (this.isCalloutActive() || u == null || u.toString() == "") return ""; this.setCalloutActive(!0); var f = VIS.dataContext.getJSONRecord("FRPT/QuantityEntity/GetFRPT_TYPE", VIS.Utility.Util.getValueOfInt(u)); return f == "C" ? i.setValue("FRPT_CheckQTYEntity", !0) : i.setValue("FRPT_CheckQTYEntity", !1), this.setCalloutActive(!1), "" }; t.prototype.setTableColumnValue = function (n, t, i, r, u) { if (this.isCalloutActive() || u == null || u.toString() == "") return ""; this.setCalloutActive(!0); var f = i.setValue("FRPT_TrxDateTable", ""), e = i.setValue("FRPT_TrxDateColumn", ""); return this.setCalloutActive(!1), "" }; t.prototype.setCosolidatedBy = function (n, t, i, r, u) { if (this.isCalloutActive() || u == null || u.toString() == "") return ""; this.setCalloutActive(!0); try { if (r.getColumnName() == "FRPT_IsAmtDimensionApplicable") VIS.Utility.Util.getValueOfString(i.getValue("FRPT_IsAmtDimensionApplicable")) == "true" && i.setValue("FRPT_ConsolidatedBy", 35); else if (r.getColumnName() == "FRPT_Entity") { var o = VIS.Utility.Util.getValueOfInt(i.getValue("FRPT_Entity")), f = VIS.dataContext.getJSONRecord("QuantityEntity/GetEntityType", o); f == "C" || f == "L" || f == "P" || f == "I" ? (i.setValue("FRPT_IsAmtDimensionApplicable", !1), i.getField("FRPT_IsAmtDimensionApplicable").setReadOnly(!0), i.setValue("FRPT_AmtDimensionColumn", "")) : i.getField("FRPT_IsAmtDimensionApplicable").setReadOnly(!1) } } catch (e) { return this.setCalloutActive(!1), this.log.log(Level.SEVERE, sql, e), e } return this.setCalloutActive(!1), "" }; n.Model = n.Model || {}; n.Model.QuantityEntityCallout = t }(FRPT, jQuery), function (n) { var u = n(window), o = {}, f = [], e = [], h, s = null, c = "_open", v = "_close", i = [], l = null, a, y = /(iPad|iPhone|iPod)/g.test(navigator.userAgent), p = "a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]", t = { _init: function (i) { var r = n(i), u = r.data("popupoptions"); e[i.id] = !1; f[i.id] = 0; r.data("popup-initialized") || (r.attr("data-popup-initialized", "true"), t._initonce(i)); u.autoopen && setTimeout(function () { t.show(i, 0) }, 0) }, _initonce: function (i) { var u = n(i), v = n("body"), f, r = u.data("popupoptions"), o, p, w, a, e; if (s = parseInt(v.css("margin-right"), 10), l = document.body.style.webkitTransition !== undefined || document.body.style.MozTransition !== undefined || document.body.style.msTransition !== undefined || document.body.style.OTransition !== undefined || document.body.style.transition !== undefined, r.type == "tooltip" && (r.background = !1, r.scrolllock = !1), r.backgroundactive && (r.background = !1, r.blur = !1, r.scrolllock = !1), r.scrolllock && typeof h == "undefined" && (p = n('<div style="width:50px;height:50px;overflow:auto"><div/><\/div>').appendTo("body"), w = p.children(), h = w.innerWidth() - w.height(99).innerWidth(), p.remove()), u.attr("id") || u.attr("id", "j-popup-" + parseInt(Math.random() * 1e8, 10)), u.addClass("popup_content"), v.prepend(i), u.wrap('<div id="' + i.id + '_wrapper" class="popup_wrapper" />'), f = n("#" + i.id + "_wrapper"), f.css({ opacity: 0, visibility: "hidden", position: "absolute" }), y && f.css("cursor", "pointer"), r.type == "overlay" && f.css("overflow", "auto"), u.css({ opacity: 0, visibility: "hidden", display: "inline-block" }), r.setzindex && !r.autozindex && f.css("z-index", "100001"), r.outline || u.css("outline", "none"), r.transition && (u.css("transition", r.transition), f.css("transition", r.transition)), u.attr("aria-hidden", !0), r.background && !n("#" + i.id + "_background").length && (v.prepend('<div id="' + i.id + '_background" class="popup_background"><\/div>'), a = n("#" + i.id + "_background"), a.css({ opacity: 0, visibility: "hidden", backgroundColor: r.color, position: "fixed", top: 0, right: 0, bottom: 0, left: 0 }), r.setzindex && !r.autozindex && a.css("z-index", "100000"), r.transition && a.css("transition", r.transition)), r.type == "overlay" && (u.css({ textAlign: "left", position: "relative", verticalAlign: "middle" }), o = { position: "fixed", width: "100%", height: "100%", top: 0, left: 0, textAlign: "center" }, r.backgroundactive && (o.position = "relative", o.height = "0", o.overflow = "visible"), f.css(o), f.append('<div class="popup_align" />'), n(".popup_align").css({ display: "inline-block", verticalAlign: "middle", height: "100%" })), u.attr("role", "dialog"), e = r.openelement ? r.openelement : "." + i.id + c, n(e).each(function (t, i) { n(i).attr("data-popup-ordinal", t); i.id || n(i).attr("id", "open_" + parseInt(Math.random() * 1e8, 10)) }), u.attr("aria-labelledby") || u.attr("aria-label") || u.attr("aria-labelledby", n(e).attr("id")), r.action == "hover") { r.keepfocus = !1; n(e).on("mouseenter", function () { t.show(i, n(this).data("popup-ordinal")) }); n(e).on("mouseleave", function () { t.hide(i) }) } else n(document).on("click", e, function (r) { r.preventDefault(); var u = n(this).data("popup-ordinal"); setTimeout(function () { t.show(i, u) }, 0) }); r.closebutton && t.addclosebutton(i); r.detach ? u.hide().detach() : f.hide() }, show: function (o, c) { var p = n(o), k, b; if (!p.data("popup-visible")) { p.data("popup-initialized") || t._init(o); p.attr("data-popup-initialized", "true"); var d = n("body"), y = p.data("popupoptions"), w = n("#" + o.id + "_wrapper"), nt = n("#" + o.id + "_background"); if (r(o, c, y.beforeopen), e[o.id] = c, setTimeout(function () { i.push(o.id) }, 0), y.autozindex) { var tt = document.getElementsByTagName("*"), it = tt.length, g = 0; for (k = 0; k < it; k++)b = n(tt[k]).css("z-index"), b !== "auto" && (b = parseInt(b, 10), g < b && (g = b)); f[o.id] = g; y.background && f[o.id] > 0 && n("#" + o.id + "_background").css({ zIndex: f[o.id] + 1 }); f[o.id] > 0 && w.css({ zIndex: f[o.id] + 2 }) } if (y.detach ? (w.prepend(o), p.show()) : w.show(), a = setTimeout(function () { w.css({ visibility: "visible", opacity: 1 }); n("html").addClass("popup_visible").addClass("popup_visible_" + o.id); w.addClass("popup_wrapper_visible") }, 20), y.scrolllock && (d.css("overflow", "hidden"), d.height() > u.height() && d.css("margin-right", s + h)), y.backgroundactive && p.css({ top: (u.height() - (p.get(0).offsetHeight + parseInt(p.css("margin-top"), 10) + parseInt(p.css("margin-bottom"), 10))) / 2 + "px" }), p.css({ visibility: "visible", opacity: 1 }), y.background && (nt.css({ visibility: "visible", opacity: y.opacity }), setTimeout(function () { nt.css({ opacity: y.opacity }) }, 0)), p.data("popup-visible", !0), t.reposition(o, c), p.data("focusedelementbeforepopup", document.activeElement), y.keepfocus && (p.attr("tabindex", -1), setTimeout(function () { y.focuselement === "closebutton" ? n("#" + o.id + " ." + o.id + v + ":first").focus() : y.focuselement ? n(y.focuselement).focus() : p.focus() }, y.focusdelay)), n(y.pagecontainer).attr("aria-hidden", !0), p.attr("aria-hidden", !1), r(o, c, y.onopen), l) w.one("transitionend", function () { r(o, c, y.opentransitionend) }); else r(o, c, y.opentransitionend) } }, hide: function (t, u) { var c = n.inArray(t.id, i); if (c !== -1) { a && clearTimeout(a); var v = n("body"), f = n(t), o = f.data("popupoptions"), h = n("#" + t.id + "_wrapper"), y = n("#" + t.id + "_background"); if (f.data("popup-visible", !1), i.length === 1 ? n("html").removeClass("popup_visible").removeClass("popup_visible_" + t.id) : n("html").hasClass("popup_visible_" + t.id) && n("html").removeClass("popup_visible_" + t.id), i.splice(c, 1), h.hasClass("popup_wrapper_visible") && h.removeClass("popup_wrapper_visible"), o.keepfocus && !u && setTimeout(function () { n(f.data("focusedelementbeforepopup")).is(":visible") && f.data("focusedelementbeforepopup").focus() }, 0), h.css({ visibility: "hidden", opacity: 0 }), f.css({ visibility: "hidden", opacity: 0 }), o.background && y.css({ visibility: "hidden", opacity: 0 }), n(o.pagecontainer).attr("aria-hidden", !1), f.attr("aria-hidden", !0), r(t, e[t.id], o.onclose), l && f.css("transition-duration") !== "0s") f.one("transitionend", function () { f.data("popup-visible") || (o.detach ? f.hide().detach() : h.hide()); o.scrolllock && setTimeout(function () { v.css({ overflow: "visible", "margin-right": s }) }, 10); r(t, e[t.id], o.closetransitionend) }); else o.detach ? f.hide().detach() : h.hide(), o.scrolllock && setTimeout(function () { v.css({ overflow: "visible", "margin-right": s }) }, 10), r(t, e[t.id], o.closetransitionend) } }, toggle: function (i, r) { n(i).data("popup-visible") ? t.hide(i) : setTimeout(function () { t.show(i, r) }, 0) }, reposition: function (t, i) { var s = n(t), r = s.data("popupoptions"), f = n("#" + t.id + "_wrapper"), h = n("#" + t.id + "_background"), o, e; i = i || 0; r.type == "tooltip" ? (f.css({ position: "absolute" }), o = r.tooltipanchor ? n(r.tooltipanchor) : r.openelement ? n(r.openelement).filter('[data-popup-ordinal="' + i + '"]') : n("." + t.id + c + '[data-popup-ordinal="' + i + '"]'), e = o.offset(), r.horizontal == "right" ? f.css("left", e.left + o.outerWidth() + r.offsetleft) : r.horizontal == "leftedge" ? f.css("left", e.left + o.outerWidth() - o.outerWidth() + r.offsetleft) : r.horizontal == "left" ? f.css("right", u.width() - e.left - r.offsetleft) : r.horizontal == "rightedge" ? f.css("right", u.width() - e.left - o.outerWidth() - r.offsetleft) : f.css("left", e.left + o.outerWidth() / 2 - s.outerWidth() / 2 - parseFloat(s.css("marginLeft")) + r.offsetleft), r.vertical == "bottom" ? f.css("top", e.top + o.outerHeight() + r.offsettop) : r.vertical == "bottomedge" ? f.css("top", e.top + o.outerHeight() - s.outerHeight() + r.offsettop) : r.vertical == "top" ? f.css("bottom", u.height() - e.top - r.offsettop) : r.vertical == "topedge" ? f.css("bottom", u.height() - e.top - s.outerHeight() - r.offsettop) : f.css("top", e.top + o.outerHeight() / 2 - s.outerHeight() / 2 - parseFloat(s.css("marginTop")) + r.offsettop)) : r.type == "overlay" && (r.horizontal ? f.css("text-align", r.horizontal) : f.css("text-align", "center"), r.vertical ? s.css("vertical-align", r.vertical) : s.css("vertical-align", "middle")) }, addclosebutton: function (t) { var i; i = n(t).data("popupoptions").closebuttonmarkup ? n(o.closebuttonmarkup).addClass(t.id + "_close") : '<button class="popup_close ' + t.id + '_close" title="Close" aria-label="Close"><span aria-hidden="true">×<\/span><\/button>'; $el.data("popup-initialized") && $el.append(i) } }, r = function (t, i, r) { var u = n(t).data("popupoptions"), f = u.openelement ? u.openelement : "." + t.id + c, e = n(f + '[data-popup-ordinal="' + i + '"]'); typeof r == "function" && r.call(n(t), t, e) }; n(document).on("keydown", function (r) { if (i.length) { var f = i[i.length - 1], u = document.getElementById(f); n(u).data("popupoptions").escape && r.keyCode == 27 && t.hide(u) } }); n(document).on("click", function (r) { if (i.length) { var f = i[i.length - 1], u = document.getElementById(f), e = n(u).data("popupoptions").closeelement ? n(u).data("popupoptions").closeelement : "." + u.id + v; n(r.target).closest(e).length && (r.preventDefault(), t.hide(u)); n(u).data("popupoptions").blur && !n(r.target).closest("#" + f).length && r.which !== 2 && n(r.target).is(":visible") && (n(u).data("popupoptions").background ? (t.hide(u), r.preventDefault()) : t.hide(u, !0)) } }); n(document).on("keydown", function (t) { if (i.length && t.which == 9) { var o = i[i.length - 1], f = document.getElementById(o), s = n(f).find("*"), r = s.filter(p).filter(":visible"), h = n(":focus"), u = r.length, e = r.index(h); u === 0 ? (n(f).focus(), t.preventDefault()) : t.shiftKey ? e === 0 && (r.get(u - 1).focus(), t.preventDefault()) : e == u - 1 && (r.get(0).focus(), t.preventDefault()) } }); n.fn.popup = function (i) { return this.each(function () { var r = n(this), u; typeof i == "object" ? (u = n.extend({}, n.fn.popup.defaults, i), r.data("popupoptions", u), o = r.data("popupoptions"), t._init(this)) : typeof i == "string" ? (r.data("popupoptions") || (r.data("popupoptions", n.fn.popup.defaults), o = r.data("popupoptions")), t[i].call(this, this)) : (r.data("popupoptions") || (r.data("popupoptions", n.fn.popup.defaults), o = r.data("popupoptions")), t._init(this)) }) }; n.fn.popup.defaults = { type: "overlay", autoopen: !1, background: !0, backgroundactive: !1, color: "black", opacity: "0.5", horizontal: "center", vertical: "middle", offsettop: 0, offsetleft: 0, escape: !0, blur: !0, setzindex: !0, autozindex: !1, scrolllock: !1, closebutton: !1, closebuttonmarkup: null, keepfocus: !0, focuselement: null, focusdelay: 50, outline: !1, pagecontainer: null, detach: !1, openelement: null, closeelement: null, transition: null, tooltipanchor: null, beforeopen: null, onclose: null, onopen: null, opentransitionend: null, closetransitionend: null } }(jQuery), function (n, t) { n.displaySetting = function () { var n = this; this.displayData = null; this.GetDispalySettingData = function (i, r, u) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetDispalySetting", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", success: function (t) { data = JSON.parse(t); data && (n.displayData = jQuery.makeArray(data), u && n.GetDispalySetting(i, r, u)) } }) }; this.GetDispalySetting = function (i, r, u) { var e, o, f; if (u != !0 && i.data("kendoDropDownList") && i.data("kendoDropDownList").dataSource && (e = i.data("kendoDropDownList").dataSource._pristineData, e.length > 0)) { f = i.data("kendoDropDownList"); r ? f.value(r) : f.value("-1"); return } o = n.displayData; t(i).kendoDropDownList({ dataTextField: "FontWeight", dataValueField: "Id", headerTemplate: '<div class="dropdown-header k-widget k-header" style="overflow:auto;height:25px;"><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_FontColor") + '<\/span><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_Background") + '<\/span><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_FontWeight") + '<\/span><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_TextAlign") + "<\/span><\/div>", valueTemplate: '<span class="selected-value" style="background-color:#: data.FontColor #; width:20px;height:20px;float:left;margin-left:5px;margin-top:2px"><\/span><span class="selected-value" style="background-color:#: data.BackgroundColor #;width:20px;height:20px;float:left;margin-left:5px;margin-top:2px"><\/span><span style="margin-right:5px;">#: data.FontWeight #<\/span><span>#: data.TextAlign #<\/span>', template: '<span class="k-state-default dropdwn" style="background:#: data.FontColor #;color:#: data.FontColor #;display: block;float: left;width: 24%;height: 25px;"><\/span><span class="k-state-default dropdwn" style="background:#: data.BackgroundColor #;color:#: data.BackgroundColor #;float: left;width: 24%;height: 25px;    margin-left: 1%;"><\/span><span class="k-state-default dropdwn" style="width: 24%;height: 25px;display: inline-block;margin-left: 1%;background:lightgray;float: left;">#: data.FontWeight #<\/span><span class="k-state-default dropdwn" style="width: 24%;height: 25px;display: inline-block;margin-left: 1%;background:lightgray;float: left;">#: data.TextAlign #<\/span>', dataSource: o, height: 200, dataBound: function () { t(".k-list").css("width", "100%") } }); t(".dropdwn").parent().css({ width: "98%", float: "left", "padding-bottom": "5px" }); t(".dropdwn").parent().parent().css({ float: "left" }); t(".k-header").parent().css({ overflow: "hidden" }); t(i).data("kendoDropDownList")._selectedValue == "-1" && t(i).data("kendoDropDownList").span.children().css({ width: "0px", height: "0px", "margin-left": "0px", "margin-right": "0px" }); r && (f = i.data("kendoDropDownList"), f.value(r)) }; this.SaveDispalySetting = function (i, r, u, f) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveDispalySetting", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(i), success: function (i) { var e = JSON.parse(i); if (e) { n.GetDispalySettingData(r, e.Id, !0); return } }, error: function (n) { console.log(n) } }) }; this.ShowDisplaySettingDialog = function (i, r, u, f, e, o, s) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/EditDispalySetting", async: !1, datatype: "Json", type: "GET", cache: !1, data: { displayId: 0 }, success: function (n) { var u = JSON.parse(n), f; if (u) { if (u.FontWeight != null || u.FontWeight.length > 0) { i.empty(); i.append(t('<Option value=""><\/option>')); for (f in u.FontWeight) i.append(t('<Option value="' + u.FontWeight[f].Id + '">' + VIS.Utility.encodeText(u.FontWeight[f].Value) + "<\/option>")) } if (u.TextAlign != null || u.TextAlign.length > 0) { r.empty(); r.append(t('<Option value=""><\/option>')); for (f in u.TextAlign) r.append(t('<Option value="' + u.TextAlign[f].Id + '">' + VIS.Utility.encodeText(u.TextAlign[f].Value) + "<\/option>")) } } }, error: function (n) { VIS.ADialog.error("FRPT_ErrorGettingDisplaySetting"); console.log(n) } }); dialog = new VIS.ChildDialog; dialog.setContent(e); dialog.setTitle(VIS.Msg.getMsg("FRPT_ReportDisplaySetting")); dialog.setHeight(380); dialog.setWidth("30%"); dialog.setEnableResize(!1); dialog.setModal(!0); dialog.show(); dialog.onOkClick = function () { var t = [], c = f.val(), e = i.children()[i[0].selectedIndex].text, l = u.val(), h = r.children()[r[0].selectedIndex].text; t.push(f.val()); t.push(i.val()); t.push(u.val()); t.push(r.val()); n.SaveDispalySetting(t, o, e, h); s && s() } }; this.SaveSingleDispalySetting = function (i, r, u, f, e) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveSingleDispalySetting", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(i), success: function (i) { var o = JSON.parse(i); if (o) { n.GetDispalySettingData(r, e, !0); return } }, error: function (n) { console.log(n) } }) }; this.EditDisplaySettingDialog = function (i, r, u, f, e, o, s) { i != "" && i != "-1" && t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/EditDispalySetting", async: !1, datatype: "Json", type: "GET", cache: !1, data: { displayId: i }, success: function (h) { var c = JSON.parse(h), l; if (c) { if (c.FontWeight != null || c.FontWeight.length > 0) { r.empty(); r.append(t('<Option value=""><\/option>')); for (l in c.FontWeight) r.append(t('<Option value="' + c.FontWeight[l].Id + '">' + VIS.Utility.encodeText(c.FontWeight[l].Value) + "<\/option>")) } if (c.TextAlign != null || c.TextAlign.length > 0) { u.empty(); u.append(t('<Option value=""><\/option>')); for (l in c.TextAlign) u.append(t('<Option value="' + c.TextAlign[l].Id + '">' + VIS.Utility.encodeText(c.TextAlign[l].Value) + "<\/option>")) } r.val(c.ReportDisplaySetting[0].FontWeight).prop("selected", !0); u.val(c.ReportDisplaySetting[0].TextAlign).prop("selected", !0); f.val(c.ReportDisplaySetting[0].BackgroundColor); e.val(c.ReportDisplaySetting[0].FontColor); dialog = new VIS.ChildDialog; dialog.setContent(o); dialog.setTitle(VIS.Msg.getMsg("FRPT_ReportDisplaySetting")); dialog.setHeight(380); dialog.setWidth("30%"); dialog.setEnableResize(!1); dialog.setModal(!0); dialog.show(); dialog.onOkClick = function () { var t = [], c = e.val(), o = r.children()[r[0].selectedIndex].text, l = f.val(), h = u.children()[u[0].selectedIndex].text; t.push(e.val()); t.push(r.val()); t.push(f.val()); t.push(u.val()); t.push(i); n.SaveSingleDispalySetting(t, s, o, h, i) } } }, error: function (n) { VIS.ADialog.error("FRPT_ErrorGettingDisplaySetting"); console.log(n) } }) }; this.setValue = function (n, t) { var i = n.data("kendoDropDownList"); i.value(t) }; this.CheckdeleteReportDisplaySetting = function (i) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/CheckDeleteDisplaySetting", async: !1, data: { id: i }, success: function (t) { var r = JSON.parse(t); r != null && r > 1 ? VIS.ADialog.ask("FRPT_DeleteReportDisplaySetting") && n.deleteReportDisplaySetting(i) : n.deleteReportDisplaySetting(i) }, error: function (n) { VIS.ADialog.info("FRPT_RecordNotDeleted"); Console.log(n) } }) }; this.deleteReportDisplaySetting = function (n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteDisplaySetting", async: !1, data: { id: n }, success: function (n) { var t = JSON.parse(n); t != null }, error: function (n) { VIS.ADialog.info("FRPT_RecordNotDeleted"); Console.log(n) } }) } } }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i(n, i) { function u(n) { d.css("display", n ? "block" : "none") } function et() { r.load(VIS.Application.contextUrl + "FRPT/AccountingGroup/LinkCOA/?windowno=" + e, function () { r.append(d); u(!0); ot(); u(!1) }) } function ot() { y = r.find("#btnOk_" + e); g = r.find("#btnCancel_" + e); p = r.find("#btnRefresh_" + e); w = r.find("#btnUndo_" + e); rt = r.find("#acctDefaultDiv_" + e); a = r.find("#cmbElement_" + e); s = r.find("#cmbAcctSchema_" + e); b = r.find("#btnNewAcct_" + e); h = r.find("#cmbAcctLoc_" + e); l = r.find("#btnApply_" + e); VIS.Application.isRTL && (y.css("margin-right", "-128px"), g.css("margin-right", "55px")); ht(); ct(); lt(); ft([]); y.on("click", function () { o.records.length > 0 ? k.length > 0 ? f && (f = !0, u(!0), c(y, !0), t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/SaveCombination", async: !1, dataType: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify({ combList: k }), success: function (n) { n.result ? r.dialog("close") : VIS.ADialog.info("FRPT_RecordNotSaved", !0, "", "") } }), c(y, !1), u(!1), f = !1) : r.dialog("close") : r.dialog("close") }); b.on("click", function () { var t, n; if (f) { f = !1; u(!0); c(b, !0); t = s.find("option:selected").val(); try { it == 0 && (it = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "LinkCOA/GetWindowforZoom", null)); it > 0 && (n = new VIS.Query, n.addRestriction("C_ACCTSCHEMA_ID", VIS.Query.prototype.EQUAL, t), n.setRecordCount(1), VIS.viewManager.startWindow(it, n)) } catch (i) { tt.log.log(VIS.Logging.Level.SEVERE, sql, i) } c(b, !1); u(!1); f = !0 } }); g.on("click", function () { r.dialog("close") }); p.on("click", function () { o.records.length > 0 && f && (f = !1, u(!0), c(p, !0), nt(), c(p, !1), u(!1), f = !0) }); w.on("click", function () { o.records.length > 0 && f && (f = !1, u(!0), c(w, !0), k = [], nt(), c(w, !1), u(!1), f = !0) }); l.on("click", function () { o.records.length > 0 && f && (f = !1, u(!0), c(l, !0), at()) }); h.on("change", function () { u(!0); nt(); u(!1) }); a.on("change", function () { u(!0); nt(); u(!1) }); s.on("change", function () { u(!0); st(); nt(); u(!1) }) } function st() { var t = s.find("option:selected").val(), n; t > 0 && (a.prop("selectedIndex", 0), n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "LinkCOA/GetSchemaDependency", { SchemaId: t }), n != null && Object.keys(n).length > 0 && (n.Element_Id > 0 && a.val(n.Element_Id), h.prop("selectedIndex", 0), n.Frpt_LOCACCT_ID > 0 && h.val(n.Frpt_LOCACCT_ID))) } function c(n, t) { t ? n.css("opacity", "0.5") : n.css("opacity", "1") } function ht() { a.empty(); a.append(" <option value='-1' ><\/option>"); a.append(ut) } function ct() { var n, t; s.empty(); try { if (s.append(" <option value='-1' ><\/option>"), n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "LinkCOA/loadAccountSchemas", null), n != null && n.length > 0) for (t = 0; t < n.length; t++)s.append(" <option value='" + n[t].Id + "' >" + VIS.Utility.encodeText(n[t].Name) + "<\/option>"); s.prop("selectedIndex", 0) } catch (i) { } } function lt() { var n, t; h.empty(); try { if (h.append(" <option value='-1' ><\/option>"), n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "LinkCOA/loadAccountLocalization", null), n != null && n.length > 0) for (t = 0; t < n.length; t++)h.append(" <option value='" + n[t].Id + "' >" + VIS.Utility.encodeText(n[t].Name) + "<\/option>"); h.prop("selectedIndex", 0) } catch (i) { } } function nt() { var r = [], f = h.find("option:selected").val(), e = s.find("option:selected").val(), o = VIS.Env.getCtx().getAD_Client_ID(), n, u, t, i; try { if (n = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "LinkCOA/loadGridElements", { SchemaId: e, AccLocId: f }), u = 1, n != null && n.length > 0) for (t = 0; t < n.length; t++)i = {}, i.NAME = n[t].Name, i.LEGERNAME = n[t].LegerName, i.COMBINATION = n[t].Combination, i.FRPT_ACCTDEFAULT_ID = n[t].FRPT_AcctDefault_ID, i.C_VALIDCOMBINATION_ID = n[t].C_ValidCombination_ID, i.FRPT_ACCTSCHEMA_DEFAULT_ID = n[t].FRPT_AcctSchema_Default_ID, i.recid = u, u++, r.push(i) } catch (c) { } return ft(r), r } function ft(n) { o != null && (o.destroy(), o = null); v.length == 0 && (v.push({ field: "NAME", caption: VIS.Msg.getElement(VIS.Env.getCtx(), "NAME"), sortable: !0, size: "33%", min: 150, hidden: !1 }), v.push({ field: "LEGERNAME", caption: VIS.Msg.getMsg("FRPT_LegerName"), sortable: !0, size: "33%", min: 150, hidden: !1 }), v.push({ field: "COMBINATION", caption: VIS.Msg.getElement(VIS.Env.getCtx(), "COMBINATION"), sortable: !0, size: "33%", min: 150, hidden: !1, render: function (n) { return "<div>" + n.COMBINATION + '<input type=text readonly="readonly" style= "border:none" ><\/input><i class="fa fa-list-alt frpt-linkgridlistico" title="' + VIS.Msg.getMsg("FRPT_AccountCombination") + '" style="opacity:1;"><\/i><\/div>' } }), v.push({ field: "FRPT_ACCTDEFAULT_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ACCTDEFAULT_ID"), sortable: !0, size: "150px", hidden: !0 }), v.push({ field: "C_VALIDCOMBINATION_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ACCTDEFAULT_ID"), sortable: !0, size: "150px", hidden: !0 }), v.push({ field: "FRPT_ACCTSCHEMA_DEFAULT_ID", caption: VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ACCTDEFAULT_ID"), sortable: !0, size: "150px", hidden: !0 })); setTimeout(10); w2utils.encodeTags(n); o = t(rt).w2grid({ name: "linkAccountForm" + e, recordHeight: 40, show: { selectColumn: !0 }, multiSelect: !1, columns: v, records: n, onClick: function (n) { if (n.column == 2 && o.records.length > 0) { var r = new VIS.MAccountLookup(VIS.Env.getCtx(), e), i = new VIS.AccountForm("", r, Number(s.find("option:selected").val())); i.load(); i.showDialog(); i.onClose = function (i) { var f, u, r; i > 0 && (f = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "LinkCOA/loadCombination", { CId: i }), o.records[n.recid - 1].COMBINATION = f, o.records[n.recid - 1].C_VALIDCOMBINATION_ID = i, o.refresh(), u = t.map(k, function (t) { return t.FRPT_ACCTSCHEMA_DEFAULT_ID == o.records[n.recid - 1].FRPT_ACCTSCHEMA_DEFAULT_ID }).indexOf(!0), u == -1 ? (r = {}, r.FRPT_ACCTSCHEMA_DEFAULT_ID = o.records[n.recid - 1].FRPT_ACCTSCHEMA_DEFAULT_ID, r.C_VALIDCOMBINATION_ID = i, k.push(r)) : k[u].C_VALIDCOMBINATION_ID = i) } } } }) } function at() { var n = h.find("option:selected").val(), i = s.find("option:selected").val(), r = a.find("option:selected").val(), e = VIS.Env.getCtx().getAD_Client_ID(), o = VIS.Env.getCtx().getAD_Org_ID(); if (n <= 0) { VIS.ADialog.info("FRPT_AcctLoc", !0, "", ""); c(l, !1); u(!1); f = !0; return } if (i <= 0) { VIS.ADialog.info("FRPT_AcctSchema ", !0, "", ""); c(l, !1); u(!1); f = !0; return } if (r <= 0) { VIS.ADialog.info("FRPT_ChartOfAcct ", !0, "", ""); c(l, !1); u(!1); f = !0; return } t.ajax({ type: "GET", url: VIS.Application.contextUrl + "FRPT/AccountingGroup/ApplyAccountLinking", async: !0, dataType: "json", data: { accLocId: n, clientId: e, orgId: o, schemaId: i, elementId: r }, success: function (n) { c(l, !1); u(!1); f = !0; n ? VIS.ADialog.info("Done", !0, "", "") : VIS.ADialog.info("FRPT_AcctLinkingNotSaved", !0, "", "") } }) } this.onClose = null; this.log = VIS.Logging.VLogger.getVLogger("LinkCoa"); var ut = i, r = t("<div style='position:relative;'>"), d = t("<div class='vis-busyindicatorouterwrap'><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"), tt = this, e = VIS.Env.getWindowNo(), y = null, g = null, p = null, rt = null, w = null, it = 0, a = null, s = null, b = null, h = null, l = null, v = [], k = [], o = null, f = !0; this.showDialog = function () { var n = t(window).width() - 50, i = t(window).height() - 60; d.height(i); d.width(n); r.append(d); et(); r.dialog({ modal: !1, resizable: !1, title: VIS.Msg.getMsg("FRPT_LinkCoa"), width: n, height: i, position: { at: "center top", of: window }, close: function () { r.dialog("destroy"); tt.dispose(); r = null; tt = null } }) }; this.disposeComponent = function () { y && y.off("click"); g && g.off("click"); b && b.off("click"); l && l.off("click"); p && p.off("click"); w && w.off("click"); h && h.off("change"); s && s.off("change"); e = null; this.log = null; ut = null; r = null; d = null; tt = null; e = null; y = null; g = null; p = null; rt = null; w = null; a = null; s = null; b = null; h = null; l = null; v = null; k = null; o = null } } i.prototype.dispose = function () { this.disposeComponent() }; n.LinkCoa = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i() { function bi() { y = t("<div class='vis-busyindicatorouterwrap'><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"); y[0].style.visibility = "hidden"; c.append(y) } function p(n) { y[0].style.visibility = n ? "visible" : "hidden" } function ki() { var n = t(window).height() * (92 / 100); si = t(' <div class="frpt-frf-top-wrap"><ul class="frpt-frf-report-btns" style="float:right;"><button class="frpt-genrate-report" style="height: 32px;" title=' + VIS.Msg.getMsg("FRPT_GenerateReport") + '><span class="glyphicon glyphicon-export"><\/span><\/button><\/div>'); u = t('<div class="frpt-frf-main-content">'); p(!0); yt = t('<label style="float:right;font-style:italic;margin-right:5px;">' + VIS.Msg.getMsg("RecordSaved") + "<\/label>"); yt.hide(); ut = t('<label style="display: none;"><\/label>'); c.append(si.append(yt).append(ut)).append(u); ci = c.find(".frpt-genrate-report"); di(); wi.GetDispalySettingData(); nr(); tr(); i.sizeChanged() } function di() { var b, ut, it, f, st, ct, rt, lt, v, y, at, vt, c, yt; if (ht = t("<div class='frpt-frf-main-contentinner'>"), w = t("<div class='frpt-frf-maindatasecwrp'>"), b = t('<div id="rightDiv' + i.windowNo + '" class="frpt-frf-maindatasecwrp frpt-frf-maindatarightsecwrp">'), ut = t(" <div class='frpt-frf-middle-wrap'><div class='frpt-left-toggle'><i class='frpt-toggle-btn fa fa-ellipsis-v'><\/i><\/div> <\/div>"), nt = t('<div class="frpt-frf-report-detail">'), nt.append("<h4>" + VIS.Msg.getMsg("FRPT_ReportNames") + "<\/h4>"), a = t('<div class="ftpr-frf-li-lowerdiv">'), t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReports", async: !1, success: function (n) { var f = JSON.parse(n), i, r, u; if (f) if (i = f.Report, k = f.Types, g = f.BalanceAggregation, i.length > 0) { for (r = 0; r < i.length; r++)u = i[r].ADClientID == 0 ? '<div class="ftpr-frf-li-firstDiv frpt-frf-reports-gray" data-id="' + i[r].ID + '" data-tenantid="' + i[r].ADClientID + '"><div class="frpt-frf-listradiowrap"><input type="radio"><\/div>   <div><div class="frpt-frf-li-firstDiv-spans">' : '<div class="ftpr-frf-li-firstDiv" data-id="' + i[r].ID + '" data-tenantid="' + i[r].ADClientID + '"><div class="frpt-frf-listradiowrap"><input type="radio"><\/div>   <div><div class="frpt-frf-li-firstDiv-spans">', u += i[r].Active ? '<p class="frpt-frf-para">' + VIS.Utility.encodeText(i[r].Name) + "<\/p>" : '<p style="color:rgba(var(--v-c-on-secondary), .7)" class="frpt-frf-para">' + VIS.Utility.encodeText(i[r].Name) + "<\/p>", u += "<\/div>", u += '  <span style="margin-top: 5px;float: left;">' + VIS.Utility.encodeText(i[r].Desc) + "<\/span>", + '</div></div>', a.append(t(u)); a.on("click", ".ftpr-frf-li-firstDiv", gi); t(a.find(".ftpr-frf-li-firstDiv")[0]).trigger("click") } else ai = !0 }, error: function (n) { p(!1); VIS.ADialog.error("FRPT_ReportsNotLoaded"); console.log(n) } }), it = t('<div class="frpt-frf-top-right">'), it.append('<span class="frpt-frf-toptitlespan">' + VIS.Msg.getMsg("FRPT_ReportDetails") + "<\/span>"), ft = t('<input type="text" maxlength="60">'), pt = t('<textarea type="text" style="width: 100%;height: 75px;resize: none;" >'), d = t('<select style="width:100%">'), $cmbElementTypeHeader = t("<select>"), k) for (f = 0; f < k.length; f++)$cmbElementTypeHeader.append(t('<option value="' + k[f].ID + '">' + k[f].Name + "<\/option>")); if (g) for (d.append(t('<option value="0"><\/option>')), f = 0; f < g.length; f++)d.append(t('<option value="' + g[f].ID + '">' + VIS.Utility.encodeText(g[f].Name) + "<\/option>")); e = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RowLineFormatting"), undefined, tt); s = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SubGroupLineFormatting"), undefined, tt); o = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SourceLineFormatting"), undefined, tt); h = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TrxLineFormatting"), undefined, tt); l = new n.DisplaySettingHelper(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_DGLineFormatting"), undefined, tt); r = t('<div class="frpt-frf-rightfrminnerwrp">'); r.append(t('<div class="frpt-frf-form-data input-group vis-input-wrap" style="width: 100%; margin-top: 15px;">').append(t('<div class="vis-control-wrap">').append(ft).append(t('<label class="frpt-mandatory-star">' + VIS.Msg.translate(VIS.Env.getCtx(), "Name") + "<\/label>")))); r.append(t('<div class="frpt-frf-form-data input-group vis-input-wrap" style="width: 100%;">').append(t('<div class="vis-control-wrap">').append(pt).append(t("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "Description") + "<\/label>")))); st = t('<div class="frpt-frf-form-data input-group vis-input-wrap">').append(t('<div class="vis-control-wrap">').append(d).append(t("<label>" + VIS.Msg.getMsg("FRPT_BalanceAggrigation") + "<\/label>"))); ct = t('<div class="frpt-frf-form-data input-group vis-input-wrap" style="padding-right: 0; padding-left: 5px; ">').append(t('<div class="vis-control-wrap">').append($cmbElementTypeHeader).append(t("<label>" + VIS.Msg.getMsg("FRPT_TypeNotInclude") + "<\/label>"))); r.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(st).append(ct)); v = t("<div class='input-group vis-input-wrap'>"); y = t("<div class='vis-control-wrap'>"); v.append(y); rt = t("<label class='frpt-mandatory-star'>"); lt = new VIS.Controls.VNumTextBox("StdPrecision", !1, !0, !0, VIS.DisplayType.Integer, 2); ni = lt.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); rt.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_Precision")); y.append(ni).append(rt); r.append(t('<div class="frpt-frf-form-data">').append(v)); v = t("<div class='input-group vis-input-wrap'>"); y = t("<div class='vis-control-wrap'>"); v.append(y); at = new VIS.Controls.VNumTextBox("FRPT_NameColumnAfterIndex", !1, !1, !0, VIS.DisplayType.Integer, 3); ii = at.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); y.append(ii).append(t("<label>" + VIS.Msg.getMsg("FRPT_NameColumnAfterIndex") + "<\/label>")); r.append(t('<div class="frpt-frf-form-data">').append(v)); ri = t(' <input type="checkbox" class="frpt-checkbox-align">'); r.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(ri).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_IsNotUseAcctPrecision") + "<\/label> <\/div>")); gt = t(' <input type="checkbox" class="frpt-checkbox-align">'); et = t(' <input type="checkbox">'); bt = t(' <input type="checkbox">'); ti = t(' <input type="checkbox">'); wt = t(' <input type="checkbox">'); r.append(t('<div class="frpt-frf-check-wrap align-items-start" style="width:50%;">').append(gt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_MergeDescWithName") + "<\/label> <\/div>")); r.append(t('<div class="frpt-frf-check-wrap" style="width:50%;">').append(et).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "ListSources") + "<\/label> <\/div>")); r.append(t('<div class="frpt-frf-check-wrap" style="width:50%;">').append(bt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ListSubGroup") + "<\/label> <\/div><\/br>")); r.append(t('<div class="frpt-frf-check-wrap" style="width:50%;">').append(ti).append("<label>" + VIS.Msg.getMsg("FRPT_ListDesc") + "<\/label> <\/div><\/br>")); ot = t(' <input type="checkbox" class="frpt-checkbox-align">'); r.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(ot).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_RepeatHeader") + "<\/label> <\/div>")); kt = t(' <input type="checkbox" class="frpt-checkbox-align">'); r.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(kt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SuppressLine") + "<\/label> <\/div>")); dt = t(' <input type="checkbox" class="frpt-checkbox-align">'); r.append(t('<div class="frpt-frf-check-wrap align-items-start">').append(dt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_SuppressLineAfterCF") + "<\/label> <\/div>")); r.append(t("<\/div>")); r.append(t('<div class="frpt-frf-check-wrap" style="width:50%;">').append(wt).append("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "IsActive") + "<\/label> <\/div>")); vt = t("<div class='frpt-frf-form-data frpt-frf-accordiontitlewrp' id='reportColorcontrolsHeaderDiv_" + i.windowNo + "'><span id='reportColorControlsHeaderSpan_" + i.windowNo + "' class='frpt-glyphicons-deminsions fa frpt-right-arrow'><\/span><label>" + VIS.Msg.getMsg("FRPT_RowFormatting") + " <\/label><\/div>"); r.append(vt); c = t("<div id='reportHeaderDisplayControlsDiv_" + i.windowNo + "' class='frpt-frf-formlineformattingwrp' style='display:none'>"); c.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(e.getControl())); c.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(s.getControl())); c.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(o.getControl())); c.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(h.getControl())); c.append(t('<div class="frpt-frf-form-data" style="width: 100%;">').append(l.getControl())); r.append(c); r.append(t("<\/div>")); w.append(nt).append(a); b.append(it); b.append(r); ht.append(w).append(ut).append(b); u.append(ht); li = u.find("#rightDiv" + i.windowNo); li.on("click keydown change mousedown", function (n) { n.preventDefault() }); a.height(w.height() - nt.height()); yt = t(window).height() - 197; r.css({ height: yt }); ai == !0 && $btnNewReport.trigger("click"); p(!1); w.resizable({ handles: "e", minWidth: 226, maxWidth: 600, resize: function (n, i) { var r = i.size.width; r > 197 && b.width(t(document).width() - (r + 27)) } }) } function gi() { VIS.Env.getCtx().getAD_Client_ID() != fi; p(!0); var n = t(this); vi = n; st = n.data("id"); t(this).siblings("div").removeClass("ftpr-frf-li-firstDiv-selected"); t(this).addClass("ftpr-frf-li-firstDiv-selected"); t(t(t(this).siblings("div")).find("input")).prop("checked", !1); t(t(this).find("input")).prop("checked", !0); fi = n.data("tenantid"); ut.text(t(this).find(".frpt-frf-para").text()); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetReportDetails", data: { id: st }, success: function (n) { var t = JSON.parse(n); t && (ft.val(t.Name), f.Name = t.Name, pt.val(t.Desc), f.Desc = t.Desc, wt.prop("checked", t.Active), f.Active = t.Active, et.prop("checked", t.ListSource), f.ListSource = t.ListSource, bt.prop("checked", t.ListSubGroup), f.ListSubGroup = t.ListSubGroup, ti.prop("checked", t.ListDesc), f.ListDesc = t.ListDesc, ni.val(t.Precision >= 0 ? t.Precision : ""), f.Precision = t.Precision >= 0 ? t.Precision : "", kt.prop("checked", t.SuppressLine), f.SuppressLine = t.SuppressLine, dt.prop("checked", t.SuppressLineAfterCF), f.SuppressLineAfterCF = t.SuppressLineAfterCF, gt.prop("checked", t.MergeDescWithName), f.MergeDescWithName = t.MergeDescWithName, ii.val(t.ColumnAftIndex), ot.prop("checked", t.IsRepeatHeader), ri.prop("checked", t.IsNotUseAcct), d.val(t.BalanceAggregation), e.setValue(t.RRowLineFormatting), o.setValue(t.RSourceLineFormatting), s.setValue(t.RSubColumn), h.setValue(t.RTrxLineFormatting), l.setValue(t.RDGLineFormatting), f.RRowLineFormatting = t.RRowLineFormatting, f.RSourceLineFormatting = t.RSourceLineFormatting, f.SubColumn = t.RSubColumn, f.RTrxLineFormatting = t.RTrxLineFormatting, et.prop("checked") ? (r.find(".chkListTransctn").css("display", "inherit"), f.ListTransaction = t.ListTransaction) : (r.find(".chkListTransctn").css("display", "none"), f.ListTransaction = t.ListTransaction), f.ElementType = t.ElementType, $cmbElementTypeHeader.val(t.ElementType)); ft.trigger("keydown"); e.setReadOnly(!0); o.setReadOnly(!0); s.setReadOnly(!0); h.setReadOnly(!0); l.setReadOnly(!0); (e.getValue() == "-1" || e.getValue() == "0" || e.getValue() == "") && (o.getValue() == "-1" || o.getValue() == "0" || o.getValue() == "") && (s.getValue() == "-1" || s.getValue() == "0" || s.getValue() == "") && (h.getValue() == "-1" || h.getValue() == "0" || h.getValue() == "") && (l.getValue() == "-1" || l.getValue() == "0" || l.getValue() == "") ? (u.find("#reportColorControlsHeaderSpan_" + i.windowNo).addClass("frpt-right-arrow"), u.find("#reportColorControlsHeaderSpan_" + i.windowNo).removeClass("frpt-down-arrow"), u.find("#reportHeaderDisplayControlsDiv_" + i.windowNo).css("display", "none")) : (u.find("#reportColorControlsHeaderSpan_" + i.windowNo).addClass("frpt-down-arrow"), u.find("#reportColorControlsHeaderSpan_" + i.windowNo).removeClass("frpt-right-arrow"), u.find("#reportHeaderDisplayControlsDiv_" + i.windowNo).css("display", "inherit")); p(!1) }, error: function (n) { VIS.ADialog.error("FRPT_ErrorGettingDetails"); console.log(n); p(!1) } }) } function nr() { $chkRLListSources = u.find("#FR_chkListSources_" + i.windowNo); ct = u.find("#FR_cmbReportLineSet_" + i.windowNo); lt = u.find("#FR_cmbLineType_" + i.windowNo); it(lt); at = u.find("#FR_cmbPostingType_" + i.windowNo); it(at); vt = u.find("#FR_cmbLinkWith_" + i.windowNo); it(vt); ei = u.find("#FR_cmbType_" + i.windowNo); it(ei); oi = u.find("#FR_cmbGroupName_" + i.windowNo); it(oi); hi = u.find("#reportColorcontrolsHeaderDiv_" + i.windowNo) } function tt() { b = !1; $btnUndoReport.css("display", "inherit"); $btnNewReport.css("display", "none") } function it(n) { if (n.is(":text")) n.on("keydown", function (n) { n.originalEvent && (ui = !0, $btnundoReportLineSet1.css("display", "inherit"), $btnundoReportColumnSet1.css("display", "inherit")) }); else if (n.is(":checkbox")) n.on("click", function (n) { n.originalEvent && (ui = !0, $btnundoReportLineSet1.css("display", "inherit"), $btnundoReportColumnSet1.css("display", "inherit")) }); else n.on("change", function (n) { n.originalEvent && (ui = !0, $btnundoReportLineSet1.css("display", "inherit"), $btnundoReportColumnSet1.css("display", "inherit")) }) } function tr() { hi.on("click", function () { ir(u.find("#reportHeaderDisplayControlsDiv_" + i.windowNo), u.find("#reportColorControlsHeaderSpan_" + i.windowNo)) }); ci.on("click", function (t) { var i = Math.random().toString().substr(2, 4); v = new n.AForms.ReportReader; v.setReportName(ut.text()); pi.setContext(st, "FRPT_IsRepeatHeader", ot.prop("checked")); v.initializeComponent(st, yi, i); rt.push({ id: i, "class": v }); t.stopPropagation() }) } function ir(n, t) { n && (n.css("display") == "none" ? (n.css("display", "inherit"), t.addClass("frpt-down-arrow"), t.removeClass("frpt-right-arrow")) : (n.css("display", "none"), t.addClass("frpt-right-arrow"), t.removeClass("frpt-down-arrow"))) } var vi, fi; this.windowNo = null; var c = t("<div class='frpt-frf-assign-content vis-forms-container vis-formouterwrpdiv'>"), i = this, u = null, yi = null, v = null, ht = null, ct = null, rt = [], lt = null, at = null, vt = null, ei = null, oi = null, y = null, si = null, yt = null, ut = null, ft = null, pt = null, wt = null, bt = null, et = null, pi = VIS.Env.getCtx(), kt = null, dt = null, gt = null, ni = null, hi = null, ti = null, ii = null, ot = null, ri = null, ci = null, st = 0, f = {}, ui = !1, b = !1, rr = t(this), r = null, e = null, o = null, s = null, h = null, l = null, wi = null, li = null, ai = !1, k = null, wi = new n.displaySetting, d = null, g = null; this.initialize = function () { bi(); window.setTimeout(function () { ki() }, 20) }; var w = null, nt = null, a = null; vi = null; fi = -1; this.onmessage = function (n) { var r, u; if (n.Event == "FRPT_Report") { var i = n.Message.split("-"), f = VIS.Utility.Util.getValueOfInt(i[1]), t = VIS.Utility.Util.getValueOfInt(i[2]), t = VIS.Utility.Util.getValueOfInt(i[2]); t.length != 4 && (t = t.toString().padStart(4, "0")); r = rt.findIndex(n => n.id === t.toString()); r >= 0 && (u = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "Data/GetCacheReportData", { AD_PInstance_ID: f }), rt != null && (v = rt[r].class, v.loadData(u.result))) } }; this.getRoot = function () { return c }; this.disposeComponent = function () { c = null; i = null; $divContainer = null; $divFRLines = null; ct.off("change"); ct = null; lt = null; at = null; vt = null; $ulReportLine = null; $txtHeaderLabel = null; $txtPrintLabel = null; $txtSeqNo = null; $chkIsPrint = null; $divGridAccount = null; $divGridGroup = null; $divRLFormulaGroup = null; arrListColumns = []; rows = []; accountGrid = null; accountElementDialog = null; addElemenTmp = null; addElemTempalate = null; $divAddAccountElement = null; $btnAddAccountElement = null; selectedReportLine = null; y = null }; this.formSizeChanged = function () { var n = c.find(".frpt-frf-top-wrap").height(), t = c.find(".frpt-frf-rpt-line").height(), i = c.find(".frpt-frf-report-detail>h4").height(); a.height(w.height() - nt.height()) }; this.sizeChanged = function (n, t) { this.formSizeChanged(n, t) } } n.AForms = n.AForms || {}; i.prototype.refresh = function () { this.formSizeChanged() }; i.prototype.sizeChanged = function (n, t) { this.sizeChanged(n, t) }; i.prototype.init = function (n, t) { this.frame = t; this.windowNo = n; VIS.sseManager.register(this); this.frame.getContentGrid().append(this.getRoot()); this.initialize() }; i.prototype.dispose = function () { this.disposeComponent(); VIS.sseManager.unregister(this); this.frame && this.frame.dispose(); this.frame = null }; n.AForms.FinancialReportViewer = i }(FRPT, jQuery), function (n, t) { var i = null; n.DisplaySettingHelper = function (n, r, u) { var tt = this, p, ft, f, rt, v, y, w, b, k, d, e, s, o, h, ut, c, g, l, a, et, ot, nt, it; this.displayData = i; et = function () { ut = t("<div style='' >"); var n = t("<div class='frpt-dspmainwrap'>"); l = t("<input type='checkbox'>"); a = t("<input type='checkbox'>"); e = t("<input type='color'>"); s = t("<select><\/select>"); o = t("<input type='color'>"); h = t("<select><\/select>"); n.append(t(" <div class='frpt-frf-form-data frpt-fr-font-color frpt-marginleft input-group vis-input-wrap'>").append(l).append(t('<div class="vis-control-wrap">').append(e).append(t("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_FontColor") + " <\/label>")))); n.append(t(" <div class='frpt-frf-form-data frpt-fr-font-weight frpt-marginleft input-group vis-input-wrap'>").append(t('<input type="checkbox" style="visibility:hidden">')).append(t('<div class="vis-control-wrap">').append(s).append(t("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_FontWeight") + " <\/label>")))); n.append(t(" <div class='frpt-frf-form-data frpt-fr-background-color frpt-marginleft input-group vis-input-wrap' >").append(a).append(t('<div class="vis-control-wrap">').append(o).append(t("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_BackgroundColor") + " <\/label>")))); n.append(t(" <div class='frpt-frf-form-data frpt-fr-textalign frpt-marginleft input-group vis-input-wrap' >").append(t('<input type="checkbox" style="visibility:hidden">')).append(t('<div class="vis-control-wrap">').append(h).append(t("<label>" + VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_TextAlign") + " <\/label>")))); ut.append(n) }; ot = function () { var i, r; p = t("<div style='width:100%'>"); ft = t("<label>").append(n); p.append(ft); c = t('<div style="display:none;border: 1px solid #dbdbde;width: 100%;background-color: #f3f3f4;color: black;float: left;border-radius: 4px; height: 31px; padding: 4px 0;">'); g = t("<div>"); i = t("<div class='k-colorcontrol'>"); f = t('<input type="text" style="width:99%">'); i.append(f); g.append(i); r = t("<div class='k-colorcontrol-button'>"); y = t('<span class="fa fa-ellipsis-v" title="' + VIS.Msg.getMsg("FRPT_AddNewDisplaySetting") + '"><\/span>'); r.append(y); g.append(r); p.append(g); p.append(c); rt = t('<div class="FRPT-overlay">'); v = t("<ul>"); rt.append(v); b = t('<li><span title="' + VIS.Msg.getMsg("FRPT_AddNewDisplaySetting") + '" class="frpt-glyphicons-deminsions vis vis-plus"><\/span><\/li>'); v.append(b); k = t('<li><span title="' + VIS.Msg.getMsg("FRPT_EditDisplaySetting") + '" class="frpt-glyphicons-deminsions vis vis-edit"><\/span><\/li>'); v.append(k); d = t('<li><span title="' + VIS.Msg.getMsg("FRPT_RefreshDisplaySetting") + '" class="frpt-glyphicons-deminsions vis vis-refresh"><\/span><\/li>'); v.append(d); w = t('<li><span title="' + VIS.Msg.getMsg("FRPT_DeleteDisplaySetting") + '" class="frpt-glyphicons-deminsions vis vis-delete"><\/span><\/li>'); v.append(w); et(); tt.bindEvents(); nt() }; this.getControl = function () { return p }; this.setReadOnly = function (n) { n == !0 ? (c.css("display", ""), g.css("display", "none")) : (c.css("display", "none"), g.css("display", "")) }; this.bindEvents = function () { y.on("click", function () { y.w2overlay(rt.clone(!0)) }); w.on("click", function () { r = f.val(); lt() }); b.on("click", function () { st(!1) }); k.on("click", function () { r = f.val(); st(!0) }); d.on("click", function () { r = f.val(); i = null; nt() }); f.on("change", function () { u && u() }) }; this.unBindEvents = function () { y.off("click"); w.off("click"); b.off("click"); k.off("click"); d.off("click") }; nt = function () { if (i) { it(r, !0); return } t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetDispalySetting", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", success: function (n) { data = JSON.parse(n); data && (tt.displayData = jQuery.makeArray(data), i = tt.displayData, it(r, !0)) } }) }; it = function (n, i) { var u, e, r; if (i != !0 && f.data("kendoDropDownList") && f.data("kendoDropDownList").dataSource && (u = f.data("kendoDropDownList").dataSource._pristineData, u.length > 0)) { r = f.data("kendoDropDownList"); n ? r.value(n) : r.value("-1"); try { c.empty(); c.append(f.data("kendoDropDownList").span.html()) } catch (o) { } return } e = tt.displayData; t(f).kendoDropDownList({ dataTextField: "FontWeight", dataValueField: "Id", headerTemplate: '<div class="dropdown-header k-widget k-header" style="overflow:auto;"><span style="width:25%;float:left;padding:0px;" class="frpt-fontsize">' + VIS.Msg.getMsg("FRPT_FontColor") + '<\/span><span style="width:25%;float:left;padding:0px;" class="frpt-fontsize">' + VIS.Msg.getMsg("FRPT_Background") + '<\/span><span style="width:25%;float:left;padding:0px;" class="frpt-fontsize">' + VIS.Msg.getMsg("FRPT_FontWeight") + '<\/span><span style="width:25%;float:left;padding:0px;" class="frpt-fontsize">' + VIS.Msg.getMsg("FRPT_TextAlign") + "<\/span><\/div>", valueTemplate: '<span class="selected-value" style="background-color:#: data.FontColor #; width:20px;height:20px;float:left;margin-left:5px;margin-top:2px"><\/span><span class="selected-value" style="background-color:#: data.BackgroundColor #;width:20px;height:20px;float:left;margin-left:5px;margin-top:2px"><\/span><span style="margin-right:5px;">#: data.FontWeight #<\/span><span>#: data.TextAlign #<\/span>', template: '<span class="k-state-default dropdwn" style="background:#: data.FontColor #;color:#: data.FontColor #;display: block;float: left;width: 24%;height: 15px;"><\/span><span class="k-state-default dropdwn" style="background:#: data.BackgroundColor #;color:#: data.BackgroundColor #;float: left;width: 24%;height: 15px;    margin-left: 1%;"><\/span><span class="k-state-default dropdwn" style="width: 24%;height: 15px;line-height: 15px;display: inline-block;margin-left: 1%;float: left;">#: data.FontWeight #<\/span><span class="k-state-default dropdwn" style="width: 24%;height: 15px;line-height: 15px;display: inline-block;margin-left: 1%;float: left;">#: data.TextAlign #<\/span>', dataSource: e, height: 200, dataBound: function () { t(".k-list").css("width", "100%") } }); t(".dropdwn").parent().css({ width: "98%", float: "left", display: "flex", "align-items": "center" }); t(".dropdwn").parent().parent().css({ float: "left" }); t(".k-header").parent().css({ overflow: "hidden" }); t(f).data("kendoDropDownList")._selectedValue == "-1" && t(f).data("kendoDropDownList").span.children().css({ width: "0px", height: "0px", "margin-left": "0px", "margin-right": "0px" }); n && (r = f.data("kendoDropDownList"), r.value(n)); try { c.empty(); c.append(f.data("kendoDropDownList").span.html()) } catch (o) { } }; this.getValue = function () { return f.val() }; this.setValue = function (n) { it(n, !1) }; this.getControlHtml = function () { return f }; this.getSelectedOption = function () { return f.val() == -1 ? "" : f.data("kendoDropDownList").span.html() }; var ct = function (n) { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SaveDispalySetting", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(n), success: function (n) { var t = JSON.parse(n); if (t) { r = t.Id; i = null; nt(); u && u(); return } }, error: function (n) { console.log(n) } }) }, st = function (n) { l.on("change", function () { t(this).is(":checked") ? (e.attr("disabled", !1), e.css("opacity", "1")) : (e.attr("disabled", !0), e.css("opacity", "0.5")) }); a.on("change", function () { t(this).is(":checked") ? (o.attr("disabled", !1), o.css("opacity", "1")) : (o.attr("disabled", !0), o.css("opacity", "0.5")) }); var i = null; if (n) { if (r == "-1" || r == "") return; i = r } else i = 0; t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/EditDispalySetting", async: !1, datatype: "Json", type: "GET", cache: !1, data: { displayId: i }, success: function (n) { var i = JSON.parse(n), r; if (i) { if (i.FontWeight != null || i.FontWeight.length > 0) { s.empty(); s.append(t('<Option value=""><\/option>')); for (r in i.FontWeight) s.append(t('<Option value="' + i.FontWeight[r].Id + '">' + VIS.Utility.encodeText(i.FontWeight[r].Value) + "<\/option>")) } if (i.TextAlign != null || i.TextAlign.length > 0) { h.empty(); h.append(t('<Option value=""><\/option>')); for (r in i.TextAlign) h.append(t('<Option value="' + i.TextAlign[r].Id + '">' + VIS.Utility.encodeText(i.TextAlign[r].Value) + "<\/option>")) } i.ReportDisplaySetting != null ? (s.val(i.ReportDisplaySetting[0].FontWeight).prop("selected", !0), h.val(i.ReportDisplaySetting[0].TextAlign).prop("selected", !0), i.ReportDisplaySetting[0].BackgroundColor == "" ? (a.prop("checked", !1), o.attr("disabled", !0), o.css("opacity", "0.5")) : (a.prop("checked", !0), o.attr("disabled", !1), o.css("opacity", "1"), o.val(i.ReportDisplaySetting[0].BackgroundColor)), i.ReportDisplaySetting[0].FontColor == "" ? (l.prop("checked", !1), e.attr("disabled", !0), e.css("opacity", "0.5")) : (l.prop("checked", !0), e.attr("disabled", !1), e.css("opacity", "1"), e.val(i.ReportDisplaySetting[0].FontColor))) : (l.prop("checked", !1), a.prop("checked", !1), e.attr("disabled", !0), e.css("opacity", "0.5"), o.attr("disabled", !0), o.css("opacity", "0.5")) } }, error: function (n) { VIS.ADialog.error("FRPT_ErrorGettingDisplaySetting"); console.log(n) } }); dialog = new VIS.ChildDialog; dialog.setContent(ut); dialog.setTitle(VIS.Msg.getMsg("FRPT_ReportDisplaySetting")); dialog.setHeight(380); dialog.setWidth("30%"); dialog.setEnableResize(!1); dialog.setModal(!0); dialog.show(); dialog.onOkClick = function () { var n = [], t = e.val(), r = o.val(); l.is(":checked") ? n.push(e.val()) : n.push("-2"); n.push(s.val()); a.is(":checked") ? n.push(o.val()) : n.push("-2"); n.push(h.val()); n.push(i); ct(n) } }, lt = function () { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/CheckDeleteDisplaySetting", async: !1, data: { id: r }, success: function (n) { var t = JSON.parse(n); t != null && t > 1 ? VIS.ADialog.confirm("FRPT_DeleteReportDisplaySetting", !0, "", "Confirm", function (n) { n && ht() }) : ht() }, error: function (n) { VIS.ADialog.info("FRPT_RecordNotDeleted"); Console.log(n) } }) }, ht = function () { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/DeleteDisplaySetting", async: !1, data: { id: r }, success: function (n) { var t = JSON.parse(n); t != null && (i = null, nt()) }, error: function (n) { VIS.ADialog.info("FRPT_RecordNotDeleted"); Console.log(n) } }) }; ot(); this.dispose = function () { tt = null; this.displayData = null; this.getControl = null; this.getValue = null; y.off("click"); w.off("click"); b.off("click"); k.off("click"); d.off("click"); f.data("kendoDropDownList") && f.data("kendoDropDownList").destroy(); i = p = ft = f = rt = v = y = w = b = k = d = e = s = o = h = ut = l = a = null; et = ot = bindEvents = nt = it = ct = st = lt = ht = null } }; n.GetDisplaySettingHtml = function (n) { var r, i, u = this, f = function () { r = t("<div style='width:100%'>"); var n = t("<div style='width:94%;float:left;'>"); i = t('<input type="text" style="width:98%">'); n.append(i); r.append(n); e() }, e = function () { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetDispalySetting", async: !1, datatype: "Json", type: "POST", contentType: "application/json; charset=utf-8", success: function (t) { data = JSON.parse(t); data && (u.displayData = jQuery.makeArray(data), o(n, !0)) } }) }, o = function (n, r) { var e, o, f; if (r != !0 && i.data("kendoDropDownList") && i.data("kendoDropDownList").dataSource && (e = i.data("kendoDropDownList").dataSource._pristineData, e.length > 0)) { f = i.data("kendoDropDownList"); n ? f.value(n) : f.value("-1"); return } o = u.displayData; t(i).kendoDropDownList({ dataTextField: "FontWeight", dataValueField: "Id", headerTemplate: '<div class="dropdown-header k-widget k-header" style="overflow:auto;height:25px;"><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_FontColor") + '<\/span><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_Background") + '<\/span><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_FontWeight") + '<\/span><span style="width:25%;float:left;padding:0px;">' + VIS.Msg.getMsg("FRPT_TextAlign") + "<\/span><\/div>", valueTemplate: '<span class="selected-value" style="background-color:#: data.FontColor #; width:20px;height:20px;float:left;margin-left:5px;margin-top:2px"><\/span><span class="selected-value" style="background-color:#: data.BackgroundColor #;width:20px;height:20px;float:left;margin-left:5px;margin-top:2px"><\/span><span style="margin-right:5px;">#: data.FontWeight #<\/span><span>#: data.TextAlign #<\/span>', template: '<span class="k-state-default dropdwn" style="background:#: data.FontColor #;color:#: data.FontColor #;display: block;float: left;width: 24%;height: 15px;"><\/span><span class="k-state-default dropdwn" style="background:#: data.BackgroundColor #;color:#: data.BackgroundColor #;float: left;width: 24%;height: 15px;    margin-left: 1%;"><\/span><span class="k-state-default dropdwn" style="width: 24%;height: 15px;line-height: 15px;display: inline-block;margin-left: 1%;float: left;">#: data.FontWeight #<\/span><span class="k-state-default dropdwn" style="width: 24%;height: 15px;line-height: 15px;display: inline-block;margin-left: 1%;float: left;">#: data.TextAlign #<\/span>', dataSource: o, height: 200, dataBound: function () { t(".k-list").css("width", "100%") } }); t(".dropdwn").parent().css({ width: "98%", float: "left", display: "flex", "align-items": "center" }); t(".dropdwn").parent().parent().css({ float: "left" }); t(".k-header").parent().css({ overflow: "hidden" }); t(i).data("kendoDropDownList")._selectedValue == "-1" && t(i).data("kendoDropDownList").span.children().css({ width: "0px", height: "0px", "margin-left": "0px", "margin-right": "0px" }); n && (f = i.data("kendoDropDownList"), f.value(n)) }; this.getSelectedOption = function () { return i.val() == -1 ? "" : i.data("kendoDropDownList").span.html().replace(/margin-top:2px/g, "margin-top:-2px") }; f(); this.dispose = function () { u = null; i.data("kendoDropDownList") && i.data("kendoDropDownList").destroy(); r = i = null; f = e = o = getSelectedOption = null } } }(FRPT, jQuery), function (n, t) { function i() { function bu() { var u = t('<div class="frpt-distribution-leftcontrols">'), f, n, i, r, o, s; u.append('<span class="frpt-distribution-inputlabels">' + VIS.translatedTexts.AccountingSchema + "<\/span>").append(ft); ut.append(u); f = t('<div class="frpt-distribution-leftcontrols"> <span class="frpt-distribution-inputlabels" title="Organization" >' + VIS.translatedTexts.AD_Org_ID + '<\/span> <select class="frpt-distribution-orgcmb" id=VIS_cmbOrg_' + e.windowNo + "><\/select>"); ut.append(f); nr = t('<button tabindex="-1" class="vis-controls-txtbtn-table-td2" style="width: 30px; height: 25px; padding: 0px; border-color: #BBBBBB;"><img tabindex="-1" src="' + br + '" title="' + VIS.Msg.getMsg("Clear", !1, !1) + '"><\/button>'); n = t('<div class="frpt-distribution-leftcontrols">'); n.append('<span class="frpt-distribution-inputlabels">' + VIS.translatedTexts.Account_ID + "<\/span>").append(rt.getControl().addClass("frpt-distribution-element")).append(rt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(nr); ut.append(n); i = t('<div class="frpt-distribution-leftcontrols">'); i.append('<span class="frpt-distribution-inputlabels">' + VIS.translatedTexts.PostingType + "<\/span>").append(it); ut.append(i); r = t('<div class="frpt-distribution-leftcontrols"><div class="panel-group" style="margin: 0px;" id="accordion" role="tablist" aria-multiselectable="true"><div class="panel panel-default"><div class="panel-heading" role="tab" id="headingOne"><h4 class="panel-title"><a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="VIS-Accordion-head collapsed">' + VIS.Msg.getMsg("AccountElement") + '<i class="glyphicon glyphicon-chevron-down pull-right"><\/i><\/a><\/h4><\/div><div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne" style="height: 0px;"><div class="panel-body" style=" overflow: auto; height: 200px !important; "><\/div><\/div><\/div><\/div><\/div>'); ut.append(r); y = r.find(".panel-body"); o = t('<div class="frpt-distribution-leftcontrols"><span class="frpt-distribution-inputlabels">' + VIS.Msg.getMsg("VIS_FromDate") + '<\/span><input  class="frpt-distribution-fromdate"  type="date"><\/input><\/div><div class="frpt-distribution-leftcontrols"><span class="frpt-distribution-inputlabels">' + VIS.Msg.getMsg("VIS_ToDate") + '<\/span><input  class="frpt-distribution-todate"  type="date"><\/input><\/div>'); ut.append(o); s = t('<div class="frpt-distribution-leftcontrols"><input class="frpt-distribution-multicheckbox" type="checkbox"><label>' + VIS.Msg.getMsg("FRPT_AnyElement") + "<\/label><\/div>"); ut.append(s); n.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"); tt = ut.find("#VIS_cmbOrg_" + e.windowNo); rr = ut.find(".frpt-distribution-multicheckbox"); hi = ut.find(".frpt-distribution-fromdate"); ci = ut.find(".frpt-distribution-todate") } function ku() { et.append('<div style="width: 85%;display:flex;margin-bottom:15px;"><div class="frpt-data-field"><label style="float:left;">' + VIS.Msg.getMsg("Type") + ' <\/label><select class="frpt-distribution-type" id=cmbType_' + e.windowNo + '><\/select><\/div><div class="frpt-data-field"><label style="float:left;">' + VIS.Msg.getMsg("FRPT_Basis") + ' <\/label><select class="frpt-distribution-basis" id=cmbBasis_' + e.windowNo + '><\/select><\/div><div class="frpt-distribution-control frpt-data-field"><label>' + VIS.Msg.getMsg("FRPT_Element") + ' <\/label><\/div><div class="frpt-distribution-value frpt-data-field"><label>' + VIS.Msg.getMsg("FRPT_Value") + ' <\/label><input type="number" id=txtValue_' + e.windowNo + ' maxlength="100"><\/div><button id="addbutton_' + e.windowNo + '" class="frpt-distribution-plusbtn"><i class="glyphicon glyphicon-plus"><\/i><\/button><div style="float: right;margin-right: 5px;display:none" ><input id="FRPT-file-input" style="display:none" type="file" accept=".xls,.xlsx"><label title="' + VIS.Msg.getMsg("FRPT_ImportExcel") + '"  for="FRPT-file-input" class="FRPT-change-picture-ico"><\/label><\/div><div for="FRPT-file-input" class="FRPT-excelImportDiv"><img title="' + VIS.Msg.getMsg("FRPT_ExcelImport") + '" src="' + VIS.Application.contextUrl + 'Areas/FRPT/Images/xcel-import.png" alt="excel"><label>' + VIS.Msg.getMsg("FRPT_ExcelImport") + '<\/label><\/div><\/div><p class="frpt-distribution-sum">' + VIS.Msg.getMsg("Amount") + ": " + VIS.Env.ZERO.toLocaleString() + "<\/p>"); wi = et.find(".frpt-distribution-control"); wi.append(k.getControl().addClass("frpt-distribution-element")).append(k.getBtn(0).css("width", "30px").css("height", "30px").css("padding", "0px").css("border-color", "#BBBBBB")); yr = et.find(".frpt-distribution-sum"); u = et.find("#cmbType_" + e.windowNo); p = et.find("#cmbBasis_" + e.windowNo); g = et.find("#txtValue_" + e.windowNo); uu = et.find("#addbutton_" + e.windowNo); sr = et.find(".FRPT-excelImportDiv"); hr = et.find("#FRPT-file-input"); cr = et.find("#FRPT-file-input"); wi.find(".frpt-distribution-element").css("width", "calc(100% - 30px)") } function du() { var n, i; yi.append('<div class="frpt-distribution-grid"><\/div>'); ir = yi.find(".frpt-distribution-grid"); n = t('<div style="padding-left: 15px;height:100%">'); n.append(' <a class="vis-group-btn frpt-distribution-clear vis-group-grayBtn" style="float: left;">' + VIS.Msg.getMsg("FRPT_Delete") + "<\/a>"); i = t('<div style="padding-left: 15px;height:100%;">'); i.append(' <a class="vis-group-btn frpt-distribution-calculate vis-group-grayBtn" style="float: left;">' + VIS.Msg.getMsg("FRPT_Calculate") + "<\/a>"); yi.append(n).append(i); ru = yi.find(".frpt-distribution-clear"); fu = yi.find(".frpt-distribution-calculate") } function gu() { var n, i; si.append('<div  class="frpt-posting-grid"><\/div>'); dr = si.find(".frpt-posting-grid"); n = t('<div style="float: left; width:60%">'); n.append('<div class="frpt-distribution-date"><label>' + VIS.translatedTexts.DateAcct + ' <\/label><input class="frpt-distribution-AcctDate" type="date"><\/input><\/div>'); si.append(n); i = t('<div style="padding-top: 15px;float: right;">'); i.append(' <a class="vis-group-btn frpt-distribution-post vis-group-grayBtn" style="float: left;">' + VIS.Msg.getMsg("FRPT_Post") + "<\/a>"); si.append(i); eu = si.find(".frpt-distribution-post"); ur = si.find(".frpt-distribution-AcctDate") } function hu() { var n = []; n.push({ field: "ElementValue", caption: VIS.translatedTexts.AccountElement, size: "50%", hidden: !1 }); n.push({ field: "ElementName", caption: VIS.translatedTexts.AccountElement, size: "50%", hidden: !1 }); n.push({ field: "Percentage", caption: VIS.translatedTexts.Percentage, size: "20%", hidden: !1, render: function (n) { var t = VIS.Utility.Util.getValueOfDecimal(n.Percentage); return t.toLocaleString() } }); n.push({ field: "Proportional", caption: VIS.translatedTexts.FRPT_Ratio, size: "20%", hidden: !1, render: function (n) { var t = VIS.Utility.Util.getValueOfDecimal(n.Proportional); return t.toLocaleString() } }); w != undefined && w != null && (w.destroy(), w = null); w = ir.w2grid({ name: "distributiongrid_" + e.windowNo, show: { toolbar: !1, selectColumn: !0, toolbarReload: !1, toolbarColumns: !0, toolbarSearch: !1, toolbarAdd: !1, toolbarDelete: !1, toolbarSave: !1 }, multiSelect: !0, columns: n, records: [], onChange: function () { }, onSelect: function (n) { c[0].style.visibility = "visible"; n.all ? n.onComplete = function () { ir.find("#grid_distributiongrid_" + e.windowNo + "_records").on("scroll", au); c[0].style.visibility = "hidden" } : c[0].style.visibility = "hidden" } }); w.hideColumn("ElementValue") } function cu() { var n = [], t; for (n.push({ field: "C_AcctSchema_ID", caption: VIS.translatedTexts.AccountingSchema, size: "15%", hidden: !0 }), n.push({ field: "AcctSchema", caption: VIS.translatedTexts.AccountingSchema, size: "150px", hidden: !1 }), n.push({ field: "AmtAcctDr", caption: VIS.translatedTexts.AmtAcctDr, size: "100px", hidden: !1, render: function (n) { var t = VIS.Utility.Util.getValueOfDecimal(n.AmtAcctDr); return t.toLocaleString() } }), n.push({ field: "AmtAcctCr", caption: VIS.translatedTexts.AmtAcctCr, size: "100px", hidden: !1, render: function (n) { var t = VIS.Utility.Util.getValueOfDecimal(n.AmtAcctCr); return t.toLocaleString() } }), t = 0; t < i.length; t++)i[t].elementtype == "AC" ? (n.push({ field: "Account_ID", caption: VIS.translatedTexts.Account_ID, size: "15%", hidden: !0 }), n.push({ field: "Account", caption: VIS.translatedTexts.Account_ID, size: "150px", hidden: !1 })) : i[t].elementtype == "AY" ? (n.push({ field: "C_Activity_ID", caption: VIS.translatedTexts.Activity, size: "15%", hidden: !0 }), n.push({ field: "Activity", caption: VIS.translatedTexts.Activity, size: "100px", hidden: !1 })) : i[t].elementtype == "MC" ? (n.push({ field: "C_Campaign_ID", caption: VIS.translatedTexts.FRPT_Campaign, size: "15%", hidden: !0 }), n.push({ field: "Campaign", caption: VIS.translatedTexts.FRPT_Campaign, size: "100px", hidden: !1 })) : i[t].elementtype == "OO" ? (n.push({ field: "AD_Org_ID", caption: VIS.translatedTexts.AD_Org_ID, size: "15%", hidden: !0 }), n.push({ field: "Org", caption: VIS.translatedTexts.AD_Org_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "OT" ? (n.push({ field: "AD_OrgTrx_ID", caption: VIS.translatedTexts.AD_OrgTrx_ID, size: "15%", hidden: !0 }), n.push({ field: "OrgTrx", caption: VIS.translatedTexts.AD_OrgTrx_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "BP" ? (n.push({ field: "C_BPartner_ID", caption: VIS.translatedTexts.C_BPartner_ID, size: "15%", hidden: !0 }), n.push({ field: "BPartner", caption: VIS.translatedTexts.C_BPartner_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "PJ" ? (n.push({ field: "C_Project_ID", caption: VIS.translatedTexts.Project, size: "15%", hidden: !0 }), n.push({ field: "Project", caption: VIS.translatedTexts.Project, size: "100px", hidden: !1 })) : i[t].elementtype == "PR" ? (n.push({ field: "M_Product_ID", caption: VIS.translatedTexts.M_Product_ID, size: "15%", hidden: !0 }), n.push({ field: "Product", caption: VIS.translatedTexts.M_Product_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "SR" ? (n.push({ field: "C_SalesRegion_ID", caption: VIS.translatedTexts.C_SalesRegion_ID, size: "15%", hidden: !0 }), n.push({ field: "SalesRegion", caption: VIS.translatedTexts.C_SalesRegion_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "LF" ? (n.push({ field: "C_LocFrom_ID", caption: VIS.translatedTexts.C_LocFrom_ID, size: "15%", hidden: !0 }), n.push({ field: "LocFrom", caption: VIS.translatedTexts.C_LocFrom_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "LT" ? (n.push({ field: "C_LocTo_ID", caption: VIS.translatedTexts.C_LocTo_ID, size: "15%", hidden: !0 }), n.push({ field: "LocTo", caption: VIS.translatedTexts.C_LocTo_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "U1" ? (n.push({ field: "User1_ID", caption: VIS.translatedTexts.User1_ID, size: "15%", hidden: !0 }), n.push({ field: "User1", caption: VIS.translatedTexts.User1_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "U2" ? (n.push({ field: "User2_ID", caption: VIS.translatedTexts.User2_ID, size: "15%", hidden: !0 }), n.push({ field: "User2", caption: VIS.translatedTexts.User2_ID, size: "100px", hidden: !1 })) : i[t].elementtype == "X1" ? (n.push({ field: "UserElement1_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement1", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X2" ? (n.push({ field: "UserElement2_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement2", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X3" ? (n.push({ field: "UserElement3_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement3", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X4" ? (n.push({ field: "UserElement4_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement4", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X5" ? (n.push({ field: "UserElement5_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement5", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X6" ? (n.push({ field: "UserElement6_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement6", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X7" ? (n.push({ field: "UserElement7_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement7", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X8" ? (n.push({ field: "UserElement8_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement8", caption: i[t].displaycolumn, size: "100px", hidden: !1 })) : i[t].elementtype == "X9" && (n.push({ field: "UserElement9_ID", caption: i[t].displaycolumn, size: "15%", hidden: !0 }), n.push({ field: "UserElement9", caption: i[t].displaycolumn, size: "100px", hidden: !1 })); b != undefined && b != null && (b.destroy(), b = null); b = dr.w2grid({ name: "postingGrid_" + e.windowNo, show: { toolbar: !1, selectColumn: !1, toolbarReload: !1, toolbarColumns: !0, toolbarSearch: !1, toolbarAdd: !1, toolbarDelete: !1, toolbarSave: !1 }, multiSelect: !0, columns: n, records: [], onChange: function () { }, onSelect: function (n) { n.all && (n.onComplete = function () { }) } }) } function nf() { ft.on("change", function () { pi = ft.val(); pi > 0 ? ft.css("background-color", d(!1)) : ft.css("background-color", d(!0)); rt != null && rt.setValue(null, !1, !0); it != null && (it.prop("selectedIndex", -1), it.css("background-color", d(!0))); c[0].style.visibility = "visible"; gr = t("option:selected", ft).attr("c_currency_id"); li = t("option:selected", ft).attr("stdprecision"); y.empty(); of() }); if (rt.fireValueChanged = ff, nr != null) nr.on(VIS.Events.onTouchStartOrClick, function () { rt.setValue(null, !1, !0) }); rr.on("change", function () { wu = rr.is(":checked"); s() }); hi.on("change", function () { hi.val() != "" ? hi.css("background-color", d(!1)) : hi.css("background-color", d(!0)); s() }); ci.on("change", function () { ci.val() != "" ? ci.css("background-color", d(!1)) : ci.css("background-color", d(!0)); s() }); ou.on("click", function () { if (tt.val() == 0) { VIS.ADialog.info("ValidateOrg"); s(); return } if (l(rt.value)) { VIS.ADialog.info("FRPT_SelectAccount"); s(); return } if (l(it.val())) { VIS.ADialog.info("FRPT_SelectPostingType"); s(); return } if (oi = hi.val(), ei = ci.val(), oi == "" || ei == "") return s(), VIS.ADialog.info("PlsSeldate", !0, "", ""); if (ei != "" && oi > ei) return s(), VIS.ADialog.info("VIS_FromDateGreater", !0, "", ""); af() }); tt.on("change", function () { parseInt(tt.val()) > 0 ? tt.css("background-color", d(!1)) : tt.css("background-color", d(!0)); h.setContext(e.windowNo, "Org_ID", tt.val()); s() }); it.on("change", function () { l(it.val()) ? it.css("background-color", d(!0)) : it.css("background-color", d(!1)); s() }); u.on("change", function () { if (w.clear(), f = [], b.clear(), r = [], u.val() == "0") v = "C_BPartner_ID", nt = 0; else if (u.val() == "AC" || u.val() == "U1" || u.val() == "U2") h.setContext(e.windowNo, "C_Element_ID", t("option:selected", u).attr("c_element_id")), v = "C_ElementValue_ID", nt = 2701; else if (u.val() == "AY") v = "C_Activity_ID", nt = 5820; else if (u.val() == "MC") v = "C_Campaign_ID", nt = 2700; else { if (u.val() == "OO") { v = "AD_Org_ID"; ai = VIS.MLookupFactory.get(h, e.windowNo, 2529, VIS.DisplayType.Search, "AD_Org_ID", 0, !1, "AD_Org.IsSummary='N' AND AD_Org.AD_Org_ID <> 0 AND AD_Org.IsActive='Y' AND AD_Org.IsCostCenter='N' AND AD_Org.IsProfitCenter='N'"); k = new VIS.Controls.VTextBoxButton(v, !0, !1, !0, VIS.DisplayType.Search, ai); pr(t("option:selected", u).text()); return } if (u.val() == "OT") { v = "AD_Org_ID"; ai = VIS.MLookupFactory.get(h, e.windowNo, 2529, VIS.DisplayType.Search, "AD_Org_ID", 0, !1, "AD_Org.IsSummary='N' AND AD_Org.AD_Org_ID <> 0 AND AD_Org.IsActive='Y' AND (AD_Org.IsCostCenter='Y' OR AD_Org.IsProfitCenter='Y') AND CAST(AD_Org.LegalEntityOrg AS INT)=@Org_ID@"); k = new VIS.Controls.VTextBoxButton(v, !0, !1, !0, VIS.DisplayType.Search, ai); pr(t("option:selected", u).text()); return } u.val() == "BP" ? (v = "C_BPartner_ID", nt = 2738) : u.val() == "PJ" ? (v = "C_Project_ID", nt = 2699) : u.val() == "PR" ? (v = "M_Product_ID", nt = 2695) : u.val() == "SR" ? (v = "C_SalesRegion_ID", nt = 2698) : u.val() == "X1" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X2" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X3" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X4" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X5" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X6" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X7" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X8" ? (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) : u.val() == "X9" && (v = t("option:selected", u).attr("column"), nt = t("option:selected", u).attr("ad_column_id")) } ai = VIS.MLookupFactory.getMLookUp(h, e.windowNo, nt, VIS.DisplayType.Search); k = new VIS.Controls.VTextBoxButton(v, !0, !1, !0, VIS.DisplayType.Search, ai); pr(t("option:selected", u).text()); g.val(0) }); p.on("change", function () { w.clear(); f = []; b.clear(); r = []; k.setValue(null); g.val(0) }); g.on("keydown", function (n) { t(this).val().contains(".") && (n.which == 110 || n.which == 190 || n.which == 188) && (this.value = this.value.replace(".", "")); n.which == 9 && t(this).val() == "" && (this.value = 0) }); g.focusout(function () { g.val() != "" && g.val(su.GetFormatedValue(Math.abs(parseFloat(g.val()).toFixed(2)))) }); uu.on("click", function () { var i, n; if (l(u.val())) return VIS.ADialog.error("FRPT_SelectType"), !1; if (l(p.val())) return VIS.ADialog.error("FRPT_SelectBasis"), !1; if (l(k.getValue())) return VIS.ADialog.error("FRPT_SelectElement"), !1; if (l(g.val())) return VIS.ADialog.error("FRPT_SelectValue"), !1; if (i = t.grep(f, function (n) { return n.ElementValue == k.getValue() }), i.length > 0) return VIS.ADialog.error("FRPT_CantSetElement"), k.setValue(null), g.val(0), !1; if (p.val() == "PC") { n = VIS.Utility.Util.getValueOfDecimal(g.val()); for (item in f) n += VIS.Utility.Util.getValueOfDecimal(f[item].Percentage); if (n > 100) return VIS.ADialog.error("FRPT_CantSetPercentage"), k.setValue(null), g.val(0), !1 } else b.clear(), r = []; di = []; f.push({ ElementValue: k.getValue(), ElementName: k.getDisplay(), Percentage: p.val() == "PC" ? VIS.Utility.Util.getValueOfDecimal(g.val()) : 0, Proportional: p.val() == "PR" ? VIS.Utility.Util.getValueOfDecimal(g.val()) : 0 }); fr(); k.setValue(null); g.val(0) }); ru.on("click", function () { var n = w.getSelection(), t, i; if (n != null && n.length != 0) { for (item in n) t = w.get(n[item]).ElementValue, i = f.findIndex(function (n) { return n.ElementValue === t }), f.splice(i, 1); di = []; fr(); b.clear(); r = []; k.setValue(null); g.val(0) } }); fu.on("click", function () { if (f.length == 0) return VIS.ADialog.info("NoDataFound"), !1; if (p.val() == "PC") { var n = 0; for (item in f) n += VIS.Utility.Util.getValueOfDecimal(f[item].Percentage); if (n = VIS.Utility.Util.getValueOfDecimal(n.toFixed(2)), n > 100 || n < 100) return VIS.ADialog.error("FRPT_CantSetPercentage"), !1 } c[0].style.visibility = "visible"; pf(); yf() }); eu.on("click", function () { if (r.length == 0) return VIS.ADialog.info("NoDataFound"), !1; if (ur.val() == null || ur.val() == "") return VIS.ADialog.info("FRPT_SelectDateAcct"), !1; wf() }); cr.on("change", function () { var i = this; c[0].style.visibility = "visible"; window.setTimeout(function () { c[0].style.visibility = "visible"; ki = 1; f = []; r = []; w.clear(); b.clear(); _result = t.parseJSON(n.UploadExcel(i, null, null)); bf(_result); window.setTimeout(function () { c[0].style.visibility = "hidden" }, 400) }, 400) }); hr.on("click", function () { this.value = null }); sr.on("click", function () { if (l(u.val())) return VIS.ADialog.error("FRPT_SelectType"), !1; if (l(p.val())) return VIS.ADialog.error("FRPT_SelectBasis"), !1; cr.trigger("click") }); sr.on("change", function () { if (l(u.val())) return VIS.ADialog.error("FRPT_SelectType"), !1; if (l(p.val())) return VIS.ADialog.error("FRPT_SelectBasis"), !1; hr.trigger("change") }) } function pr(n) { wi.empty(); wi.append("<label>" + n + " <\/label>").append(k.getControl().addClass("frpt-distribution-element")).append(k.getBtn(0).css("width", "30px").css("height", "30px").css("padding", "0px").css("border-color", "#BBBBBB")); wi.find(".frpt-distribution-element").css("width", "calc(100% - 30px)") } function tf() { var r, n; if (i.length > 0) { for (r = null, n = 0; n < i.length; n++)if (btnClearControl = t('<button tabindex="-1" class="vis-controls-txtbtn-table-td2" style="width: 30px; height: 25px; padding: 0px; border-color: #BBBBBB;"><img tabindex="-1" src="' + br + '" title="' + VIS.Msg.getMsg("Clear", !1, !1) + '" elementtype="' + i[n].elementtype + '"><\/button>'), i[n].elementtype == "AC") { h.setWindowContext(e.windowNo, "C_Element_ID", i[n].c_element_id); continue } else i[n].elementtype == "AY" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 5820, VIS.DisplayType.Search), pt = new VIS.Controls.VTextBoxButton("C_Activity_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(pt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(pt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), pt.fireValueChanged = s) : i[n].elementtype == "MC" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2700, VIS.DisplayType.Search), ht = new VIS.Controls.VTextBoxButton("C_Campaign_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ht.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ht.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ht.fireValueChanged = s) : i[n].elementtype == "OT" ? (o = VIS.MLookupFactory.get(h, e.windowNo, 2529, VIS.DisplayType.Search, "AD_Org_ID", 0, !1, "AD_Org.IsSummary='N' AND AD_Org.AD_Org_ID <> 0 AND AD_Org.IsActive='Y' AND (AD_Org.IsCostCenter='Y' OR AD_Org.IsProfitCenter='Y') AND CAST(AD_Org.LegalEntityOrg AS INT) =@Org_ID@"), yt = new VIS.Controls.VTextBoxButton("AD_Org_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(yt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(yt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), yt.fireValueChanged = s) : i[n].elementtype == "BP" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2768, VIS.DisplayType.Search), st = new VIS.Controls.VTextBoxButton("C_BPartner_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(st.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(st.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), st.fireValueChanged = s) : i[n].elementtype == "PJ" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2699, VIS.DisplayType.Search), at = new VIS.Controls.VTextBoxButton("C_Project_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(at.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(at.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), at.fireValueChanged = s) : i[n].elementtype == "PR" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2527, VIS.DisplayType.Search), ot = new VIS.Controls.VTextBoxButton("M_Product_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ot.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ot.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ot.fireValueChanged = s) : i[n].elementtype == "SR" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2698, VIS.DisplayType.Search), vt = new VIS.Controls.VTextBoxButton("C_SalesRegion_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(vt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(vt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), vt.fireValueChanged = s) : i[n].elementtype == "LF" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2530, VIS.DisplayType.Search), ct = new VIS.Controls.VTextBoxButton("C_LocFrom_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ct.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ct.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ct.fireValueChanged = s) : i[n].elementtype == "LT" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2531, VIS.DisplayType.Search), lt = new VIS.Controls.VTextBoxButton("C_LocTo_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(lt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(lt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), lt.fireValueChanged = s) : i[n].elementtype == "U1" ? (h.setContext(e.windowNo, "AcctElement1_ID", i[n].c_element_id), o = VIS.MLookupFactory.get(h, e.windowNo, 2701, VIS.DisplayType.Search, "C_ElementValue_ID", 0, !1, "C_ElementValue.C_Element_ID=@AcctElement1_ID@ AND C_ElementValue.IsActive='Y' AND C_ElementValue.IsSummary='N'"), wt = new VIS.Controls.VTextBoxButton("C_ElementValue_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(wt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(wt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), wt.fireValueChanged = s) : i[n].elementtype == "U2" ? (h.setContext(e.windowNo, "AcctElement2_ID", i[n].c_element_id), o = VIS.MLookupFactory.get(h, e.windowNo, 2701, VIS.DisplayType.Search, "C_ElementValue_ID", 0, !1, "C_ElementValue.C_Element_ID=@AcctElement2_ID@ AND C_ElementValue.IsActive='Y' AND C_ElementValue.IsSummary='N'"), bt = new VIS.Controls.VTextBoxButton("C_ElementValue_ID", !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(bt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(bt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), bt.fireValueChanged = s) : i[n].elementtype == "X1" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), kt = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(kt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(kt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), kt.fireValueChanged = s) : i[n].elementtype == "X2" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), dt = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(dt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(dt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), dt.fireValueChanged = s) : i[n].elementtype == "X3" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), gt = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(gt.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(gt.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), gt.fireValueChanged = s) : i[n].elementtype == "X4" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), ni = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ni.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ni.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ni.fireValueChanged = s) : i[n].elementtype == "X5" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), ti = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ti.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ti.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ti.fireValueChanged = s) : i[n].elementtype == "X6" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), ii = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ii.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ii.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ii.fireValueChanged = s) : i[n].elementtype == "X7" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), ri = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ri.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ri.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ri.fireValueChanged = s) : i[n].elementtype == "X8" ? (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), ui = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(ui.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(ui.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), ui.fireValueChanged = s) : i[n].elementtype == "X9" && (o = VIS.MLookupFactory.getMLookUp(h, e.windowNo, i[n].ad_column_id, VIS.DisplayType.Search), fi = new VIS.Controls.VTextBoxButton(i[n].column, !0, !1, !0, VIS.DisplayType.Search, o), r = t('<div class="frpt-distribution-leftcontrols">'), r.append('<span class="frpt-distribution-inputlabels">' + i[n].name + "<\/span>").append(fi.getControl().addClass("frpt-distribution-element").attr("type", i[n].elementtype)).append(fi.getBtn(0).css("width", "30px").css("height", "26px").css("padding", "0px").css("border-color", "#BBBBBB")).append(btnClearControl), y.append(r), r.find(".frpt-distribution-element").css("width", "calc(100% - 60px)"), fi.fireValueChanged = s); y.find(".vis-controls-txtbtn-table-td2").on(VIS.Events.onTouchStartOrClick, function (n) { var r = t(n.target), i = r.attr("elementtype"); i == "AY" ? pt.setValue(null, !1, !0) : i == "MC" ? ht.setValue(null, !1, !0) : i == "OT" ? yt.setValue(null, !1, !0) : i == "BP" ? st.setValue(null, !1, !0) : i == "PJ" ? at.setValue(null, !1, !0) : i == "PR" ? ot.setValue(null, !1, !0) : i == "SR" ? vt.setValue(null, !1, !0) : i == "LF" ? ct.setValue(null, !1, !0) : i == "LT" ? lt.setValue(null, !1, !0) : i == "U1" ? wt.setValue(null, !1, !0) : i == "U2" ? bt.setValue(null, !1, !0) : i == "X1" ? kt.setValue(null, !1, !0) : i == "X2" ? dt.setValue(null, !1, !0) : i == "X3" ? gt.setValue(null, !1, !0) : i == "X4" ? ni.setValue(null, !1, !0) : i == "X5" ? ti.setValue(null, !1, !0) : i == "X6" ? ii.setValue(null, !1, !0) : i == "X7" ? ri.setValue(null, !1, !0) : i == "X8" ? ui.setValue(null, !1, !0) : i == "X9" && fi.setValue(null, !1, !0) }) } } function rf() { wr = VIS.MLookupFactory.getMLookUp(h, e.windowNo, 2701, VIS.DisplayType.Search); rt = new VIS.Controls.VTextBoxButton("C_ElementValue_ID", !0, !1, !0, VIS.DisplayType.Search, wr); k = new VIS.Controls.VTextBoxButton(v, !0, !1, !0, VIS.DisplayType.Search, ai) } function uf(n) { var i = this; return t.ajax({ url: VIS.Application.contextUrl + "FRPT/GLDistribution/GetAcctSchema", type: "POST", data: { ad_client_id: n }, success: function (n) { var t = JSON.parse(n), i; if (t != null && t.length > 0) { for (ft.empty(), i = 0; i < t.length; i++)ft.append(" <option value=" + t[i].Key + " c_currency_id=" + t[i].C_Currency_ID + " stdprecision=" + t[i].StdPrecision + ">" + VIS.Utility.encodeText(t[i].Name) + "<\/option>"); ft.val(pu); ft.trigger("change") } }, error: function (n) { console.log(n) } }), [] } function ff() { rt.value > 0 ? rt.getControl().css("background-color", d(!1)) : rt.getControl().css("background-color", d(!0)); s() } function ef() { t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/GLDistribution/GetPostingType", dataType: "json", success: function (n) { var i = JSON.parse(n), t; if (i) { for (it.empty(), t = 0; t < i.length; t++)it.append(" <option value=" + i[t].PostingType + ">" + VIS.Utility.encodeText(i[t].Name) + "<\/option>"); it.prop("selectedIndex", -1) } }, error: function (n) { console.log(n) } }) } function d(n) { return n ? "#FFB6C1" : "White" } function of() { t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/GLDistribution/GetElementType", data: { C_AcctSchema_ID: pi }, dataType: "json", success: function (n) { var r = JSON.parse(n), t; if (r) { for (i = [], t = 0; t < r.length; t++)i.push({ elementtype: r[t].Key, name: VIS.Utility.encodeText(r[t].Name), ad_column_id: r[t].AD_Column_ID, column: r[t].Column, c_element_id: r[t].C_Element_ID, displaycolumn: r[t].DisplayColumn }); s(); hu(); cu(); tf(); sf() } }, error: function (n) { console.log(n); c[0].style.visibility = "hidden" } }) } function sf() { t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/GLDistribution/GetInterCompanyAcct", data: { C_AcctSchema_ID: pi }, dataType: "json", success: function (n) { var t = JSON.parse(n); t != null && (nu = t.IsNotPostInterCompany, ar = t.DueFrom_Acct, vr = t.DueTo_Acct, tu = t.DueFrom_Name, iu = t.DueTo_Name, c[0].style.visibility = "hidden") }, error: function (n) { console.log(n); c[0].style.visibility = "hidden" } }) } function hf() { if (u.empty(), u.append("<option value= 0 >Select<\/option>"), i.length > 0) for (var n = 0; n < i.length; n++)u.append(" <option value=" + i[n].elementtype + " ad_column_id = " + i[n].ad_column_id + " column = '" + i[n].column + "' c_element_id = " + i[n].c_element_id + ">" + VIS.Utility.encodeText(i[n].name) + "<\/option>"); u.prop("selectedIndex", 0) } function cf() { p.empty(); p.append("<option value= 0 >Select<\/option>"); p.append("<option value=PC>" + VIS.translatedTexts.Percentage + "<\/option>"); p.append("<option value=PR>" + VIS.translatedTexts.FRPT_Ratio + "<\/option>"); p.prop("selectedIndex", 0) } function lf() { t.ajax({ type: "POST", url: VIS.Application.contextUrl + "FRPT/GLDistribution/GetOrganization", dataType: "json", success: function (n) { var i = JSON.parse(n), t; if (i) for (tt.empty(), tt.css("background-color", d(!0)), tt.append("<option value=0><\/option>"), t = 0; t < i.length; t++)OrgName = VIS.Utility.encodeText(i[t].Name), AD_Org_ID = i[t].Key, tt.append(" <option value=" + AD_Org_ID + ">" + OrgName + "<\/option>"); else tt.append("<option value=0><\/option>"); tt.prop("selectedIndex", 0) }, error: function (n) { console.log(n) } }) } function af() { c[0].style.visibility = "visible"; pageNoInvoice = 1; gridPgnoInvoice = 1; invoiceRecord = 0; isInvoiceGridLoaded = !1; var n = rr.is(":checked"); oi != null && oi != undefined && oi != "" && VIS.DB.to_date(oi); ei != null && ei != undefined && ei != "" && VIS.DB.to_date(ei); vi = []; a = { Account_ID: 0, C_Currency_ID: 0, C_Activity_ID: 0, C_BPartner_ID: 0, C_Campaign_ID: 0, AD_Org_ID: 0, AD_OrgTrx_ID: 0, C_Project_ID: 0, M_Product_ID: 0, C_SalesRegion_ID: 0, C_LocFrom_ID: 0, C_LocTo_ID: 0, PostingType: "", User1_ID: 0, User2_ID: 0, UserElement1_ID: 0, UserElement2_ID: 0, UserElement3_ID: 0, UserElement4_ID: 0, UserElement5_ID: 0, UserElement6_ID: 0, UserElement7_ID: 0, UserElement8_ID: 0, UserElement9_ID: 0 }; a.Account_ID = rt.value; a.AD_Org_ID = tt.val(); a.PostingType = it.val(); a.C_Currency_ID = gr; pt == null || l(pt.getValue()) || (a.C_Activity_ID = pt.getValue()); st == null || l(st.getValue()) || (a.C_BPartner_ID = st.getValue()); ht == null || l(ht.getValue()) || (a.C_Campaign_ID = ht.getValue()); yt == null || l(yt.getValue()) || (a.AD_OrgTrx_ID = yt.getValue()); at == null || l(at.getValue()) || (a.C_Project_ID = at.getValue()); ot == null || l(ot.getValue()) || (a.M_Product_ID = ot.getValue()); vt == null || l(vt.getValue()) || (a.C_SalesRegion_ID = vt.getValue()); ct == null || l(ct.getValue()) || (a.C_LocFrom_ID = ct.getValue()); lt == null || l(lt.getValue()) || (a.C_LocTo_ID = lt.getValue()); wt == null || l(wt.getValue()) || (a.User1_ID = wt.getValue()); bt == null || l(bt.getValue()) || (a.User2_ID = bt.getValue()); kt == null || l(kt.getValue()) || (a.UserElement1_ID = kt.getValue()); dt == null || l(dt.getValue()) || (a.UserElement2_ID = dt.getValue()); gt == null || l(gt.getValue()) || (a.UserElement3_ID = gt.getValue()); ni == null || l(ni.getValue()) || (a.UserElement4_ID = ni.getValue()); ti == null || l(ti.getValue()) || (a.UserElement5_ID = ti.getValue()); ii == null || l(ii.getValue()) || (a.UserElement6_ID = ii.getValue()); ri == null || l(ri.getValue()) || (a.UserElement7_ID = ri.getValue()); ui == null || l(ui.getValue()) || (a.UserElement8_ID = ui.getValue()); fi == null || l(fi.getValue()) || (a.UserElement9_ID = fi.getValue()); t.ajax({ url: VIS.Application.contextUrl + "GLDistribution/GetFactData", data: { C_AcctSchema_ID: pi, ElementData: JSON.stringify(a), ElementType: JSON.stringify(i), fromDate: oi, toDate: ei, chk: n }, type: "POST", dataType: "json", success: function (n) { var t = JSON.parse(n), u, i; if (t != null) { if (t.factData != null && t.factData.length > 0) for (u = 0; u < t.factData.length; u++)vi.push(t.factData[u]); i = t.AmtAcctDr - t.AmtAcctCr; bi = i > 0 ? VIS.Msg.getMsg("Amount") + ": " + VIS.Utility.Util.getValueOfDecimal(i.toFixed(li)).toLocaleString() + " DR" : i < 0 ? VIS.Msg.getMsg("Amount") + ": " + VIS.Utility.Util.getValueOfDecimal(Math.abs(i).toFixed(li)).toLocaleString() + " CR" : VIS.Msg.getMsg("Amount") + ": " + VIS.Env.ZERO.toLocaleString(); yr.text(bi); hf(); cf(); f = []; r = []; k.setValue(null); g.val(0); w.clear(); b.clear() } else s(), VIS.ADialog.info("NoDataFound"); c[0].style.visibility = "hidden" }, error: function (n) { console.log(n); c[0].style.visibility = "hidden" } }) } function s() { bi = VIS.Msg.getMsg("Amount") + ": " + VIS.Env.ZERO.toLocaleString(); yr.text(bi); u.empty(); p.empty(); k.setValue(null); g.val(0); f = []; r = []; w != null && w.clear(); b != null && b.clear() } function vf() { c = t("<div class='vis-busyindicatorouterwrap'><div class='vis-busyindicatorinnerwrap'><i class='vis-busyindicatordiv'><\/i><\/div><\/div>"); c[0].style.visibility = "hidden"; gi.append(c) } function fr() { w.clear(); var n = JSON.stringify(f); n = JSON.parse(n); di = n; w2utils.encodeTags(di); w.add(di); w.selectNone(); ir.find("#grid_distributiongrid_" + e.windowNo + "_records").on("scroll", au) } function yf() { var n = JSON.stringify(r); n = JSON.parse(n); r = n; w2utils.encodeTags(r); b.add(r); b.selectNone() } function l(n) { return n == null || n == 0 ? !0 : !1 } function pf() { var l, h, n, a; if (r = [], b.clear(), l = 0, p.val() == "PR") for (item in f) l += f[item].Proportional; if (vi != null && vi.length > 0) { var i = 0, e = 0, s = 0, o = 0, t = null; for (h = 0; h < vi.length; h++)for (t = JSON.stringify(vi[h]), t = JSON.parse(t), i = t.AmtAcctDr, e = t.AmtAcctCr, i > e ? (s = i - e, o = 0) : (o = e - i, s = 0), r[r.length] = t, r[r.length - 1].AmtAcctCr = s, r[r.length - 1].AmtAcctDr = o, n = 0; n < f.length; n++)t = JSON.stringify(vi[h]), t = JSON.parse(t), p.val() == "PC" ? s > o ? (i = VIS.Utility.Util.getValueOfDecimal((s * f[n].Percentage / 100).toFixed(li)), e = 0) : (e = VIS.Utility.Util.getValueOfDecimal((o * f[n].Percentage / 100).toFixed(li)), i = 0) : s > o ? (i = VIS.Utility.Util.getValueOfDecimal((s * f[n].Proportional / l).toFixed(li)), e = 0) : (e = VIS.Utility.Util.getValueOfDecimal((o * f[n].Proportional / l).toFixed(li)), i = 0), r[r.length] = t, r[r.length - 1].AmtAcctDr = i, r[r.length - 1].AmtAcctCr = e, u.val() == "AC" ? (r[r.length - 1].Account_ID = f[n].ElementValue, r[r.length - 1].Account = f[n].ElementName) : u.val() == "AY" ? (r[r.length - 1].C_Activity_ID = f[n].ElementValue, r[r.length - 1].Activity = f[n].ElementName) : u.val() == "MC" ? (r[r.length - 1].C_Campaign_ID = f[n].ElementValue, r[r.length - 1].Campaign = f[n].ElementName) : u.val() == "OO" ? (r[r.length - 1].AD_Org_ID = f[n].ElementValue, r[r.length - 1].Org = f[n].ElementName) : u.val() == "OT" ? (r[r.length - 1].AD_OrgTrx_ID = f[n].ElementValue, r[r.length - 1].OrgTrx = f[n].ElementName) : u.val() == "BP" ? (r[r.length - 1].C_BPartner_ID = f[n].ElementValue, r[r.length - 1].BPartner = f[n].ElementName) : u.val() == "PJ" ? (r[r.length - 1].C_Project_ID = f[n].ElementValue, r[r.length - 1].Project = f[n].ElementName) : u.val() == "PR" ? (r[r.length - 1].M_Product_ID = f[n].ElementValue, r[r.length - 1].Product = f[n].ElementName) : u.val() == "LF" ? (r[r.length - 1].C_LocFrom_ID = f[n].ElementValue, r[r.length - 1].LocFrom = f[n].ElementName) : u.val() == "LT" ? (r[r.length - 1].C_LocTo_ID = f[n].ElementValue, r[r.length - 1].LocTo = f[n].ElementName) : u.val() == "SA" ? (r[r.length - 1].C_SubAcct_ID = f[n].ElementValue, r[r.length - 1].SubAcct = f[n].ElementName) : u.val() == "SR" ? (r[r.length - 1].C_SalesRegion_ID = f[n].ElementValue, r[r.length - 1].SalesRegion = f[n].ElementName) : u.val() == "U1" ? (r[r.length - 1].User1_ID = f[n].ElementValue, r[r.length - 1].User1 = f[n].ElementName) : u.val() == "U2" ? (r[r.length - 1].User2_ID = f[n].ElementValue, r[r.length - 1].User2 = f[n].ElementName) : u.val() == "X1" ? (r[r.length - 1].UserElement1_ID = f[n].ElementValue, r[r.length - 1].UserElement1 = f[n].ElementName) : u.val() == "X2" ? (r[r.length - 1].UserElement2_ID = f[n].ElementValue, r[r.length - 1].UserElement2 = f[n].ElementName) : u.val() == "X3" ? (r[r.length - 1].UserElement3_ID = f[n].ElementValue, r[r.length - 1].UserElement3 = f[n].ElementName) : u.val() == "X4" ? (r[r.length - 1].UserElement4_ID = f[n].ElementValue, r[r.length - 1].UserElement4 = f[n].ElementName) : u.val() == "X5" ? (r[r.length - 1].UserElement5_ID = f[n].ElementValue, r[r.length - 1].UserElement5 = f[n].ElementName) : u.val() == "X6" ? (r[r.length - 1].UserElement6_ID = f[n].ElementValue, r[r.length - 1].UserElement6 = f[n].ElementName) : u.val() == "X7" ? (r[r.length - 1].UserElement7_ID = f[n].ElementValue, r[r.length - 1].UserElement7 = f[n].ElementName) : u.val() == "X8" ? (r[r.length - 1].UserElement8_ID = f[n].ElementValue, r[r.length - 1].UserElement8 = f[n].ElementName) : u.val() == "X9" && (r[r.length - 1].UserElement9_ID = f[n].ElementValue, r[r.length - 1].UserElement9 = f[n].ElementName); if (u.val() == "OO" && !nu && ar > 0 && vr > 0) { a = Object.values(r.reduce(function (n, t) { var i = t.AD_Org_ID; return n[i] ? (n[i].AmtAcctCr += t.AmtAcctCr, n[i].AmtAcctDr += t.AmtAcctDr) : (n[i] = Object.assign({}, t), n[i].A_Asset_ID = 0, n[i].C_ProjectPhase_ID = 0, n[i].C_ProjectTask_ID = 0, n[i].C_Tax_ID = 0, n[i].C_UOM_ID = 0, n[i].GL_Budget_ID = 0, n[i].GL_Category_ID = 0, n[i].M_Locator_ID = 0, pt != null && (n[i].C_Activity_ID = 0, n[i].Activity = ""), st != null && (n[i].C_BPartner_ID = 0, n[i].BPartner = ""), ht != null && (n[i].C_Campaign_ID = 0, n[i].Campaign = ""), yt != null && (n[i].AD_OrgTrx_ID = 0, n[i].OrgTrx = ""), at != null && (n[i].C_Project_ID = 0, n[i].Project = ""), ot != null && (n[i].M_Product_ID = 0, n[i].Product = ""), vt != null && (n[i].C_SalesRegion_ID = 0, n[i].SalesRegion = ""), ct != null && (n[i].C_LocFrom_ID = 0, n[i].LocFrom = ""), lt != null && (n[i].C_LocTo_ID = 0, n[i].LocTo = ""), wt != null && (n[i].User1_ID = 0, n[i].User1 = ""), bt != null && (n[i].User2_ID = 0, n[i].User2 = ""), kt != null && (n[i].UserElement1_ID = 0, n[i].UserElement1 = ""), dt != null && (n[i].UserElement2_ID = 0, n[i].UserElement2 = ""), gt != null && (n[i].UserElement3_ID = 0, n[i].UserElement3 = ""), ni != null && (n[i].UserElement4_ID = 0, n[i].UserElement4 = ""), ti != null && (n[i].UserElement5_ID = 0, n[i].UserElement5 = ""), ii != null && (n[i].UserElement6_ID = 0, n[i].UserElement6 = ""), ri != null && (n[i].UserElement7_ID = 0, n[i].UserElement7 = ""), ui != null && (n[i].UserElement8_ID = 0, n[i].UserElement8 = ""), fi != null && (n[i].UserElement9_ID = 0, n[i].UserElement9 = "")), n }, {})); for (item in a) t = JSON.stringify(a[item]), t = JSON.parse(t), i = t.AmtAcctDr, e = t.AmtAcctCr, i > e ? (s = i - e, o = 0) : (o = e - i, s = 0), r[r.length] = t, r[r.length - 1].AmtAcctCr = s, r[r.length - 1].AmtAcctDr = o, o > 0 ? (r[r.length - 1].Account_ID = ar, r[r.length - 1].Account = tu) : (r[r.length - 1].Account_ID = vr, r[r.length - 1].Account = iu) } } c[0].style.visibility = "hidden" } function wf() { c[0].style.visibility = "visible"; t.ajax({ url: VIS.Application.contextUrl + "GLDistribution/SaveData", type: "POST", data: { C_AcctSchema_ID: pi, ElementData: JSON.stringify(a), PostingData: JSON.stringify(r), DateAcct: ur.val() }, success: function (n) { n = JSON.parse(n); s(); VIS.ADialog.info(n); c[0].style.visibility = "hidden" }, error: function () { VIS.ADialog.info("", !0, result, ""); c[0].style.visibility = "hidden" } }) } function bf(n) { if (n != null) { if (n._filename == null || n._filename == "" || n._path == null || n._path == "") { VIS.ADialog.info(VIS.Msg.getMsg("FRPT_ErrorInGettingFile"), null, "", ""); c[0].style.visibility = "hidden"; return } if (n._error != null && n._error != "") { VIS.ADialog.info(n._error, null, "", ""); c[0].style.visibility = "hidden"; return } var r = n._path, u = n._filename, i = []; i.push(r); i.push(v); c[0].style.visibility = "visible"; t.ajax({ url: VIS.Application.contextUrl + "FRPT/UploadExcel/GetDataFromExcelOrText", type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: !1, data: JSON.stringify(i), success: function (n) { kf(n) }, error: function () { c[0].style.visibility = "hidden"; VIS.ADialog.info(VIS.Msg.getMsg("error"), null, "", "") } }) } } function kf(n) { n = JSON.parse(n); kr = n; n != null && n.result.length > 0 ? (tr = n.result.length % 50 == 0 ? n.result.length / 50 : Math.ceil(n.result.length / 50), lr = 0, c[0].style.visibility = "visible", lu(lr, tr, ki, n, !1), fr()) : (VIS.ADialog.info("FRPT_ElementNotFound"), c[0].style.visibility = "hidden") } function lu(n, i, r, u, e) { var o, a, h; if (u != null) { var s = r * 50, l = s; if (r == 1 ? (s = 50, l = 0) : i == r ? (l = (r - 1) * 50, s = u.result.length) : (s = r * 50, l = (r - 1) * 50), u.result.length > 0) { for (c[0].style.visibility = "visible", o = l; o < s; o++)if (u.result[o] != undefined) { if (VIS.Utility.Util.getValueOfString(u.result[o].SearchKey) == "") return f = [], VIS.ADialog.info("FRPT_ElementNotFound"), !1; if (VIS.Utility.Util.getValueOfString(u.result[o].ElementValue) == "") return f = [], VIS.ADialog.info("FRPT_ElementNotFound"), !1; if (a = t.grep(f, function (n) { return n.ElementValue == u.result[o].ElementValue }), a.length > 0) return f = [], VIS.ADialog.error("FRPT_CantSetElement"), !1; if (p.val() == "PC") { if (VIS.Utility.Util.getValueOfDecimal(u.result[o].Percentage.toFixed(2)) == 0) continue } else if (VIS.Utility.Util.getValueOfDecimal(u.result[o].Proportional.toFixed(2)) == 0) continue; e = !0; f.push({ ElementValue: u.result[o].ElementValue, ElementName: u.result[o].ElementName, Percentage: p.val() == "PC" ? VIS.Utility.Util.getValueOfDecimal(u.result[o].Percentage.toFixed(2)) : 0, Proportional: p.val() == "PR" ? VIS.Utility.Util.getValueOfDecimal(u.result[o].Proportional.toFixed(2)) : 0 }) } if (p.val() == "PC") { h = 0; for (item in f) h += VIS.Utility.Util.getValueOfDecimal(f[item].Percentage); if (h = VIS.Utility.Util.getValueOfDecimal(h.toFixed(2)), h > 100) return f = [], VIS.ADialog.error("FRPT_CantSetPercentage"), !1 } e && ki++ } } } function au() { t(this).scrollTop() > 0 && t(this).scrollTop() + t(this).innerHeight() >= this.scrollHeight && ki <= tr && (c[0].style.visibility = "visible", lu(lr, tr, ki, kr, !1), fr(), c[0].style.visibility = "hidden") } var su; this.frame = null; this.windowNo = 0; var h = VIS.Env.getCtx(), gi = t('<div class="frpt-distribution-root vis-forms-container">'), er = t('<div class="frpt-leftpanel-wrapper">'), ut = t('<div class="frpt-distribution-leftcontainer">'), or = t('<div class="frpt-distribution-rightcontainer">'), et = t('<div class="frpt-distribution-inputlabels" style="display:flex;">'), yi = t('<div class="frpt-distribution-div">'), si = t('<div class="frpt-posting-div" >'), vu = t("<div >"), y = null, yu = h.getAD_Client_ID(), ft = t('<select class="frpt-distribution-schemacmb" ><\/select>'), tt = null, wr = null, rt = null, br = VIS.Application.contextUrl + "Areas/VIS/Images/clear16.png", nr = null, it = t('<select class="frpt-distribution-schemacmb" ><\/select>'), ot = null, st = null, ht = null, ct = null, lt = null, at = null, vt = null, yt = null, pt = null, wt = null, bt = null, kt = null, dt = null, gt = null, ni = null, ti = null, ii = null, ri = null, ui = null, fi = null, o = null, u = null, p = null, g = null, sr = null, hr = null, cr = null, lr = 0, tr = 0, ki = 1, kr = null, hi, ci, oi, ei = null, ir = null, dr = null, w = null, b = null, rr = null, pi = 0, gr = 0, li = 2, pu = h.getContextAsInt("$C_AcctSchema_ID"), nu = !0, ar = 0, vr = 0, tu = "", iu = "", wu = !1, wi = null, v = "C_BPartner_ID", nt = 0, ai = null, k = null, yr = null, ru = null, uu = null, fu = null, eu = null, ur = null, a = {}, i = [], di = [], f = [], vi = [], r = [], ou = null, c = null, e = this, bi = null; VIS.translatedTexts = VIS.Msg.translate(h, ["AD_Org_ID", "AD_OrgTrx_ID", "PostingType", "AccountingSchema", "Account_ID", "C_BPartner_ID", "M_Product_ID", "FRPT_AnyElement", "AccountElement", "Percentage", "FRPT_Ratio", "AmtAcctCr", "AmtAcctDr", "Activity", "FRPT_Campaign", "Project", "C_SalesRegion_ID", "C_LocFrom_ID", "C_LocTo_ID", "User1_ID", "User2_ID", "UserElement1_ID", "UserElement2_ID", "UserElement3_ID", "UserElement4_ID", "UserElement5_ID", "UserElement6_ID", "UserElement7_ID", "UserElement8_ID", "UserElement9_ID", "DateAcct", "DateTrx"], !0); su = VIS.DisplayType.GetNumberFormat("Amount"); this.initialize = function () { uf(yu); ef(); rf(); bu(); ku(); du(); gu(); or.append(et).append(yi).append(si).append(vu); lf(); ft.css("background-color", d(!0)); rt.getControl().css("background-color", d(!0)); it.css("background-color", d(!0)); hi.css("background-color", d(!0)); ci.css("background-color", d(!0)); er.resizable({ handles: "e", minWidth: 226, maxWidth: 600, resize: function (n, i) { var r = i.size.width; r > 197 && or.width(t(document).width() - (r + 40)) } }); var n = t('<div style="padding-right: 15px;">'); n.append(' <a class="vis-group-btn vis-group-create vis-group-grayBtn" style="float: right;">' + VIS.Msg.getMsg("OK") + "<\/a>"); gi.append(er.append(ut).append(n)).append(or); ou = er.find(".vis-group-btn"); vf(); nf(); gi.find(".frpt-distribution-resultdiv").css({ width: "100%", margin: "0", bottom: "0", position: "inherit" }); hu(); cu(); c[0].style.visibility = "hidden" }; this.disposeComponent = function () { w != undefined && w != null && (w.destroy(), w = null); b != undefined && b != null && (b.destroy(), b = null) }; this.getRoot = function () { return gi } } i.prototype.init = function (n, t) { this.frame = t; this.windowNo = n; this.initialize(); this.frame.getContentGrid().append(this.getRoot()) }; i.prototype.dispose = function () { this.disposeComponent(); this.frame && this.frame.dispose(); this.frame = null }; n.GLDistribution = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { n.UploadExcel = function (i, r, u) { function ut(n) { for (u.children().remove(), j = 0; j < n.ExcelCol.length; j++)j == 1 ? u.append("<li index=" + j + " style='border:none;float:none' >" + n.ExcelCol[j] + "<\/li>") : u.append("<li index=" + j + " >" + n.ExcelCol[j] + "<\/li>") } var k = null, f = [], c = [], l = 0, o = 0, a = Date.now().toString(), s = 1048576, v = 0, h = 0, p = [], e = null, nt = i, ft = t(window).width(), et = t(window).height(), a = Date.now().toString(), ot = r; savedFileName = ""; var d = t("<div id='progress_bar' class='vis-ui-progress-bar vis-ui-container' style='top:40%;width: 40%;left: 32%;position:absolute;z-index:99999;'>"), w = null, b = null; this.isWait = !1; self = this; var tt = function () { var n = null, t = 0; for (var i in f) t = parseInt(f[i].size / s), e.size % s > 0 && t++, v += t, n = {}, n.Name = f[i].name, n.Size = f[i].size, p.push(n); g() }, g = function () { var t; if (f == null || f.length == 0) { y(!1); return } if (!(o >= f.length)) { var n = new XMLHttpRequest, i = new FormData, r = f[o].name.substring(0, f[o].name.lastIndexOf(".")) + a + f[o].name.substring(f[o].name.lastIndexOf(".")); savedFileName = r; i.append("file", f[o].slice(h * s, h * s + Number(s))); n.open("POST", VIS.Application.contextUrl + "FRPT/UploadExcel/SaveFileinTemp?fileName=" + r + "&folderKey=" + a + "&orgFileName=" + f[o].name, !1); n.send(i); k = n.responseText; l++; h++; t = parseInt(f[o].size / s); f[o].size % s > 0 && t++; h == t && (o++, h = 0); l <= v && rt(parseInt(l / v * 80)); window.setTimeout(function () { g() }, 2) } }, it = function (n) { for (var i, w, r, b, t = [], u = 0; u < n.files.length; u++) { if (e = n.files[u], e == undefined) return; if (e.size <= 0) return f = [], c = [], l = 0, o = 0, a = null, s = null, v = 0, h = 0, p = [], e = null, VIS.ADialog.info("VADMS_FileSizeShouldGreaterThan0KB"), y(!1), !1; if (e.name.indexOf("&") > -1 || e.name.indexOf("?") > -1 || e.name.indexOf("#") > -1 || e.name.indexOf("/") > -1 || e.name.indexOf("\\") > -1) { t.push(e.name); continue } for (i in f) if (e.name == f[i].name) { window.setTimeout(function () { y(!1); VIS.ADialog.info("fileAlreadyAttached") }, 20); return } if (c != null) for (i in c) if (e.name == c[i].Name && !c[i].IsDeleted) { window.setTimeout(function () { y(!1); VIS.ADialog.info("fileAlreadyAttached") }, 20); return } w = {}; w.Name = e.name; w.Size = e.size; f.push(e) } if (t.length > 0) { r = ""; for (b in t) r += t[b].toString() + "\n"; r += t.length == 1 ? "File has" : "Files have"; r += " invalid name. Please change the file name and try again."; y(!1); VIS.ADialog.info("", !0, r) } }, y = function (n) { if (t("body").find("#progressbar").remove(), n) { w = t("<div class='vis-ui-progress' style='width: 0%; display: block;position:absolute;height: 35px;'>"); b = t("<span class='vis-ui-label'  style='position:absolute;left: 60%;top: 4px;'>").append("0%"); w.append(b); d.append(w); var i = t("<div id='progressbar' style='z-index: 999999;' class='vadms-Busy-Progress'><\/div>"); i.append(d); i.appendTo("<body>") } else t("body").find("progressbar").remove() }, rt = function (n) { w.css("width", n + "%"); b.empty(); b.append(n + "%") }; return this.getFolderKey = a, this.getSavedFileName = savedFileName, this.GetUploadedExcelColumns = function () { var t, u, i; if (o >= f.length) return t = [], u = VIS.Application.contextUrl + "FRPT/UploadExcel/SaveAttachmentEntries", t.push({ Files: JSON.stringify(p) }), t.push({ FolderKey: a }), t.push({ FileName: savedFileName }), t.push({ Mapping: r }), i = n.ControllerRequestAjaxParameter1(u, t, !1), r.ExcelCol = i.ExcelCol, r.FileName = i.FileName, ut(i), i }, y(!0), it(i), tt(), k } }(FRPT, jQuery), function (n, t) { function i() { function e() { n = t("<div class='vis-apanel-busy' style='height:96%; width:98%;'><\/div>"); n[0].style.visibility = "hidden"; i.append(n) } this.frame = null; this.windowNo = 0; var r = this, i = t('<div class="vis-forms-container">'), n = null, u, f = null; this.initialize = function () { e(); n[0].style.visibility = "visible"; var s = Number(VIS.context.getWindowTabContext(this.windowNo, 0, "AD_Client_ID")), h = Number(VIS.context.getWindowTabContext(this.windowNo, 0, "AD_Org_ID")), o = VIS.context.getWindowContextAsInt(this.windowNo, "C_DocTypeTarget_ID", !0); o <= 0 && (o = Number(VIS.context.getWindowTabContext(this.windowNo, 0, "C_DocType_ID"))); t.ajax({ url: VIS.Application.contextUrl + "FRPT/PostingLogicFRPT/VerifyPostImediateFRPT", dataType: "json", async: !0, data: { AD_Client_ID: s, AD_Table_ID: this.frame.getAD_Table_ID(), Record_ID: this.frame.getRecord_ID(), force: !0, OrgID: h, AD_Window_ID: this.frame.getAD_Window_ID(), DocTypeID: o }, error: function () { n[0].style.visibility = "hidden"; VIS.ADialog.info(VIS.Msg.getMsg("ERRORGettingPostingViewer")) }, success: function (t) { t.result && (i.append(t.result), n[0].style.visibility = "hidden") } }); u = "<div class='frpt-rp-exportbtn'><input class='frpt-inputBtn mb-2' id='btnImport_" + r.windowNo + "' type='button' value=" + VIS.Msg.getMsg("FRPT_ExportExcel") + "><\/div>"; i.append(u); f = i.find("#btnImport_" + r.windowNo); f.on(VIS.Events.onTouchStartOrClick, function () { var i = document.getElementsByClassName("tblExcel"), n, r, u; i != null && i.length > 0 ? (n = "", t.each(i, function (t) { for (t > 0 && (n += "<br/>"), n += "<table><caption align='left'>" + document.getElementsByClassName("SName")[t].innerHTML + "<\/caption><tr>", j = 0; j < i[t].rows.length; j++)n += i[t].rows[j].innerHTML + "<\/tr>"; n += "<\/table>" }), r = document.createElement("A"), xData = new Blob([n], { type: "text/csv" }), u = URL.createObjectURL(xData), r.href = u, r.download = VIS.Msg.getMsg("FRPT_AccountViewer") + ".xls", r.click()) : VIS.ADialog.info(VIS.Msg.getMsg("FRPT_ExcelError")) }) }; this.disposeComponent = function () { }; this.getRoot = function () { return i } } i.prototype.init = function (n, t) { this.frame = t; this.windowNo = n; this.initialize(); this.frame.getContentGrid().append(this.getRoot()) }; i.prototype.dispose = function () { this.disposeComponent(); this.frame = null; btnImportExcel = null; btnimport = null }; n.VerifyPosting = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i() { function fi() { it = t('<div class="FRPT-outerMainDiv vis-formouterwrpdiv vis-app-aform-root">'); r.append(it); b = t('<div  class="FRPT-maindiv-content" id="FRPT_MainDiv" style="height:100%;">'); k = t('<div class="FRPT-contentOuterWrap vis-pSelectIionGrid">'); it.append(b); et = t('<div class="FRPT-Footer"><\/div>'); b.append('<div class="vis-pSelectInfo vis-leftsidebarouterwrap"  style="height:100%;"><div class="vis-pSelectInner"><div class="FRPT-formField input-group vis-input-wrap"><div class="vis-control-wrap" id="FRPT_CmbActSchema_' + n.windowNo + '"><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_AccountingSchema") + '<\/label><\/div><\/div><div class="FRPT-formField input-group vis-input-wrap"><div class="vis-control-wrap"  id="FRPT_CmbOrg_' + n.windowNo + '"><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_Organization") + '<\/label><\/div><\/div><div class="FRPT-formField input-group vis-input-wrap"><div class="vis-control-wrap"  id="FRPT_CmbRevdate_' + n.windowNo + '"><input class="FRPT-RevDate vis-ev-col-mandatory" type="Date"><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_Revaluationdate") + '<\/label><\/div><\/div><div class="FRPT-formField input-group vis-input-wrap"><div class="vis-control-wrap"  id="FRPT_CmbCurrType_' + n.windowNo + '"><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_CurrencyType") + '<\/label><\/div><\/div><div class="FRPT-formField input-group" style="margin-top: 0"><div class="FRPT-leftcheckboxWrap"  id="FRPT_CmbGLBlnc_' + n.windowNo + '"><input class="FRPT-GLCheckbox" type="checkbox"><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_GLBalances") + '<\/label><\/div><\/div> <\/div><div class="FRPT-formField input-group vis-input-wrap" id="FRPT_CalBtn_' + n.windowNo + '"><button class="FRPT-Calculate-Btn VIS_Pref_btn-2" id="FRPT_CalculateBtn_' + n.windowNo + '" style="margin-top: 0px;">' + VIS.Msg.getMsg("FRPT_Calculate") + "<\/button><\/div><\/div>"); b.append(k); k.append('<div class="FRPT-contentpart"><div class="FRPT-gridWrapper" id="FRPT_FxCurrRevGrid_' + n.windowNo + '" style="    height: 100% ;padding-bottom:10px; "><\/div> <\/div > '); et.append('<div class="FRPT-formField input-group vis-input-wrap"><div class="vis-control-wrap"  id="FRPT_CmbDocStatus_' + n.windowNo + '" ><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_DocStatus") + '<\/label><\/div><\/div><div class="FRPT-formField input-group vis-input-wrap"><div class="vis-control-wrap"  id="FRPT_CmbDocType_' + n.windowNo + '"><label class="FRPT-label-top">' + VIS.Msg.getMsg("FRPT_DocType") + '<\/label><\/div><\/div><div class="FRPT-formField input-group"  id="FRPT_ProBtn_' + n.windowNo + '"><button class="FRPT-Process-Btn VIS_Pref_btn-2" id="FRPT_ProcessBtn_' + n.windowNo + '" style="margin-top: 0px;">' + VIS.Msg.getMsg("FRPT_Process") + '<\/button><\/div><button class="FRPT-btn-refresh VIS_Pref_btn-2" id="FRPT_Print_' + n.windowNo + '" title="' + VIS.Msg.getMsg("FRPT_Print") + '"><i class="fa fa-print"><\/i><\/button><button class="FRPT-btn-refresh VIS_Pref_btn-2 FRPT-Excel-Button-LeftMargin" id="FRPT_Excel_' + n.windowNo + '" title="' + VIS.Msg.getMsg("FRPT_DownloadExcel") + '"><i class="fa fa-file-excel-o"><\/i><\/button>'); k.append(et); k.append('<div class="FRPT-gridbottom" id="FRPT_bottomdiv_' + n.windowNo + '" style="float: right; padding-bottom: 10px; margin-top: 10px;"><\/div>'); oi() } function ei() { var r, t, i; wt = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 8051, VIS.DisplayType.TableDir, "C_AcctSchema_ID", 0, !1, "C_AcctSchema.IsActive='Y'"); e = new VIS.Controls.VComboBox("C_AcctSchema_ID", !0, !1, !0, wt, 50); ht.prepend(e.getControl()); pt = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 8052, VIS.DisplayType.TableDir, "AD_Org_ID", 0, !1, "AD_Org.AD_Org_ID<>0 AND AD_Org.IsOrgUnit='N' AND AD_Org.IsSummary='N'"); o = new VIS.Controls.VComboBox("AD_Org_ID", !0, !1, !0, pt, 50); st.prepend(o.getControl()); bt = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 8053, VIS.DisplayType.TableDir, "C_ConversionType_ID", 0, !1, "C_ConversionType.IsActive='Y'"); s = new VIS.Controls.VComboBox("C_ConversionType_ID", !0, !1, !0, bt, 50); ct.prepend(s.getControl()); r = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ForeignCurrencyrevaluation/GetReference"); kt = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 0, VIS.DisplayType.List, "DocStatus", r, !1, "AD_Ref_List.Value IN('CO','DR')"); g = new VIS.Controls.VComboBox("DocStatus", !0, !1, !0, kt, 50); at.prepend(g.getControl()); t = !1; i = VIS.dataContext.getJSONRecord("ModulePrefix/GetModulePrefix", "VA028_"); i != null && (t = i.VA028_); rt = t ? VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 8055, VIS.DisplayType.TableDir, "C_DocType_ID", 0, !1, "C_DocType.IsActive='Y' AND C_DocType.DocBaseType IN('GLJ') AND VA028_IsBatchDoc='N'") : VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 8055, VIS.DisplayType.TableDir, "C_DocType_ID", 0, !1, "C_DocType.IsActive='Y' AND C_DocType.DocBaseType IN('GLJ')"); d = new VIS.Controls.VComboBox("C_DocType_ID", !0, !1, !0, rt, 50); lt.prepend(d.getControl()); dt = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 0, VIS.DisplayType.TableDir, "C_BPartner_ID", 0, !1, "C_BPartner.IsActive='Y' "); gt = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 0, VIS.DisplayType.TableDir, "C_Currency_ID", 0, !1, "C_Currency.IsActive='Y' "); ni = VIS.MLookupFactory.get(VIS.Env.getCtx(), n.windowNo, 0, VIS.DisplayType.TableDir, "C_ElementValue_ID", 0, !1, "C_ElementValue.IsActive='Y' ") } function oi() { ut = t('<div class="vis-info-pagingwrp" style="text-align: right; flex: 1;">'); ft = t('<ul class="vis-statusbar-ul">'); a = t('<li style="opacity: 1;"><div><i class="vis vis-shiftleft" title="' + VIS.Msg.getMsg("FirstPage") + '" style="opacity: 0.6;"><\/i><\/div><\/li>'); v = t('<li style="opacity: 1;"><div><i class="vis vis-pageup" title="' + VIS.Msg.getMsg("PageUp") + '" style="opacity: 0.6;"><\/i><\/div><\/li>'); u = t("<select>"); vt = t("<li>").append(u); y = t('<li style="opacity: 1;"><div><i class="vis vis-pagedown" title="' + VIS.Msg.getMsg("PageDown") + '" style="opacity: 0.6;"><\/i><\/div><\/li>'); p = t('<li style="opacity: 1;"><div><i class="vis vis-shiftright" title="' + VIS.Msg.getMsg("LastPage") + '" style="opacity: 0.6;"><\/i><\/div><\/li>'); ft.append(a).append(v).append(vt).append(y).append(p); ut.append(ft); ai() } function si() { yi(); $BusyIndicator[0].style.visibility = "visible"; st = r.find("#FRPT_CmbOrg_" + n.windowNo); ht = r.find("#FRPT_CmbActSchema_" + n.windowNo); ct = r.find("#FRPT_CmbCurrType_" + n.windowNo); ot = r.find("#FRPT_FxCurrRevGrid_" + n.windowNo); at = r.find("#FRPT_CmbDocStatus_" + n.windowNo); lt = r.find("#FRPT_CmbDocType_" + n.windowNo); l = r.find(".FRPT-RevDate"); ti = r.find("#FRPT_CalculateBtn_" + n.windowNo); ii = r.find("#FRPT_ProcessBtn_" + n.windowNo); PrintBtn = r.find("#FRPT_Print_" + n.windowNo); ri = r.find("#FRPT_Excel_" + n.windowNo); yt = r.find("#FRPT_bottomdiv_" + n.windowNo); nt = r.find(".FRPT-GLCheckbox"); ei(); $BusyIndicator[0].style.visibility = "hidden"; ti.on(VIS.Events.onTouchStartOrClick, function () { if (e.getValue() == null) return VIS.ADialog.error("FRPT_SelectAcctAschema"), !1; if (o.getValue() == null) return VIS.ADialog.error("FRPT_SelectOrg"), !1; if (s.getValue() == null) return VIS.ADialog.error("FRPT_SelectConversionType"), !1; if (l.val() == "") return VIS.ADialog.error("FRPT_SelectRevdate"), !1; w(ui) }); ii.on(VIS.Events.onTouchStartOrClick, function () { if (c.records.length > 0) { if (g.getValue() == null) return VIS.ADialog.error("FRPT_SelectDocStatus"), fasle; if (d.getValue() == null) return VIS.ADialog.error("FRPT_SelectDocType"), !1; li() } else return VIS.ADialog.error("FRPT_CalculateFirst"), fasle }); PrintBtn.on(VIS.Events.onTouchStartOrClick, function () { if (e.getValue() == null) return VIS.ADialog.error("FRPT_SelectAcctAschema"), !1; if (o.getValue() == null) return VIS.ADialog.error("FRPT_SelectDocType"), !1; if (s.getValue() == null) return VIS.ADialog.error("FRPT_SelectConversionType"), !1; if (l.val() == "") return VIS.ADialog.error("FRPT_SelectRevdate"), !1; $BusyIndicator[0].style.visibility = "visible"; t.ajax({ url: VIS.Application.contextUrl + "ForeignCurrencyRevaluation/PrintReport", dataType: "json", data: { Org_ID: o.getValue(), AcctSchema_ID: e.getValue(), Conversion_ID: s.getValue(), Revaluationdate: l.val(), Glbalance: nt.is(":checked") }, success: function (t) { var i, r; t != null && (t = JSON.parse(t), i = t.split(";"), i && i.length > 2 && (r = new VIS.APrint(i[0], i[1], i[2], n.windowNo, null), r.startPdf())); $BusyIndicator[0].style.visibility = "hidden" }, error: function () { $BusyIndicator[0].style.visibility = "hidden" } }) }); ri.on(VIS.Events.onTouchStartOrClick, function () { if (e.getValue() == null) return VIS.ADialog.error("FRPT_SelectAcctAschema"), !1; if (o.getValue() == null) return VIS.ADialog.error("FRPT_SelectDocType"), !1; if (s.getValue() == null) return VIS.ADialog.error("FRPT_SelectConversionType"), !1; if (l.val() == "") return VIS.ADialog.error("FRPT_SelectRevdate"), !1; $BusyIndicator[0].style.visibility = "visible"; t.ajax({ url: VIS.Application.contextUrl + "ForeignCurrencyRevaluation/DownloadExcelReport", dataType: "json", type: "GET", data: { Org_ID: o.getValue(), AcctSchema_ID: e.getValue(), Conversion_ID: s.getValue(), Revaluationdate: l.val(), Glbalance: nt.is(":checked") }, success: function (n) { if (n != null) { var i = new Uint8Array(n.FileContents), r = new Blob([i], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" }), t = document.createElement("a"); t.href = window.URL.createObjectURL(r); t.download = n.FileDownloadName; t.click() } $BusyIndicator[0].style.visibility = "hidden" }, error: function () { $BusyIndicator[0].style.visibility = "hidden" } }) }); e.fireValueChanged = function () { h = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ForeignCurrencyrevaluation/GetPrecision", { AcctSchema_ID: tt.getValueOfInt(e.getValue()) }) } } function w(n) { $BusyIndicator[0].style.visibility = "visible"; VIS.dataContext.getJSONData(VIS.Application.contextUrl + "ForeignCurrencyRevaluation/GetGridData", { Org_ID: tt.getValueOfInt(o.getValue()), AcctSchema_ID: tt.getValueOfInt(e.getValue()), Conversion_ID: tt.getValueOfInt(s.getValue()), Revaluationdate: l.val(), PageNo: n, Glbalance: nt.is(":checked"), IsShowGrid: !0, IsGenerateJournal: !1, IsPrintReport: !1 }, hi) } function hi(n) { n.GridData != null ? (c.clear(), c.add(n.GridData), yt.append(ut), ci(n.PSetting), n.Msg != null && VIS.ADialog.info("", "", n.Msg.Msg)) : (c.clear(), VIS.ADialog.info("FRPT_Norecord")); $BusyIndicator[0].style.visibility = "hidden" } function ci(n) { if (n != null) if (u.empty(), n.TotalPage > 0) { for (var i = 0; i < n.TotalPage; i++)u.append(t("<option value=" + (i + 1) + ">" + (i + 1) + "<\/option>")); u.val(n.CurrentPage); n.TotalPage > n.CurrentPage ? (y.css("opacity", "1"), p.css("opacity", "1")) : (y.css("opacity", "0.6"), p.css("opacity", "0.6")); n.CurrentPage > 1 ? (a.css("opacity", "1"), v.css("opacity", "1")) : (a.css("opacity", "0.6"), v.css("opacity", "0.6")); n.TotalPage == 1 && (a.css("opacity", "0.6"), v.css("opacity", "0.6"), y.css("opacity", "0.6"), p.css("opacity", "0.6")) } else a.css("opacity", "0.6"), v.css("opacity", "0.6"), y.css("opacity", "0.6"), p.css("opacity", "0.6") } function li() { $BusyIndicator[0].style.visibility = "visible"; t.ajax({ url: VIS.Application.contextUrl + "ForeignCurrencyRevaluation/CreateJournal", type: "POST", dataType: "json", data: { Org_ID: o.getValue(), AcctSchema_ID: e.getValue(), Conversion_ID: s.getValue(), DocType: d.getValue(), DocStatus: g.getValue(), Revaluationdate: l.val(), Glbalance: nt.is(":checked") }, success: function (n) { VIS.ADialog.info(JSON.parse(n), !0, ""); $BusyIndicator[0].style.visibility = "hidden" }, error: function (n) { console.log(n); $BusyIndicator[0].style.visibility = "hidden"; VIS.ADialog.error("Error") } }) } function ai() { a.on("click", function () { t(this).css("opacity") == "1" && ($BusyIndicator[0].style.visibility = "visible", w(1), u.val(parseInt(1))) }); v.on("click", function () { t(this).css("opacity") == "1" && ($BusyIndicator[0].style.visibility = "visible", w(parseInt(u.val()) - 1), u.val(parseInt(u.val()) - 1)) }); y.on("click", function () { t(this).css("opacity") == "1" && ($BusyIndicator[0].style.visibility = "visible", w(parseInt(u.val()) + 1), u.val(parseInt(u.val()) + 1)) }); p.on("click", function () { t(this).css("opacity") == "1" && ($BusyIndicator[0].style.visibility = "visible", w(parseInt(u.find("Option:last").val())), u.val(parseInt(u.find("Option:last").val()))) }); u.on("change", function () { $BusyIndicator[0].style.visibility = "visible"; w(u.val()) }) } function vi() { fi(); si() } function yi() { $BusyIndicator = t('<div class="vis-busyindicatorouterwrap"><div class="vis-busyindicatorinnerwrap"><i class="vis-busyindicatordiv"><\/i><\/div><\/div>'); $BusyIndicator[0].style.visibility = "hidden"; r.append($BusyIndicator) } this.frame; this.windowNo; var n = this, tt = VIS.Utility.Util, r = t("<div style='height: 100%;'>"), it = null, b = null, k = null, ut = null, ft = null, a = null, v = null, u = null, vt = null, y = null, p = null, yt = null, et = null, f = [], ot = null, c = null, pt = null, o = null, st = null, wt = null, e = null, ht = null, bt = null, s = null, ct = null, rt = null, d = null, lt = null, kt = null, g = null, dt = null, gt = null, ni = null, at = null, l = null, ti = null, ii = null, nt = null, ui = 1, h = 2, ri = null; this.LoadGrid = function () { f.length == 0 && (f.push({ field: "BusinessPartner", caption: VIS.Msg.getMsg("FRPT_BusinessPartner"), sortable: !1, size: "20%", render: function (n) { var t = dt, i = n.BusinessPartner, r; return i == 0 ? "-" : (t && (r = t.getDisplay(i)), r) } }), f.push({ field: "DocumentType", caption: VIS.Msg.getMsg("FRPT_DocumentType"), sortable: !1, size: "20%", render: function (n) { var i = rt, t = n.DocumentType, r; return t == -1 ? VIS.Msg.getMsg("FRPT_CashBookBalance") : t == 0 ? VIS.Msg.getMsg("FRPT_BankBalance") : t == -2 ? VIS.Msg.getMsg("FRPT_GLBalance") : (i && (r = i.getDisplay(t)), r) } }), f.push({ field: "DocumentNo", caption: VIS.Msg.getMsg("FRPT_DocumentNo"), sortable: !1, size: "20%", render: function (n) { var t = n.DocumentNo; return t.equals("") && (t = "-"), t } }), f.push({ field: "Account_ID", caption: VIS.Msg.getMsg("FRPT_LedgerCode"), sortable: !1, size: "20%", render: function (n) { var t = ni, r = n.Account_ID, i; return t && (i = t.getDisplay(r)), i } }), f.push({ field: "DocumentDate", caption: VIS.Msg.getMsg("FRPT_DocumentDate"), sortable: !1, size: "20%", render: function (n) { var t = n.DocumentDate; return t == null ? "-" : new Date(t).toLocaleDateString() } }), f.push({ field: "ForeignCurrency", caption: VIS.Msg.getMsg("FRPT_ForeignCurrency"), sortable: !1, size: "20%", render: function (n) { var t = gt, r = n.ForeignCurrency, i; return t && (i = t.getDisplay(r)), i } }), f.push({ field: "AmtInFCurrency", caption: VIS.Msg.getMsg("FRPT_AmtInFCurrency"), sortable: !1, size: "20%", attr: "align=right", render: function (n) { var t = n.AmtInFCurrency.toFixed(h); return parseFloat(t).toLocaleString(undefined, { minimumFractionDigits: h }) } }), f.push({ field: "AmtInRepCurrency", caption: VIS.Msg.getMsg("FRPT_AmtInRepCurrency"), sortable: !1, size: "20%", attr: "align=right", render: function (n) { var t = n.AmtInRepCurrency.toFixed(h); return parseFloat(t).toLocaleString(undefined, { minimumFractionDigits: h }) } }), f.push({ field: "ConvertedAmt", caption: VIS.Msg.getMsg("FRPT_ConvertedAmt"), sortable: !1, size: "20%", attr: "align=right", render: function (n) { var t = n.ConvertedAmt.toFixed(h); return parseFloat(t).toLocaleString(undefined, { minimumFractionDigits: h }) } }), f.push({ field: "Difference", caption: VIS.Msg.getMsg("FRPT_Difference"), sortable: !1, size: "20%", attr: "align=right", render: function (n) { var t = n.Difference.toFixed(h); return parseFloat(t).toLocaleString(undefined, { minimumFractionDigits: h }) } })); c = ot.w2grid({ name: "FxRevGrid" + n.windowNo, recordHeight: 25, columns: f, show: { toolbar: !1, lineNumbers: !0 } }) }; this.getRoot = function () { return r }; this.SetHeight = function () { var n = t(window).height(); r.css("height", n - 66) }; this.disposeComponent = function () { n = null; r = null; b = null; it = null; st = null; o = null; g = null; d = null; e = null; s = null; ct = null; at = null; ht = null; lt = null; _data = null; ot = null; c != null && c.destroy(); c = null }; i.prototype.dispose = function () { this.disposeComponent(); this.frame && this.frame.dispose(); this.frame = null }; this.Initialize = function () { vi() }; i.prototype.init = function (n, t) { this.frame = t; this.windowNo = n; var i = this.Initialize(); this.frame.getContentGrid().append(this.getRoot()); this.LoadGrid() } } n.ForeignCurrencyRevaluation = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function i(n, r, u) { function h() { c() } function c() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/ViewFormulaDetail", async: !1, data: { reportID: o, reportLineID: s }, success: function (n) { var t = JSON.parse(n); t && f.append(t) }, error: function () { } }) } var o = r, s = u, f = t('<div class="vis-forms-container">'), e; h(); e = this; this.dispose = function () { f.remove(); f = null }; this.getRoot = function () { return f }; i.prototype.show = function () { var n = new VIS.ChildDialog; n.setContent(this.getRoot()); n.setTitle(VIS.Msg.getMsg("FRPT_ViewFormula")); n.setEnableResize(!1); n.setHeight(400); n.setWidth(600); n.setModal(!0); n.show(); n.hidebuttons(); n.onClose = function () { e.dispose() } } } n.AForms.ViewFormula = i }(FRPT, jQuery); FRPT = window.FRPT || {}, function (n, t) { function u(n, f, e, o, s) { function d() { var n, u; l.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(t('<div class= "vis-control-wrap">').append(c).append(' <label class="frpt-mandatory-star">' + VIS.Msg.getMsg("FRPT_PostingType") + " <\/label>"))); var n = t("<div class='vis-control-wrap'>"), r = t("<div class='input-group-append'>"), f = VIS.MLookupFactory.get(VIS.Env.getCtx(), k.windowNo, 0, VIS.DisplayType.TableDir, "PA_ReportColumn_ID", 0, !1, "PA_ReportColumn.PA_ReportColumnSet_ID IN (SELECT PA_ReportColumnSet_ID FROM PA_Report WHERE PA_Report_ID=@PA_ReportID@) AND PA_ReportColumn.IsActive = 'Y'"); y = t("<label class='frpt-mandatory-star'>"); h = new VIS.Controls.VTextBoxButton("PA_ReportColumn_ID", !1, !1, !0, VIS.DisplayType.MultiKey, f); w = h.getControl().attr("placeholder", " ").attr("data-placeholder", "").attr("data-hasbtn", " "); y.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_ReportColumn")); n.append(w).append(y); r.append(h.getBtn(0)).append(h.getBtn(1)); l.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap">').append(n).append(r)); l.append(t('<div style="float: left;width: 100%;">')); n = t("<div class='vis-control-wrap'>"); p = t("<label>"); u = VIS.dataContext.getJSONData(VIS.Application.contextUrl + "FinancialReportSetting/GetDataReferenceID", { referenceName: "FRPT_PrintValueRef" }); printValueLookup = VIS.MLookupFactory.get(VIS.Env.getCtx(), k.windowNo, 0, VIS.DisplayType.List, "AD_Ref_List_ID", u, !0); v = new VIS.Controls.VComboBox("FRPT_PrintValue", !1, !1, !0, printValueLookup); b = v.getControl().attr("placeholder", " ").attr("data-placeholder", ""); p.append(VIS.Msg.translate(VIS.Env.getCtx(), "FRPT_PrintValue")); n.append(b).append(p); l.append(t('<div class="frpt-fr-FReportLineSet-field input-group vis-input-wrap frpt-printvalue">').append(n)); l.append(i); nt(); g() } function g() { if (c) c.on("change", function () { i.hide() }) } function nt() { t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/GetPostingTypeList", async: !1, success: function (n) { var r = JSON.parse(n), i; if (r) for (c.append(t('<Option value=""><\/option>')), i = 0; i < r.length; i++)c.append(t('<Option value="' + r[i].Id + '">' + VIS.Utility.encodeText(r[i].Value) + "<\/option>")) }, error: function () { } }) } var k = n, a = null, y, w, h = "", p, b, v = "", l = t('<div style="width:100%" class="frpt-fr-reportline frpt-fr-formulapopupwrp vis-formouterwrpdiv"> '), c = t("<select>"); i = t('<label class="frpt-postingtype-msglabel"><\/label>'); d(); this.setPostingType = function (n) { c.val(n) }; this.setReportColumn = function (n) { n != "" && n != null ? (h.setValue(n), a = n) : h.setValue(null) }; this.setPrintValue = function (n) { v.setValue(n) }; this.dispose = function () { l = null; c = null; y = null; w = null; h = null; p = null; b = null; v = null; i = null; r = !1; a = null }; this.getRoot = function () { return l }; this.ok = function () { var n = []; e ? n.push(e) : n.push(0); n.push(f); n.push(c.val()); n.push(h.getValue()); n.push(v.getValue()); t.ajax({ url: VIS.Application.contextUrl + "FinancialReportSetting/SavePostingType", async: !1, type: "POST", contentType: "application/json; charset=utf-8", data: JSON.stringify(n), success: function (n) { var t = JSON.parse(n); t != null && o(t) }, error: function () { } }) }; u.prototype.show = function () { var n = new VIS.ChildDialog, t; n.setContent(this.getRoot()); n.setTitle(VIS.Msg.getMsg("FRPT_ColumnPostingType")); n.setEnableResize(!1); n.setHeight(225); n.setWidth(700); n.setModal(!0); n.show(); t = this; n.onOkClick = function () { var l, u, e, f, o, n; if (r = !1, l = c.val(), l == "" || l == null) return i.text(VIS.Msg.getMsg("FRPT_SelectPostingType")), i.show(), !1; if (u = h.getValue(), u == "" || u == null) return i.text(VIS.Msg.getMsg("FRPT_SelectReportColumn")), i.show(), !1; if (a != u) { for (e = null, f = u.split(","), o = 0; o < s.length; o++) { for (e = s[o].ReportColumn.split(","), n = 0; n < f.length; n++)if (a != "" && a != null) { if (!a.includes(f[n]) && e.includes(f[n])) { r = !0; break } } else if (e.includes(f[n])) { r = !0; break } if (r) break } if (r) return i.text(VIS.Msg.getMsg("FRPT_ColumnAlreadyAdded")), i.show(), window.setTimeout(function () { i.hide() }, 3e3), !1 } t.ok() }; n.onClose = function () { t.dispose() } } } var i = null, r = !1; n.AForms.PostingType = u }(FRPT, jQuery)
