/*version 2.0.7.0*/
(function (n, t) { function i(i) { function c() { u.on("click", function () { r.curGC.vTabPanel && setTimeout(function () { r.curGC.vTabPanel.setSize(0) }, 200); o ? i.height() == 0 ? (i.height(r.gTab.getHeaderHeight()), f.show(), i.find(".vis-ad-w-p-header-arrow-l").css("padding", ""), u.removeClass("fa-angle-double-down").addClass("fa-angle-double-up").removeClass("vis-ad-w-p-header-v")) : (i.height(0), f.hide(), i.find(".vis-ad-w-p-header-arrow-l").css("padding", "0px"), u.removeClass("fa-angle-double-up").addClass("fa-angle-double-down").addClass("vis-ad-w-p-header-v")) : i.width() == 0 ? (u.removeClass("fa-angle-double-right").addClass("fa-angle-double-left").removeClass("vis-ad-w-p-header-h"), i.width(r.gTab.getHeaderWidth()), i.find(".vis-ad-w-p-header-arrow-l").css("padding", ""), window.setTimeout(function () { f.show() }, 50)) : (i.width(0), f.hide(), i.find(".vis-ad-w-p-header-arrow-l").css("padding", "0px"), u.removeClass("fa-angle-double-left").addClass("fa-angle-double-right").addClass("vis-ad-w-p-header-h")); r.sizeChangedListner && r.sizeChangedListner.onSizeChanged && r.sizeChangedListner.onSizeChanged() }) } var f = null, o = !1, r, u; this.headerItems = null; r = this; this.curTab = null; this.controls = []; this.textAlignEnum = { C: "Center", R: "flex-end", L: "flex-start" }; this.alignItemEnum = { C: "Center", T: "flex-start", B: "flex-end" }; this.windowNo = 0; this.dynamicStyle = []; this.styleTag = document.createElement("style"); u = i.find(".fa-angle-double-left"); i.css("flex-direction", "column"); u.parent().css("display", "flex"); this.setHeaderLayout = function (n, u) { if (n.getIsHeaderPanel() && (r.headerItems = n.getHeaderPanelItems(), r.gTab = n, r.windowNo = r.gTab.getWindowNo(), r.headerItems)) { f = t('<div class="vis-ad-w-p-header_root_common">'); var e = this.headerParentCustomUISettings(u); i.addClass(e) } }; this.setHeaderItems = function (i, u) { var ht, tt, g, l, ct, p, it, et, ft, yt, pt, wt, lt, rt, ot, at, vt, bt, f, ut, ei, oi, a, v, nt, dt, d, st; if (this.controls && this.controls.length > 0 && !i && !u) { for (rt = 0; rt < this.controls.length; rt++)if (ht = this.controls[rt], ht) { var ut = ht.control, f = ht.field, c = ut.control; if (f == null && c != null) { c.setValue(null); continue } if (c == null && !f.getIsHeading()) continue; v = s(f, c); c instanceof n.Controls.VButton && (!v || v.indexOf("{") > -1) && (v = f.getValue()); c instanceof n.Controls.VButton ? e(v, c, f) : f.lookup && f.lookup.gethasImageIdentifier() ? (v = n.Utility.Util.getIdentifierDisplayVal(v), tt = ht.img, tt.attr("src", ""), g = ht.imgspan, g.text(""), l = null, ct = null, f.lookup.displayType == n.DisplayType.List ? (l = f.lookup.getLOVIconElement(f.getValue(), !0, !0), ct = f.lookup.getLOVIconStyle(f.getValue()), p = "", !l && v && (p = v.substring(0, 1)), l ? l.contains("Images/") ? (tt.attr("src", l).attr("style", ct), g.hide(), tt.show()) : (p = l, g.empty(), g.append("<i class='" + p + "' style='" + ct + "'><\/i>"), g.show(), tt.hide()) : (p || (p = ""), g.empty(), g.text(p).attr("style", ct), g.show(), tt.hide())) : (l = h(f), l && !l.contains("Images/") ? (p = l, g.text(p), g.show(), tt.attr("src", ""), tt.hide()) : (tt.attr("src", l), g.hide(), tt.show())), e(v, c, f)) : e(v, c, f) } } else { if (!i) return; it = this.curTab.gridTable.gridFields; it = t.grep(it, function (n) { if (n.getIsHeaderPanelitem()) return n }); it = it.sort(function (n, t) { return n.getHeaderSeqno() - t.getHeaderSeqno() }); et = null; for (ft in i.HeaderItems) { var o = i.HeaderItems[ft], ti = o.StartColumn, hi = o.ColumnSpan, ii = o.StartRow, ci = o.RowSpan, ri = o.JustifyItems, ui = o.AlignItems, li = o.Padding, gt = o.BackgroundColor; gt || (gt = ""); yt = o.FontColor; yt || (yt = ""); pt = o.FontSize; pt || (pt = ""); var w = null, k = null, y = null, ni = null, c = null, fi = this.applyCustomUISettings(ft, ti, hi, ii, ci, ri, ui, gt, yt, pt, li); if (w = u.find("." + fi), w.length <= 0 && (w = t('<div class="vis-w-p-header-data-f ' + fi + '">')), o.IsStaticContent) ut = {}, ContentFieldValue = o.ContentFieldValue, wt = n.Msg.getMsg(o.ContentFieldLabel), wt.indexOf("[") > -1 && (wt = o.ContentFieldLabel), y = t('<div class="vis-w-p-header-data-label">' + wt + "<\/div>"), o.FieldLabelStyle && y.attr("style", o.FieldLabelStyle), lt = "", ContentFieldValue.indexOf("fa-") > -1 || ContentFieldValue.indexOf("vis-") > -1 ? (ContentFieldValue.indexOf("fa-") != -1 && ContentFieldValue.indexOf("fa ") == -1 ? ContentFieldValue = "fa " + ContentFieldValue : ContentFieldValue.indexOf("vis-") != -1 && ContentFieldValue.indexOf("vis ") == -1 && (ContentFieldValue = "vis " + ContentFieldValue), lt = t('<i class="' + ContentFieldValue + '"><\/i>')) : ContentFieldValue.indexOf("data:image/") > -1 ? lt = t('<img src="' + ContentFieldValue + '"/>') : (ContentFieldValue = n.Msg.getMsg(ContentFieldValue), ContentFieldValue.indexOf("[") > -1 && (ContentFieldValue = o.ContentFieldValue), lt = t('<span class="">' + ContentFieldValue + "<\/span>")), o.FieldValueStyle && lt.attr("style", o.FieldValueStyle), w.append(y).append(lt), u.append(w); else { if (!et) for (et = {}, it = it.sort(function (n, t) { return n.getHeaderSeqno() - t.getHeaderSeqno() }), rt = 0; rt < it.length; rt++)ot = it[rt], ot.getIsHeaderPanelitem() && (ot.getHeaderSeqno() in et ? et[ot.getHeaderSeqno()].push(ot) : et[ot.getHeaderSeqno()] = [ot]); if (at = et[ft], !at && o.ColSql.length < 0) continue; else if (!at && o.ColSql.length > 0) { if (ut = {}, y = t('<div class="vis-w-p-header-Label-f"><\/div>'), c = new n.Controls.VKeyText(o.ColSql, r.gTab.getWindowNo(), r.gTab.getWindowNo() + "_" + ft, o.IsAlwaysExecute, f, o.AD_GridLayoutItems_ID), c == null) continue; ut.control = c; vt = { control: ut, field: null }; y.append(c.getControl()); w.append(y); u.append(w); r.controls.push(vt) } else if (at) for (bt = 0; bt < at.length; bt++)if (f = at[bt], f) { ut = {}; k = t('<div class="vis-w-p-header-icon-f"><\/div>'); y = t('<div class="vis-w-p-header-Label-f"><\/div>'); f.getDisplayType() == n.DisplayType.Image && (y.addClass("vis-w-p-header-Label-center-f"), ei = this.justifyAlignImageItems(ft, ri, ui), y.addClass(ei)); ni = n.VControlFactory.getHeaderLabel(f, !0); c = o.ColSql.length > 0 ? new n.Controls.VKeyText(o.ColSql, r.gTab.getWindowNo(), r.gTab.getWindowNo() + "_" + ft, o.IsAlwaysExecute, null, o.AD_GridLayoutItems_ID) : n.VControlFactory.getReadOnlyControl(this.curTab, f, !1, !1, !1); f.getDisplayType() == n.DisplayType.Button && c != null && c.addActionListner(this); oi = this.applyCustomUIForFieldValue(ft, ti, ii, f); c.getControl().addClass(oi); ut.control = c; var vt = { control: ut, field: f }, kt = t("<span><\/span>"), si = n.VControlFactory.getIcon(f); if (c != null) { if (a = null, ni && (a = ni.getControl().addClass("vis-w-p-header-data-label")), v = s(f), b = f.getHeaderStyle(), b && b.length > 0 && (b = b.split("|")), b && b.length > 0) for (nt = 0; nt < b.length; nt++)b[nt].indexOf("@img::") > -1 || b[nt].indexOf("@span::") > -1 ? (w.append(k), dt = "", b[nt].indexOf("@img::") > -1 ? dt = b[nt].replace("@img::", "") : b[nt].indexOf("@span::") && (dt = b[nt].replace("@span::", "")), k.attr("style", dt)) : b[nt].indexOf("@value::") > -1 ? w.append(y) : b[nt].indexOf("<br>") > -1 ? w.css("flex-direction", "column") : (w.append(k), w.append(y)); else w.append(k), w.append(y); if (d = t("<img>"), st = t("<span>"), vt.img = d, f.lookup && f.lookup.gethasImageIdentifier()) { vt.imgspan = st; var l = null, p = null, ct = null, b = null; n.DisplayType.List == f.lookup.displayType ? (l = f.lookup.getLOVIconElement(f.getValue(), !0), ct = f.lookup.getLOVIconStyle(f.getValue()), !l && v && (p = v.substring(0, 1)), l && !l.contains("Images/") ? (p = l, st.text(p), d.attr("src", ""), d.hide()) : (d.attr("src", l), d.show())) : (v = n.Utility.Util.getIdentifierDisplayVal(v), l = h(f), l && !l.contains("Images/") ? (p = l, st.text(p), d.attr("src", ""), d.hide()) : (d.attr("src", l), d.show())); k.append(st); k.append(d); f.getHeaderIconOnly() || f.getHeaderHeadingOnly() ? f.getHeaderIconOnly() && f.getHeaderHeadingOnly() ? k.remove() : f.getHeaderIconOnly() ? (p != null ? d.hide() : st.hide(), a && a.length > 0 && a.remove()) : f.getHeaderHeadingOnly() && (a && a.length > 0 && y.append(a), k.remove()) : (p != null ? d.hide() : st.hide(), a && a.length > 0 && y.append(a)); y.append(c.getControl()); u.append(w); e(v, c, f) } else kt.addClass("vis-w-p-header-icon-fixed"), vt.imgspan = kt, f.getDisplayType() == n.DisplayType.Button ? k.remove() : f.getHeaderIconOnly() || f.getHeaderHeadingOnly() ? f.getHeaderIconOnly() && f.getHeaderHeadingOnly() ? k.remove() : f.getHeaderIconOnly() ? (k.append(kt.append(si)), a && a.length > 0 && a.hide()) : f.getHeaderHeadingOnly() && (a && a.length > 0 && y.append(a), k.remove()) : (k.append(kt.append(si)), a && a.length > 0 && y.append(a)), e(v, c, f); y.append(c.getControl()); u.append(w); r.controls.push(vt) } } } } } }; var e = function (t, i, r) { if (t) { if (t.startsWith && t.startsWith("<") && t.endsWith(">") && (t = t.replace("<", "").replace(">", "")), r.getDisplayType() == n.DisplayType.Image) { var u = i.getValue(); i.getControl().show(); u == t && i.refreshImage(t) } else i.format && (t = i.format.GetFormatAmount(i.format.GetFormatedValue(t), "init", n.Env.isDecimalPoint())); i.setValue(n.Utility.decodeText(t), !1) } else r.getDisplayType() == n.DisplayType.Image ? (i.getControl().hide(), i.setValue(null, !1)) : r.getDisplayType() == n.DisplayType.Button && r.getAD_Reference_Value_ID() > 0 ? i.setText("- -") : i.setValue("- -", !0) }, s = function (t) { var i = t.getValue(), u, f, e; return r.pRowData && (i = r.pRowData[t.getColumnName().toLower()]), i ? (u = t.getDisplayType(), t.lookup ? (i = t.lookup.getDisplay(i, !0, !0), i.startsWith && i.startsWith("<") && i.endsWith(">") && (i = i.replace("<", "").replace(">", ""), f = t.lookup.getDirect(i, !0, !0), f && f.Name && (i = f.Name))) : n.DisplayType.IsDate(u) ? (i = i.toString().replace("Z", ""), i = u == n.DisplayType.DateTime ? new Date(i).toLocaleString() : u == n.DisplayType.Date ? new Date(i).toLocaleDateString() : new Date(i).toLocaleTimeString()) : u == n.DisplayType.YesNo ? (e = i.toString(), t.getIsEncryptedColumn() && (e = n.secureEngine.decrypt(e)), i = e.equals("true")) : i = i.toString(), t.getIsEncryptedField() && i && i.length > 0 && (i = i.replace(/[a-zA-Z0-9-. ]/g, "*").replace(/[^a-zA-Z0-9-. ]/g, "*")), t.getObscureType() && i && i.length > 0 && (i = n.Env.getObscureValue(t.getObscureType(), i))) : i = null, i }, h = function (t) { var i = t.getValue(), e, r, u, f; if (i = t.lookup.getDisplay(i, !0, !0), i != null && i && i.indexOf("Images/") > -1) if (e = i.substring(i.indexOf("Images/") + 7, i.lastIndexOf("^^")), e = n.Application.contextUrl + "Images/Thumb140x120/" + e, u == 0 || e.indexOf("nothing.png") > -1) { for (i = i.replace("^^" + i.substring(i.indexOf("Images/"), i.lastIndexOf("^^") + 2), "^^^"), i.indexOf("Images/") > -1 && (i = i.replace(i.substring(i.indexOf("Images/"), i.lastIndexOf("^^") + 2), "^^^")), i = i.split("^^^"), r = "", u = 0; u < i.length; u++)if (i[u].trim().length > 0) return r.length == 0 && (f = i[u].trim().split(" ")), r = f[0].substring(0, 1).toUpper(), f.length > 1 ? r += f[f.length - 1].substring(0, 1).toUpper() : r = f[0].substring(0, 2).toUpper(), r } else return e }; this.getRoot = function () { return f }; this.getParent = function () { return i }; this.hidePanel = function () { return i.hide() }; this.showPanel = function () { return i.show() }; this.alignHorzontal = function () { o = !0; i.removeClass("vis-ad-w-p-header-l").addClass("vis-ad-w-p-header-t"); u.removeClass("fa-angle-double-left").addClass("fa-angle-double-up"); u.parent().css("background-color", "transparent"); i.css("flex-direction", "row") }; c(); this.disposeComponent = function () { u.remove(); u = null; this.styleTag.remove(); this.styleTag = null; this.headerItems = null; r = null; this.curTab = null; this.controls = null; f.remove(); f = null; i.remove(); i = null } } i.prototype.init = function (n) { var r, u, c, o; this.aPanel = n.getAPanel(); this.curTab = n.getMTab(); this.curGC = n; r = this.curTab.getHeaderBackColor(); this.setHeaderLayout(this.curTab, r); var e = this.getRoot(), l = this.getParent(), s = "vis-w-p-Header-Root-v", h = this.curTab.getHeaderHorizontal(), a = this.curTab.getHeaderHeight(), v = this.curTab.getHeaderWidth(), f = this.curTab.getHeaderPadding(), y = this.headerUISettings(h, a, v, "", f); if (e.addClass(y), h && (this.alignHorzontal(), s = "vis-w-p-Header-Root-h"), this.headerItems && !(this.headerItems.length <= 0)) { for (u = 0; u < this.headerItems.length; u++) { var i = this.headerItems[u], p = i.HeaderTotalRow, w = i.HeaderTotalColumn, r = i.HeaderBackColor, f = i.HeaderPadding; (r || (r = ""), f || (f = ""), c = this.fieldGroupContainerUISettings(w, p, r, f, u), o = t('<div class="' + s + " " + c + '">'), e.append(o), !i || !i.HeaderItems || i.HeaderItems.length <= 0) || this.setHeaderItems(i, o) } this.addStyleToDom(); l.append(e) } }; i.prototype.addSizeChangeListner = function (n) { this.sizeChangedListner = n }; i.prototype.fieldGroupContainerUISettings = function (n, t, i, r, u) { var f = "vis-ad-w-p-fg_container_" + t + "_" + n + "_" + this.windowNo + "_" + u; return this.dynamicStyle.push(" ." + f + " {"), this.dynamicStyle.push("grid-template-columns:repeat(" + n + ", 1fr);grid-template-rows:repeat(" + t + ", auto);padding:" + r + ";" + i), this.dynamicStyle.push("} "), f }; i.prototype.addStyleToDom = function () { this.styleTag.type = "text/css"; this.styleTag.innerHTML = this.dynamicStyle.join(" "); t(t("head")[0]).append(this.styleTag) }; i.prototype.headerUISettings = function (n, t, i, r, u) { var f = "vis-ad-w-p-header_root_" + this.windowNo; return this.dynamicStyle.push(" ." + f + " {display:flex;overflow:auto;"), n ? this.dynamicStyle.push("flex:1;flex-direction:row;height: " + t + "; ") : this.dynamicStyle.push("flex-direction:column;width: " + i + ";height:calc(100vh - 94px); "), this.dynamicStyle.push("padding:" + u + ";" + r), this.dynamicStyle.push("} "), f }; i.prototype.headerParentCustomUISettings = function (n) { var t = "vis-ad-w-p-header_Custom_" + this.windowNo; return this.dynamicStyle.push(" ." + t + " {flex:1;"), this.dynamicStyle.push("background: rgba(var(--v-c-primary));"), this.dynamicStyle.push(n), this.dynamicStyle.push("} "), t }; i.prototype.applyCustomUISettings = function (n, t, i, r, u, f, e, o, s, h, c) { var l = "vis-hp-FieldGroup_" + r + "_" + t + "_" + this.windowNo + "_" + n; return this.dynamicStyle.push("." + l + "  {grid-column:" + t + " / span " + i + "; grid-row: " + r + " / span " + u + ";"), this.dynamicStyle.push("justify-content:" + this.textAlignEnum[f] + ";align-items:" + this.alignItemEnum[e]), this.dynamicStyle.push(";font-size:" + h + ";color:" + s + ";padding:" + c + ";"), this.dynamicStyle.push(o), this.dynamicStyle.push("} "), l }; i.prototype.applyCustomUIForFieldValue = function (n, t, i, u) { var f = u.getHeaderStyle(), e = "vis-hp-FieldValue_" + i + "_" + t + "_" + this.windowNo + "_" + n + "_" + u.getAD_Column_ID(); return f && f.toLower().indexOf("@value::") > -1 && (f = r(f, "@value::")), this.dynamicStyle.push("." + e + "  {" + f + "} "), e }; i.prototype.applyCustomUIForFieldImg = function (n, t, i, u) { var f = u.getHeaderStyle(), e = "vis-hp-FieldImgValue_" + i + "_" + t + "_" + this.windowNo + "_" + n; return f && f.toLower().indexOf("@img::") > -1 && (f = r(f, "@img::")), this.dynamicStyle.push("." + e + "  {" + f + "} "), e }; i.prototype.applyCustomUIForFieldSpan = function (n, t, i, u) { var f = u.getHeaderStyle(), e = "vis-hp-FieldImgValue_" + i + "_" + t + "_" + this.windowNo + "_" + n; return f && f.toLower().indexOf("@span::") > -1 && (f = r(f, "@span::")), this.dynamicStyle.push("." + e + "  {" + f + "} "), e }; var r = function (n, t) { var r, i; if (n && n.toLower().indexOf(t) > -1) for (r = n.split("|"), i = 0; i < r.length; i++)if (r[i].toLower().indexOf(t) > -1) return r[i].toLower().replace(t, "").trim() }; i.prototype.justifyAlignImageItems = function (n, t, i) { var r = "vis-w-p-header-label-center-justify_" + n + "_" + this.windowNo; return this.dynamicStyle.push(" ." + r + " {justify-content:" + this.textAlignEnum[t] + ";align-items:" + this.alignItemEnum[i] + "}"), r }; i.prototype.navigate = function (n) { if (this.isChild = n, this.pRowData = null, this.isChild) { var t = this; this.curTab.getTableModel().getRowFromDB(this.curTab.getCurrentRow(), function (n) { t.pRowData = n; t.setHeaderItems(); t.isChild = !1 }) } else this.setHeaderItems(), this.isChild = !1 }; i.prototype.dispose = function () { this.aPanel = null; this.curTab = null; this.curGC = null; this.sizeChangedListner = null; this.disposeComponent() }; i.prototype.actionPerformed = function (n) { if (this.aPanel.getIsWindowAction(n.source.getField().getAD_Reference_Value_ID()) && this.aPanel.toolbarActionList.indexOf(n.source.getField().vo.DefaultValue) > -1) { this.aPanel.actionPerformed(n, this); return } if (!(n.source.getField().getIsAction() && n.source.getField().getAction() === "MTU") && this.aPanel.curTab.needSave(!0, !1)) { this.aPanel.cmd_save(!0); return } this.aPanel.actionPerformed(n, this) }; i.prototype.cmd_save = function (n, t) { return this.aPanel.cmd_save2(n, this.curTab, this.curGC, this.aPanel, t) }; n.HeaderPanel = i })(VIS, jQuery), function (n, t) { function i(i, u) { function c(n) { s && s.removeClass("vis-ad-w-p-ap-tp-o-li-selected"); s = null; e.empty(); n ? (s = n.addClass("vis-ad-w-p-ap-tp-o-li-selected"), v.text(n.data("name")), o.setCurrentPanel(n.data("cname"), i, n.data("extrainfo"))) : o.setCurrentPanel(null); o.curTabPanel ? (e.append(o.curTabPanel.getRoot()), o.setSize(u)) : o.setSize(35) } var o, s; this.width = u; this.tabPanels = []; var a = document.importNode(r, !0), f = t(a.querySelector(".vis-ad-w-p-ap-tp-outerwrap")), h = f.find(".vis-ad-w-p-ap-tp-o-icorbar ul"), l = f.find(".vis-ad-w-p-ap-tp-o-b-head"), v = f.find(".vis-ad-w-p-ap-tp-o-b-head h6"), y = f.find(".vis-ad-w-p-ap-tp-o-b-head span"), e = f.find(".vis-ad-w-p-ap-tp-o-b-content"); this.isClosed = !0; u <= 25 ? u = u <= 0 ? 75 : 25 : u > 75 && (u = 75); u = 100 - u; u = t(document).width() * u / 100; this.width = u; o = this; s = null; h.on("click", "LI", function (n) { c(t(n.currentTarget)) }); y.on("click", function () { c(null) }); this.getRoot = function () { return f }; this.getcurTabPanel = function () { return this.curTabPanel }; this.setPanelList = function (n) { h.append(n); var t = h.find("[default='true']").first(); t && t.length > 0 ? t.trigger("click") : c(null) }; this.setSize = function (i) { if (this.isClosed || !i || !(i > 40)) { i == 0 && (i = this.width); var r = f.closest(".vis-ad-w-p-center").height() - 40; if (i && i > 40) { if (!this.curTabPanel) return; r || (r = n.Env.getScreenHeight() - 225, this.gTab.getIsHeaderPanel() && (r = r - n.Utility.Util.getValueOfInt(this.curTabPanel.curTab.getHeaderHeight().replace("px", " ")) - 10)); this.curTabPanel.curTab.getIsTPBottomAligned() ? (f.css({ height: "100%", width: "100%" }), e.css({ height: "100%", width: t(document).width() - 72 + "px", overflow: "auto" })) : (f.css({ height: r + "px", width: i + "px" }), e.css({ height: r + "px", width: i - 35 + "px", overflow: "auto" })); l.show(); e.show() } else f.css({ height: "35px", width: "35px" }), e.css({ height: "35px", width: "0px" }), this.isClosed = !0, l.hide(), e.hide(); if (this.sizeChangedListner && this.sizeChangedListner.onSizeChanged) this.sizeChangedListner.onSizeChanged(i && i > 40) } }; this.disposeComponent = function () { f.remove(); e.remove(); s = null; o = null } } var r = document.querySelector("#vis-ad-tabpnltmp").content; i.prototype.init = function (t) { var i, e, u, r, f; if (this.gTab = t, i = this.gTab.getTabPanels(), e = 0, i && i.length > 0) for (u = [], e = i[0].getAD_TabPanel_ID(), r = 0; r < i.length; r++)f = "", f = i[r].getIconPath() ? i[r].getIconPath() : "fa fa-object-group", u.push('<li default="' + i[r].getIsDefault() + '" data-panelid="' + i[r].getAD_TabPanel_ID() + '" data-cname="' + i[r].getClassName() + '" data-name="' + i[r].getName() + '"  data-extrainfo="' + i[r].getExtraInfo() + '" >'), f.indexOf(".") > -1 ? u.push('<img alt = "' + i[r].getName() + '" title = "' + i[r].getName() + '"  src = "' + n.Application.contextUrl + "Areas/" + f + '" onerror=this.src="' + n.Application.contextUrl + 'Areas/VIS/Images/base/defpanel.ico"><\/img >') : u.push('<span> <i title = "' + i[r].getName() + '" class="' + f + '" ><\/i><\/span>'), u.push("<\/li>"), i[r].getIsDefault() && (e = i[r].getAD_TabPanel_ID()); this.setPanelList(u.join(" "), e) }; i.prototype.addSizeChangeListner = function (n) { this.sizeChangedListner = n }; i.prototype.setCurrentPanel = function (t, i, r) { var f, u; this.curTabPanel && (this.curTabPanel.dispose && this.curTabPanel.dispose(), this.curTabPanel = null); t && (f = n.Utility.getFunctionByName(t, window), f && (u = new f, u.startPanel(i, this.gTab, r), this.curTabPanel = u, (this.gTab.getRecord_ID() > -1 || this.gTab.getCurrentRow() > -1) && u.refreshPanelData(this.gTab.getRecord_ID(), this.gTab.getTableModel().getRow(this.gTab.getCurrentRow())))) }; i.prototype.refreshPanelData = function (n, t) { this.curTabPanel && this.curTabPanel.refreshPanelData(n, t) }; i.prototype.setTabPanelSize = function (n) { n == 0 && (n = this.width); this.setSize(n) }; i.prototype.dispose = function () { this.disposeComponent(); this.sizeChnagedListner = null; this.gTab = null; this.curTabPanel && (this.curTabPanel.dispose(), this.curTabPanel = null) }; n.VTabPanel = i }(VIS, jQuery), function (n, t) { function e(n, i, r) { var u = null; return t.ajax({ url: h, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } function v(i, r, u) { var f = null; return i.sql = n.secureEngine.encrypt(i.sql), t.ajax({ url: l, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: r, data: JSON.stringify(i) }).done(function (n) { f = n; u && u(n) }), f } function i() { function h() { var n = document.importNode(y, !0); i = t(n.querySelector(".vis-ad-w")); u = i.find(".vis-ad-w-body"); e = i.find("h5"); r = i.find(".vis-ad-w-close"); o = i.find(".vis-ad-w-toolbar"); f = i.find(".vis-ad-w-header") } var f, i, u, e, r, o, s; this.name; this.windowNo; this.id; this.img = null; this.cPanel; this.isHeaderVisible = !0; this.onClosed; this.title = "window"; this.closeable = !0; f = null; o = null; this.onLoad = null; h(); this.setTitle = function (n) { this.title = n; e.text(this.title) }; this.setSize = function () { return }; this.hideHeader = function (n) { this.isHeaderVisible = !n; n ? f.hide() : f.show(); this.sizeChanged() }; this.hideCloseIcon = function (n) { n ? (r.hide(), this.closeable = !1) : (r.show(), this.closeable = !0) }; this.isCloseable = function () { return this.closeable }; this.getRootLayout = function () { return i }; this.getContentGrid = function () { return u }; this.setToolbar = function (n) { o.append(n) }; s = this; r.on(n.Events.onTouchStartOrClick, function (n) { n.preventDefault(); n.stopPropagation(); s.dispose() }); this.disposeComponent = function () { s = null; r && r.off(n.Events.onTouchStartOrClick); r = null; i && i.remove(); u && u.remove(); i = u = e = r = null; this.setTitle = null; this.name = null; this.windowNo = null; this.id = null; this.setTitle = null; this.setName = null; this.getRootLayout = null; this.getContentGrid = null; this.onLoad = null } } function r(i) { var u, f, r; i && (this.action, this.toggle, this.enableDisable, this.pressed, this.isEnabled = !0, this.text, this.toolTipText, this.imageOnly, this.textOnly, this.onAction = null, this.isSmall, this.iconName = "", this.direction = "right", t.extend(!0, this, i), this.items = {}, this.$li, this.text || (this.text = n.I18N.getLabel(this.action), this.text.contains("&") && (this.text = this.text.replace("&", "")), this.toolTipText = this.toolTipText ? this.text + n.Msg.getMsg(this.toolTipText) : this.text, this.toolTipText.contains("&") && (this.toolTipText = this.text + this.toolTipText.replace("&", ""))), u = "", f = "", this.isSmall ? (u = this.iconName != "" ? this.iconName.toLowerCase() : this.action.toLowerCase(), (this.toggle || this.enableDisable) && (f = u + "x")) : (u = this.iconName != "" ? this.iconName.toLowerCase() : this.action.toLowerCase(), (this.toggle || this.enableDisable) && (f = u + "x")), this.imgUrl = "vis-" + u, this.imgUrlX = "vis-" + f); r = this; this.getListItm = function (i) { var u = t("<li>"), f = t("<div><\/div>"), e = !0, o = !1; if (this.action == "Save" || this.action == "New") u.on("mousedown touchstart", function () { o = !0; window.setTimeout(function () { o && u.trigger("click") }, 1e3) }); u.on(n.Events.onClick, function (n) { o = !1; n.stopPropagation(); e && r.onAction && r.isEnabled && (r.toggle && r.setPressed(!r.pressed), e = !1, f.css("background-color", "red"), setTimeout(function () { f.css("background-color", "transparent"); r.onAction(r.action); e = !0 }, 10)) }); return this.textOnly ? u.append(t("<h5>").text(this.text)) : this.imageOnly ? (this.img = t('<i class="vis ' + this.imgUrl + '" title = "' + this.toolTipText + '">'), u.append(f), f.append(this.img)) : (this.direction == "r" ? u.append("<span>" + this.text + '<\/span> <i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '" ><\/i>') : u.append('<i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '"><\/i><span>' + this.text + "<\/span>"), this.img = u.find("i")), this.$li = u, u.popover, i && (this.items[i] = u), this.$li }; this.getListItmIT = function (i) { if (this.$li) return this.$li; var u = t("<li>"), f = t("<div><\/div>"), e = !0; u.on(n.Events.onClick, function (n) { n.stopPropagation(); e && r.onAction && r.isEnabled && (r.toggle && r.setPressed(!r.pressed), e = !1, f.css("background-color", "red"), setTimeout(function () { f.css("background-color", "transparent"); r.onAction(r.action); e = !0 }, 10)) }); return this.textOnly ? u.text(this.text) : this.imageOnly ? (this.img = t('<i class="vis ' + this.imgUrl + '" title = "' + this.toolTipText + '">'), u.append(f), f.append(this.img)) : (this.direction == "r" ? u.append("<span>" + this.text + '<\/span> <i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '" ><\/i>') : u.append('<i class="vis ' + this.imgUrl + '" title="' + this.toolTipText + '" ><\/i><span>' + this.text + "<\/span>"), this.img = u.find("i")), this.$li = u, i && (this.items[i] = u), this.$li }; this.disposeComponent = function () { r = null; this.getListItm = null; this.getListItmIT = null } } function u(i) { var l = document.importNode(o, !0), u = t(l.querySelector(".vis-ad-w-p-s-main")), h, c, f; this.$statusLine = u.find(".vis-ad-w-p-s-msg").find("span"); this.$statusDB = u.find(".vis-ad-w-p-s-statusdb"); this.$infoLine = u.find(".vis-ad-w-p-s-infoline"); var s = u.find(".vis-ad-w-p-s-result").find("span"), r = t("<select class='vis-statusbar-combo'>"), e = u.find(".vis-ad-w-p-s-plst"); this.text = ""; this.dse; this.merror; this.mtext; h = n.Msg.getMsg("ShowingResult"); c = n.Msg.getMsg("of"); this.onComboChange; i || this.$infoLine.hide(); this.getRoot = function () { return u }; this.render = function () { }; this.setPageItem = function (n) { e.append(n) }; this.setComboPage = function () { e.append(t("<li>").append(r)) }; this.setPageLine = function (n) { var v, o, y, t; if (n != null) { var i = n.getCurrentPage(), l = n.getTotalPage(), a = n.getPageSize(), u = n.getTotalRecords(), f = (i - 1) * a, e = f + a; if (e > u && (e = u), u == 0 && (f -= 1), v = h + " " + (f + 1) + "-" + e + " " + c + " " + n.getTotalRecords(), s.text(v), l != r[0].options.length) { for (o = [], y = -1, t = 0; t < l; t++)o[t] = "<option>" + (t + 1) + "<\/option>"; r.empty(); r.html(o.join("")) } r[0].selectedIndex != i - 1 && (r[0].selectedIndex = i - 1) } }; this.setComboCallback = function (n) { selectionCallback = n }; f = this; r.on("change", function (n) { if (n.stopPropagation(), f.onComboChange) f.onComboChange(this.selectedIndex) }); this.$statusDB.on("click", function () { var t = n.Msg.getMsg("Who") + f.text, i = new n.RecordInfo(t, f.dse); i.show() }); this.disposeComponent = function () { f = null; u.remove(); r1Col1 = null; r2Col1 = null; u = null; this.getRoot = null; this.onComboChange = null; e.remove(); e = null; s = null; this.$statusLine = null; this.$statusDB = null; $seprator = null; this.disposeComponent = null; this.setPageItem = null; this.getRoot = null; this.render = null; this.setPageLine = null; this.$infoLine = null; this.text = null; this.dse = null; this.merror = null; this.mtext = null; r.empty(); r.remove(); r = null } } var s = 0, p = n.Logging.Level, f = n.Application.contextUrl, h = f + "JsonData/JDataSetWithCode", c = f + "JsonData/ExecuteNonQuer", l = f + "Form/JDataSet", a = function (t, i, r) { var o = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, e(f, o, function (t) { u = (new n.DB.DataReader).toJson(t); r && r(u) }), u }, w = function (t, i, r) { var o = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, e(f, o, function (t) { u = (new n.DB.DataSet).toJson(t); r && r(u) }), u }, b = function (t, i, r) { var f = r ? !0 : !1, o = { sql: t, page: 1, pageSize: 0 }, u; return i && (o.param = i), u = null, e(o, f, function (t) { i = (new n.DB.DataSet).toJson(t); var i = (new n.DB.DataSet).toJson(t); u = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; f && r(u) }), u }, k = function (n, i, r) { var f = r ? !0 : !1, u = null, e = { sql: n.join("/"), param: i }; return t.ajax({ url: c + "ies", type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: f, data: JSON.stringify(e) }).done(function (n) { u = n; r && r(n) }), u }, d = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, v(f, e, function (t) { u = (new n.DB.DataReader).toJson(t); r && r(u) }), u }, y = document.querySelector("#vis-ad-windowtmp").content, o; i.prototype.setName = function (n) { this.name = n }; i.prototype.getName = function () { return this.name }; i.prototype.sizeChanged = function (t, i) { t || (t = n.Env.getScreenHeight()); i || (i = window.innerWidth); var r = this.isHeaderVisible ? 85 : 43; try { this.cPanel.sizeChanged(t - r, i) } catch (u) { console.log("size changed error") } }; i.prototype.refresh = function () { return this.cPanel.refresh(), this }; i.prototype.keyDown = function (n) { return this.cPanel.keyDown && this.cPanel.keyDown(n), this }; i.prototype.navigateThroghtShortcut = function (n) { var i = t(document.activeElement), r; return i && i.length > 0 ? (i.trigger("change"), r = this, window.setTimeout(function () { r.cPanel.navigateThroghtShortcut && r.cPanel.navigateThroghtShortcut(n) }, 200)) : this.cPanel.navigateThroghtShortcut && this.cPanel.navigateThroghtShortcut(n), this }; i.prototype.initWindow = function (i, r, u, f, e) { var s, o; return this.cPanel = new n.APanel, this.getContentGrid().css("display", "flex"), s = n.Env.getWindowNo(), this.id = s + "_" + i, this.hid = f + "=" + i, o = this, this.hideHeader(!0), n.AEnv.getGridWindow(s, i, function (i) { var c, f, h; if (i.error != null) { o.hasError = !0; n.ADialog.error(i.error); o.dispose(); o = null; return } c = t.parseJSON(i.result); n.context.setContextOfWindow(t.parseJSON(i.wCtx), s); o.cPanel.initPanel(c, r, o, !1, e); o.sizeChanged(); o.cPanel.createSearchAutoComplete(); o.cPanel.selectFirstTab(r != null); n.MLookupCache.initWindowLookup(s); f = o.cPanel.gridWindow; h = null; h = f.getFontName() != "" ? f.getFontName() : f.getImageUrl() != "" ? n.Application.contextUrl + "Images/Thumb16x16/" + f.getImageUrl() : "fa fa-window-maximize"; o.img = h; u && u(o.id, h, o.name, o.hid); o.onLoad && o.onLoad(); c = null; o = null }), this.AD_Window_ID = i, this.windowNo = s, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; i.prototype.setCFrameContent = function (n, t) { this.cPanel = n; this.windowNo = t; this.id = this.windowNo + "_CFrame"; this.getRootLayout().id = this.id; this.getRootLayout().attr("id", "AS_" + this.id); this.getContentGrid().append(this.cPanel.getRoot()) }; i.prototype.initForm = function (i, r, u, f) { var o, e; return this.cPanel = new n.AForm(n.Env.getScreenHeight() - 85), o = n.Env.getWindowNo(), this.id = o + "_" + i, this.hid = u + "=" + i, e = this, n.dataContext.getFormDataString({ AD_Form_ID: i }, function (i) { var u, s; if (i.error != null) { n.ADialog.error(i.error); e.dispose(); e = null; return } if (u = t.parseJSON(i.result), u.IsError) { n.ADialog.error(u.Message); e.dispose(); e = null; return } if (e.setTitle(u.DisplayName), e.setName(u.DisplayName), !e.cPanel.openForm(u, e, o, f)) { e.dispose(); e = null; return } e.sizeChanged(); s = "fa fa-list-alt"; e.img = s; r && r(e.id, s, e.name, e.hid); u = null; e = null }), this.windowNo = o, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; i.prototype.initProcess = function (i, r, u, f, e) { var h, o; return this.cPanel = new n.AProcess(i, n.Env.getScreenHeight() - s, f, e), h = n.Env.getWindowNo(), this.id = h + "_" + i, this.hid = u + "=" + i, o = this, this.hideHeader(!0), n.dataContext.getProcessDataString({ AD_Process_ID: i }, function (f) { var e, s; if (f.error != null) { n.ADialog.error(f.error); o.dispose(); o = null; return } if (e = t.parseJSON(f.result), e.IsError) { n.ADialog.error(e.Message); o.dispose(); o = null; return } if (o.setTitle(""), o.setName(e.Name), e.AD_Process_ID = i, o.cPanel.setActionOrigin(n.ProcessCtl.prototype.ORIGIN_MENU), !o.cPanel.init(e, o, h)) { o.dispose(); o = null; return } o.sizeChanged(); s = null; s = e.FontName != "" ? e.FontName : e.ImageUrl != "" ? n.Application.contextUrl + "Images/Thumb16x16/" + e.ImageUrl : u == "P" ? "fa fa-cog" : "vis vis-report"; o.img = s; r && r(o.id, s, o.name, o.hid); e = null; o = null }), this.windowNo = h, this.getRootLayout().id = this.id, this.getRootLayout().attr("id", "AS_" + this.id), this.getContentGrid().append(this.cPanel.getRoot()), !0 }; i.prototype.refreshProcess = function (n, t, i, r, u) { return this.cPanel && (this.cPanel.disposeComponent(), this.cPanel = null), r = !0, this.initProcess(n, t, i, r, u), u.disposeComponent && (u.getParameterContainer().empty().append(this.cPanel.getParametersContainer()), this.cPanel.getContentTable().css("height", u.getContentContainer().height()), u.getContentContainer().empty().append(this.cPanel.getContentTable()).append(this.cPanel.getBusyIndicator()).css("position", "relative"), u.getToolbarContainer().empty().append(this.cPanel.getToolbar())), this.cPanel }; i.prototype.getProcessPanel = function () { return this.cPanel }; i.prototype.getTitile = function () { return this.title }; i.prototype.getAD_Window_ID = function () { return this.AD_Window_ID }; i.prototype.show = function (n, t) { return n.append(this.getRootLayout()), t && t(this.id, null, this.name, this.hid), !0 }; i.prototype.refreshData = function () { this.cPanel.refreshData() }; i.prototype.getId = function () { return this.id }; i.prototype.getWindowNo = function () { return this.windowNo }; i.prototype.dispose = function () { if (this.closeable) return this.onClosed && !this.onClosed(this.id, this.$layout, this.hid, this.AD_Window_ID) ? void 0 : (this.onClosed = null, this.cPanel && this.cPanel.dispose(), this.cPanel = null, this.children = null, this.disposeComponent(), !0) }; r.prototype.setPressed = function (n) { this.toggle && this.pressed != n && (this.pressed = n, this.img && this.toggle && (n ? (this.img.removeClass(this.imgUrl), this.img.addClass(this.imgUrlX)) : (this.img.removeClass(this.imgUrlX), this.img.addClass(this.imgUrl)))) }; r.prototype.setTextDirection = function (n) { this.direction = n }; r.prototype.getIsPressed = function () { return this.pressed }; r.prototype.getAction = function () { return this.action }; r.prototype.getPath = function () { return n.Application.contextUrl + "Areas/VIS/Images/base/" }; r.prototype.getSeprator = function (n, t) { var i = this.getPath(); return (i += n ? "seprator16.png" : "seprator24.png", t) ? "<li>|<\/li>" : '<li><img src="' + i + '"><\/li>' }; r.prototype.setEnabled = function (n) { this.isEnabled = n; this.$li && this.$li.css("opacity", n ? 1 : .6); this.img && this.img.prop("disabled", !n).css("opacity", n ? 1 : .6) }; r.prototype.highlightNewButton = function (t) { if (t) { if (this.$li.instructionPopRemoved) return; this.windowContainer || (this.windowContainer = this.$li.closest(".vis-ad-w-p")); this.windowContainer.find(".vis-window-instruc-overlay-new").length <= 0 && (this.windowContainer.prepend('<div class="vis-window-instruc-overlay-new"><div class="vis-window-instruc-overlay-new-inn"><p>' + n.Msg.getMsg("CreateNewRec") + "<\/p><\/div><\/div>"), this.$li.addClass("vis-window-instruc-overlay-new-li")) } else this.windowContainer || (this.windowContainer = this.$li.closest(".vis-ad-w-p")), this.windowContainer.find(".vis-window-instruc-overlay-new").remove(), this.windowContainer.find(".vis-window-instruc-overlay-new-inn").remove(), this.$li.removeClass("vis-window-instruc-overlay-new-li"), this.$li.instructionPopRemoved = !0 }; r.prototype.show = function () { this.$li && this.$li.show(); this.img && this.img.show() }; r.prototype.hide = function () { this.$li && this.$li.hide(); this.img && this.img.hide() }; r.prototype.getItem = function () { return this.$li }; r.prototype.getIsEnabled = function () { return this.isEnabled }; r.prototype.dispose = function (t) { if (this.action = this.toggle = this.pressed = this.isEnabled = this.text = this.toolTipText = this.imageOnly = null, this.textOnly = this.onAction = this.isSmall = null, this.$li && (this.$li.off(n.Events.onClick), this.$li.remove(), this.$li = null), this.img && (this.img = null), t && t in this.items) { var i = this.items[t]; i && (i.off(n.Events.onClick), i.remove(), i = null); delete this.items[t] } this.disposeComponent() }; r.prototype.setIsRo; o = document.querySelector("#vis-ad-statusbartmp").content; u.prototype.setStatusDB = function (n, t) { n == null || n.length == 0 ? this.$statusDB.text("") : this.$statusDB.text(n); this.text = n; this.dse = t; this.setPageLine(t) }; u.prototype.setStatusLine = function (n, t) { this.merror = t; this.mtext = n; this.$statusLine.text(n) }; u.prototype.setInfo = function (n) { this.$infoLine.is(":visible") || this.$infoLine.show(); this.$infoLine.text(n) }; u.prototype.dispose = function () { this.disposeComponent() }; n.AParentDetail = function (i, r) { function y() { f = t("<div class='vis-apanel-bar'>"); c = t("<div class='vis-apanel-bar-fixpart' style='background-color:white'>"); o = t("<div class='vis-apanel-bar-varpart vis-apanel-bar-pdetail'>"); e = t('<div class="vis-apanel-lb-main">'); s = t("<div class='vis-apanel-lb-oflow' style='border-left: 1px solid white;'>").hide(); s.html("<a data-dir='u' href='javascript:void(0)'><img style='margin-left:10px' data-dir='u' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-top.png' ><\/a><a data-dir='d' href='javascript:void(0)' ><img style='margin-left:10px' data-dir='d' src='" + n.Application.contextUrl + "Areas/VIS/Images/base/arrow-bottom.png' /><\/a>"); o.append(e).append(s); h = t("<div style='width:192px;overflow-y:auto;padding-left: 4px;padding-right:3px;'>"); e.append(h); f.append(o).append(c); r.append(f); f.hide() } function a() { for (var e, o, r = null, s = "", t = "", c = 0; c < v; c++)(r = l[c], t = null, t = r.getValue(), t && t != "" && r.getIsDisplayed()) && (s += "<h3>" + w2utils.encodeTags(r.getHeader()) + "<\/h3>", e = r.getDisplayType(), r.lookup ? t = r.lookup.getDisplay(t, !0) : n.DisplayType.IsDate(e) ? t = new Date(t).toLocaleString() : e == n.DisplayType.YesNo ? (o = t.toString(), r.getIsEncryptedColumn() && (o = n.secureEngine.decrypt(o)), t = o.equals("Y")) : t = t.toString(), r.getIsEncryptedColumn() && e != n.DisplayType.YesNo && (t = n.secureEngine.decrypt(t)), s += "<h5>" + w2utils.encodeTags(t) + "<\/h5>"); h.empty(); h.html("<h1>" + i.getMTab().getName() + "<\/h1>" + s); u.setSize(f.height()) } function p() { u.curGC && (u.curGC.multiRowResize(), u.curGC.aPanel.setWidth(-1, !0), u.curGC.aPanel.setTabNavigation()) } function w() { a(); u.curGC && (u.curGC.multiRowResize(), u.curGC.aPanel.setWidth(-1, !0), u.curGC.aPanel.setTabNavigation()) } var u; this.gc = i; this.$root = r; this.visible = !1; this.expaned = !1; this.curGC = null; var l = i.getMTab().getTableModel().getFields(), v = l.length, c, o, f = null, e, s, h; y(); u = this; c.on(n.Events.onTouchStartOrClick, function (n) { u.$root.width() > 20 ? u.hide() : u.show(); n.stopPropagation() }); s.on("click", function (n) { var r, o; if (n.stopPropagation(), r = t(n.target).data("dir"), r) { var s = e.height(), c = h.height(), u = e.scrollTop(), f = Math.ceil(s / 2), i = 0; if (r == "d") { if (u + f >= c - f) return; o = c - s; i = u + f; e.animate({ scrollTop: i > o ? o : i }, 1e3, "easeOutBounce") } else if (r == "u") { if (u == 0) return; i = u - f; e.animate({ scrollTop: i < 0 ? 0 : i }, 1e3, "easeOutBounce") } } }); this.show = function () { if (u.expaned) { a(); return } this.expaned = !0; u.visible && f.show(); r.animate({ width: "200px" }, 300, "swing"); o.show().animate({ width: "192px" }, 300, "swing", w) }; this.hide = function () { (this.expaned || !this.visible) && (this.expaned = !1, r.animate({ width: u.visible ? "8px" : "0px" }, 300, "swing"), u.visible || f.hide(), o.hide().animate({ width: "0px" }, 300, "swing", p)) }; this.setSize = function (t) { f.height(t); e.height(t); h.height() > e.height() && (n.Application.isMobile || (e.height(t - 40), s.show())) }; this.disposeComponenet = function () { this.gc = null; this.$root = null; this.visible = null; this.expaned = null; s.off("click"); c.off(n.Events.onTouchStartOrClick); c = o = null; f.remove(); f = null; u = null; this.curGC = null; l.length = 0; l = null; this.show = null; this.hide = null } }; n.AParentDetail.prototype.evaluate = function (n) { if (this.curGC = null, this.curGC = n, this.gc.getId() === n.getId()) this.visible = !1, this.hide(); else { if (this.curGC.isParentDetailVisible = !0, this.visible) return; this.visible = !0; this.show() } }; n.AParentDetail.prototype.dispose = function () { this.disposeComponenet() }; n.VSortTab = function (i, r, u, f, e, o) { function g() { var i, r, u; w = t("<span>").text(n.Msg.getMsg("N")); b = t("<span>").text(n.Msg.getMsg("Y")); h = t("<ul class='vis-sortTab-select' " + (e ? " disabled" : "") + ">"); s = t("<ul class='vis-sortTab-select' " + (e ? " disabled" : "") + " >"); v = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-left'><\/i><\/button"); a = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-right'><\/i><\/button"); y = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-up'><\/i><\/button"); p = t("<button" + (e ? " disabled" : "") + " ><i class='fa fa-arrow-down'><\/i><\/button"); l = t("<table class='vis-apanel-sorttab' style='display:none;'>"); i = t("<td class='vis-apanel-sorttab-td'>"); r = t('<div class="vis-apanel-sorttab-cont">'); r.append(h).append(t("<div class='vis-apanel-sorttab-td-right'>").append(a).append(v)); i.append(t("<div class='vis-apanel-sorttab-td-inner'>").append(w).append(r)); u = t('<div class="vis-apanel-sorttab-cont">'); u.append(s).append(t("<div class='vis-apanel-sorttab-td-right'>").append(y).append(p)); i.append(t("<div class='vis-apanel-sorttab-td-inner'>").append(b).append(u)); l.append(t("<tr>").append(i)) } var l, w, b, h, s, a, v, y, p, d, k, c; this.winNumber = i; this.tableName = null; this.columnSortName = null; this.columnYesNoName = null; this.keyColumnName = null; this.identifierColumnName = null; this.identifierTranslated = !1; this.parentColumnName = null; this.AD_Table_ID = r; this.AD_ColumnSortOrder_ID = u; this.AD_ColumnSortYesNo_ID = f; this.aPanel = null; this.log = n.Logging.VLogger.getVLogger("VSortTab"); d = n.Application.contextUrl + "Areas/VIS/Images/base/"; k = null; g(); this.dynInit(r, u, f); this.getRoot = function () { return l }; this.getId = function () { return o }; this.getlstModel = function (n) { return n ? s.find("li") : h.find("li") }; this.setLabelName = function (n, t) { w.text(n); b.text(t) }; this.setListOptions = function (n, t) { h.empty(); h.append(n); s.empty(); s.append(t) }; this.setOldValues = function (n) { k = n }; this.getOldValues = function () { return k }; c = this; v.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Left"); n.stopPropagation() }); a.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Right"); n.stopPropagation() }); y.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Up"); n.stopPropagation() }); p.on(n.Events.onTouchStartOrClick, function (n) { c.btn_Click("Down"); n.stopPropagation() }); h.on(n.Events.onClick, "LI", function () { t(this).toggleClass("vis-apanel-sorttab-selected") }); s.on(n.Events.onClick, "LI", function () { t(this).toggleClass("vis-apanel-sorttab-selected") }); this.btn_Click = function (n) { var e = !1, i = null, u, f, c, r, o; if (n == "Right") { for (i = h.find("li.vis-apanel-sorttab-selected"), s.children().removeClass("vis-apanel-sorttab-selected"), u = 0; u < i.length; u++)i[u].remove(), t(i[u]).toggleClass("vis-apanel-sorttab-selected"), s.append(i[u]), e = !0; i.length = 0; i = 0 } else if (n == "Left") { for (i = s.find("li.vis-apanel-sorttab-selected"), h.children().removeClass("vis-apanel-sorttab-selected"), f = 0; f < i.length; f++)i[f].remove(), t(i[f]).toggleClass("vis-apanel-sorttab-selected"), h.append(i[f]), e = !0; i.length = 0; i = 0 } else { if (i = s.find("li.vis-apanel-sorttab-selected"), i == null) return; if (c = i.length, c == 0) return; if (r = t(i[0]), r == null) return; if (s.children().removeClass("vis-apanel-sorttab-selected"), r.addClass("vis-apanel-sorttab-selected"), o = r.index(), n == "Up") { if (o == 0) return; r.remove(); r.insertBefore(s.find("li").eq(o - 1)); e = !0 } else if (n == "Down") { if (o >= s.children().length - 1) return; r.remove(); r.insertAfter(s.find("li").eq(o)); e = !0 } } e && this.notifyFireChanged(!0) }; this.disposeComponent = function () { v.off(n.Events.onTouchStartOrClick); a.off(n.Events.onTouchStartOrClick); y.off(n.Events.onTouchStartOrClick); p.off(n.Events.onTouchStartOrClick); this.seletedTab = null; l.remove(); l = null; c = null; this.winNumber = null; this.tableName = null; this.columnSortName = null; this.columnYesNoName = null; this.keyColumnName = null; this.identifierColumnName = null; this.identifierTranslated = !1; this.parentColumnName = null; this.aPanel = null; this.log = null; h = null; s = null; y = p = v = a = null; this.btn_Click = this.setListOptions = this.getlstModel = this.setLabelName = this.setListOptions = this.getRoot = this.getId = null; console.log("dispose vSortTab") } }; n.VSortTab.prototype.notifyFireChanged = function (n) { this.aContentPane ? this.aContentPane.aSave.setEnabled(n) : this.aPanel && this.aPanel.aSave.setEnabled(n) }; n.VSortTab.prototype.dynInit = function (t, i, r) { var e = !n.Env.isBaseLanguage(n.Env.getCtx(), ""), o = "VIS_122", f = [], u, s; f[0] = new n.DB.SqlParam("@AD_Table_ID", t); f[1] = new n.DB.SqlParam("@AD_ColumnSortOrder_ID", i); f[2] = new n.DB.SqlParam("@AD_ColumnSortYesNo_ID", r); e && (o = "VIS_123", f = [], f[0] = new n.DB.SqlParam("@AD_Table_ID", t), f[1] = new n.DB.SqlParam("@AD_ColumnSortOrder_ID", i), f[2] = new n.DB.SqlParam("@AD_ColumnSortYesNo_ID", r), f[3] = new n.DB.SqlParam("@AD_Language", n.Env.getAD_Language(n.Env.getCtx()))); u = this; s = ""; a(o, f, function (t) { if (t != null) { for (var f = ""; t.read();)u.tableName = t.getString(0), i == t.get(1) ? (u.columnSortName = t.getString(2), f = t.getString(3)) : r == t.get(1) ? u.columnYesNoName = t.getString(2) : t.getString(4) == "Y" ? u.parentColumnName = t.getString(2) : t.getString(5) == "Y" ? u.keyColumnName = t.getString(2) : t.getString(6) == "Y" && (u.identifierColumnName = t.getString(2), e && (u.identifierTranslated = "Y" == t.getString(7))); t.close(); u.setLabelName(n.Msg.getMsg("Available"), f) } u = null }) }; n.VSortTab.prototype.setVisible = function (n) { n ? this.getRoot().show() : this.getRoot().hide() }; n.VSortTab.prototype.loadData = function () { var h = n.Env.getCtx().getWindowContext(this.winNumber, this.parentColumnName), c = n.dataContext.getJSONData(n.Application.contextUrl + "Form/LoadSortData", { AD_Table_ID: this.AD_Table_ID, AD_ColumnSortOrder_ID: this.AD_ColumnSortOrder_ID, AD_ColumnSortYesNo_ID: this.AD_ColumnSortYesNo_ID, AD_Language: n.Env.getAD_Language(n.Env.getCtx()), ID: h, isTrl: !n.Env.isBaseLanguage(n.Env.getCtx(), "") }, null), t = (new n.DB.DataReader).toJson(JSON.stringify(c)), e = "", o = "", i = [], f; try { while (t.read()) { var r = t.get(0), l = t.getString(1), u = t.get(2), s = u != 0; this.columnYesNoName != null && (s = t.getString(3) == "Y"); f = "<li data-value='" + r + "'>" + l + "<\/li>"; s ? (e += f, i.push({ key: r, value: u })) : (o += f, i.push({ key: r, value: u })) } t.close(); t.dispose(); this.setOldValues(i); this.setListOptions(o, e) } catch (a) { this.log.log(n.Logging.Level.SEVERE, sql, a) } this.notifyFireChanged(!1) }; n.VSortTab.prototype.getIsEnabled = function () { var n = !1; return this.aContentPane ? n = this.aContentPane.aSave.getIsEnabled() : this.aPanel && (n = this.aPanel.aSave.getIsEnabled()), n }; n.VSortTab.prototype.saveData = function () { var u; if (this.getIsEnabled()) { var f = this.getlstModel(), e = this, o = this.tableName, s = this.columnSortName, h = this.columnYesNoName, c = this.keyColumnName, i = [], r = []; f.each(function (n, u) { i.push(t(u).data("value")); r.push("N") }); u = this.getlstModel(!0); u.each(function (n, u) { i.push(t(u).data("value")); r.push("Y") }); t.ajax({ url: n.Application.contextUrl + "Form/SetFieldsSorting", async: !1, type: "POST", data: { values: JSON.stringify(i), noYes: JSON.stringify(r), tableName: o, keyColumnName: c, columnSortName: s, columnYesNoName: h, oldValues: JSON.stringify(e.getOldValues()) }, success: function () { }, error: function () { } }) } }; n.VSortTab.prototype.unRegisterAPanel = function () { this.saveData(); this.aPanel = null }; n.VSortTab.prototype.registerAPanel = function (n) { this.aPanel = n }; n.VSortTab.prototype.addSubTabDataStatusListner = function (n) { this.aContentPane = n }; n.VSortTab.prototype.removeSubTabDataStatusListner = function () { this.aContentPane = null }; n.VSortTab.prototype.sizeChanged = function (n) { this.getRoot().height(n) }; n.VSortTab.prototype.dispose = function () { this.disposeComponent() }; n.RecordInfo = function (i, r) { function c() { e = null; s = null; f.remove(); f = null } var e = null, o = i, s = n.Logging.VLogger.getVLogger("VIS.RecordInfo"), f = t("<div style='min-width:550px;max-width:600px'>"), u = null, h = { CreatedBy: r.CreatedBy, Created: r.Created, Updated: r.Updated, UpdatedBy: r.UpdatedBy, Info: r.Info, AD_Table_ID: r.AD_Table_ID, Record_ID: r.Record_ID }; n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetRecordInfo", { dse: h }, function (n) { var s, h, u, c, o; if (f.html("<span>" + n.Info + "<\/span>"), n.ShowGrid) { s = t("<table class='vis-advancedSearchTable'>"); h = t("<div class='vis-advancedSearchTableWrap vis-table-responsive' style='max-height:200px;overflow-y:auto'>").append(s); f.append(h); var i = "", e = "", r = null; for (u = 0, c = n.Rows.length; u < c; u++) { if (u == 0) { for (i += '<thead><tr class="vis-advancedSearchTableHead">', o = 0; o < n.Headers.length; o++)i += "<th>" + n.Headers[o] + "<\/th>"; i += "<\/tr><\/thead><tbody>" } e = '<tr class="vis-advancedSearchTableRow">'; r = n.Rows[u]; e += "<td>" + r.AD_Column_ID + "<\/td><td>" + r.NewValue + "<\/td><td>" + r.OldValue + "<\/td><td>" + r.UpdatedBy + "<\/td><td>" + Globalize.format(new Date(r.Updated), "f") + "<\/td>"; e += "<\/tr>"; i += e } i += "<\/tbody>"; s.html(i) } }); this.show = function () { u = new n.ChildDialog; u.setTitle(o); u.setContent(f); u.setPosition({ my: "center bottom-3" }); u.close = function () { c() }; u.show() } }; n.AWindow = i; n.AppsAction = r; n.StatusBar = u }(VIS, jQuery), function (n) { n.VTabbedPane = function () { var n = !1; this.oldTabIndex = -1; this.Items = []; this.ItemsIds = []; this.count = 0; this.dependents = []; this.TabItems = []; this.TabLevelsItems = []; this.TabLevels = []; this.tabLIObj = []; this.contentPane = null; this.aTabPaneMgr = null; this.getIsWorkbench = function () { return n } }; n.VTabbedPane.prototype.init = function (t, i) { this.aPanel = t; this.multiTabView = i; i && (this.contentPane = new n.ContentPane(this, t.getIncludedEmptyArea())) }; n.VTabbedPane.prototype.setTabObject = function (n) { this.tabObj = n }; n.VTabbedPane.prototype.finishLayout = function (n) { this.contentPane && this.contentPane.finishLayout(n) }; n.VTabbedPane.prototype.addTab = function (t, i, r, u) { var s, e, h, o, f; for (this.ItemsIds[this.count] = t, this.Items[this.count] = r, this.TabItems.push(u), s = i.getDependentOn(), e = 0; e < s.length; e++)h = s[e], this.dependents.indexOf(h) < 0 && this.dependents.push(h); if (this.count++, this.multiTabView) { o = i.getTabLevel(); this.TabLevels.push(o); var t = "st_" + u.getAction(), c = { action: t, text: i.getName(), toolTipText: i.getDescription(), textOnly: !0, iconName: "" }, l = new n.AppsAction(c); for (f in this.TabLevelsItems) this.TabLevelsItems[f].TabLevel <= o && (this.TabLevelsItems[f].ChildEle.push(r), this.TabLevelsItems[f].ChildTabs.push(i), this.TabLevelsItems[f].ChildTabsItems.push(l)); this.TabLevelsItems.push({ TabLevel: o, ChildEle: [], ChildTabs: [], ChildTabsItems: [], Id: t }) } }; n.VTabbedPane.prototype.getIsTabChanged = function (t) { var u = this.ItemsIds.indexOf(t), f = this.oldTabIndex, r, h, i, e, s, o; if (u === f) return console.log("same tab"), !1; if (i = this.Items[u], r = null, i instanceof n.GridController && (r = i, h = r.getIsDisplayed(), !h)) return !1; if (r != null && f >= 0 && u != f && (i = this.Items[f], i != null && i instanceof n.GridController)) { if (r.getTabLevel() > i.getTabLevel() + 1) { for (e = u - 1; e >= 0; e--)if (s = this.Items[e], o = null, s instanceof n.GridController && (o = s, o.getTabLevel() == i.getTabLevel() + 1)) return n.ADialog.warn("TabSwitchJumpGo", !0, "", o.getTitle()), !1; return n.ADialog.warn("TabSwitchJump"), !1 } i.setMnemonics(!1) } return r != null && r.setMnemonics(!0), this.oldTabIndex = u, !0 }; n.VTabbedPane.prototype.restoreTabChange = function () { this.oldTabIndex = -1 }; n.VTabbedPane.prototype.getNextTabId = function (n) { var t, i; return (!n || n < 0) && (n = 0), n >= this.ItemsIds.length && (n = this.ItemsIds.length - 1), t = this.oldTabIndex, t = n, i = null, t != this.oldTabIndex ? this.ItemsIds[t] : this.ItemsIds[this.oldTabIndex] }; n.VTabbedPane.prototype.getPreviousTabId = function () { return this.oldTabIndex > 0 ? this.ItemsIds[this.oldTabIndex - 1] : this.ItemsIds[this.oldTabIndex] }; n.VTabbedPane.prototype.getTabElement = function () { return this.Items[this.oldTabIndex] }; n.VTabbedPane.prototype.getSelectedIndex = function () { return this.oldTabIndex }; n.VTabbedPane.prototype.sizeChanged = function (n, t) { for (var i in this.Items) this.Items[i].sizeChanged(n, t) }; n.VTabbedPane.prototype.evaluate = function (t) { var r = t == null, u = null, i, f, e, o; if (r || (u = t, r = u != null ? this.dependents.indexOf(u) > -1 : !0), r) for (i = 0; i < this.TabItems.length; i++)f = this.Items[i], f instanceof n.GridController && (e = f, o = e.getIsDisplayed(), this.TabItems[i].setEnabled(o)) }; n.VTabbedPane.prototype.setTabControl = function (n) { var r = this.aPanel.getTabControl(), t, i; if (this.multiTabView) for (t = 0; t < n.length; t++)i = n[t].getListItm(), this.tabLIObj[n[t].action] = i, r.append(i.hide()); else { for (r = this.aPanel.getTabControl(), t = 0; t < n.length; t++)i = n[t].getListItm(), this.tabLIObj[n[t].action] = i, n[t].isHideTab && i.hide(), r.append(i); this.aPanel.setTabNavigation() } }; n.VTabbedPane.prototype.setSelectedTab = function (n) { var r, i, t; if (this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"), this.selectedTab = this.tabLIObj[n], this.selectedTab.addClass("vis-apanel-tab-selected"), this.multiTabView) { r = this.aPanel.getTabControl(); for (i in this.tabLIObj) this.tabLIObj[i].hide(); for (t = 0; t <= this.oldTabIndex; t++)this.tabLIObj[this.ItemsIds[t]].show(); this.contentPane.setTabControl(this.TabLevelsItems[this.oldTabIndex]) } }; n.VTabbedPane.prototype.getAPanel = function () { return this.aPanel }; n.VTabbedPane.prototype.notifyDataChanged = function () { this.multiTabView && this.contentPane.dataStatusChanged() }; n.VTabbedPane.prototype.sizeChanged = function () { this.multiTabView && this.contentPane.sizeChanged(); return }; n.VTabbedPane.prototype.refresh = function () { this.multiTabView && this.contentPane.refresh(); return }; n.VTabbedPane.prototype.keyDown = function (n) { return this.contentPane && this.contentPane.keyDown && this.contentPane.keyDown(n), this }; n.VTabbedPane.prototype.dispose = function () { var t, n; for (t in this.Items) this.Items[t].dispose(), this.Items[t] = null; if (this.TabItems.length = 0, this.TabItems = null, this.Items.length = 0, this.Items = null, this.ItemsIds.length = 0, this.ItemsIds = null, this.dependents.length = 0, this.dependents = null, this.TabAppsItems) for (n = 0; n < this.TabAppsItems.length; n++)this.TabAppsItems[n].dispose(); this.contentPane && this.contentPane.dispose(); this.contentPane = null; this.TabAppsItems = null } }(VIS, jQuery), function (n, t) { function i(i, r, u, f) { var l = f.getHtmlStyle(), v = '<div class="input-group vis-input-wrap">', o, s, e, c, h, a; if (r && (r.getControl()[0].tagName == "TEXTAREA" || r.getControl().hasClass("vis-ev-col-img-ctrl")) && (v = '<div class="input-group vis-input-wrap vis-ev-full-h">'), o = t(v), f.getIsLink() || f.getDisplayType() == n.DisplayType.Button || f.getShowIcon() && (f.getFontClass() != "" || f.getImageName() != "") && (s = ['<div class="input-group-prepend"><span class="input-group-text vis-color-primary">'], f.getFontClass() != "" ? s.push('<i class="' + f.getFontClass() + '"><\/i>') : s.push('<img src="' + n.Application.contextUrl + "Images/Thumb16x16/" + f.getImageName() + '"><\/img>'), s.push("<\/span><\/div>"), o.append(s.join(" "))), r != null && l != "" && (f.getDisplayType() == n.DisplayType.ProgressBar ? r.setHtmlStyle(l) : r.getControl().attr("style", l)), e = t("<div class='vis-control-wrap'>"), r && (r.getControl()[0].tagName == "INPUT" || r.getControl()[0].tagName == "SELECT" || r.getControl()[0].tagName == "TEXTAREA" || r.getControl()[0].className == "vis-progressCtrlWrap") && r.getControl()[0].type != "checkbox" ? (e.append(r.getControl().attr("placeholder", " ").attr("data-placeholder", "")), i != null && e.append(i.getControl())) : (i != null && e.append(i.getControl()), r && e.append(r.getControl())), f.getDisplayType() == n.DisplayType.Label || f.getIsLink() || f.getDisplayType() == n.DisplayType.TelePhone || e.append("<span class='vis-ev-ctrlinfowrap' data-colname='" + f.getColumnName() + "' title='" + f.getDescription() + "'  tabindex='-1' data-toggle='popover' data-trigger='focus'><i class='vis vis-info' aria-hidden='true'><\/i><\/span'>"), e.append("<span class='vis-ev-col-msign'><i class='fa fa-exclamation' aria-hidden='true'><\/span'>"), o.append(e), r && (c = r.getBtnCount(), c > 0)) { for (r.getControl().attr("data-hasBtn", " "), h = 0; h < c;)a = r.getBtn(h), a != null && o.append(t('<div class="input-group-append">').append(a)), ++h; c = -1; h = 0 } u.append(o); f.getDisplayType() == n.DisplayType.TelePhone && (r.init(), e.css("z-index", "auto")) } n.VGridPanel = function () { function at() { h = t("<div class='vis-ad-w-p-vc-ev-grid'>"); h.on("click", "span.vis-ev-ctrlinfowrap", ct); h.on("click", "span.vis-ev-fgbtn", kt) } function ct(n) { var i = t(n.currentTarget), r = i.data("colname"); r != "" && (g && (g.popover("dispose"), g = null), i.attr("data-content", et[r].help), g = i.popover("show")) } function nt(n, i, r, u) { n && (tt = e = t("<div class='vis-ev-col'><\/div>")); i && (tt = a = t("<div class='vis-ev-col vis-ev-col-start2'><\/div>")); r && (tt = p = t("<div class='vis-ev-col vis-ev-col-start3'><\/div>")); u && (tt = w = t("<div class='vis-ev-col vis-ev-col-start4'><\/div>")) } function k(n) { n ? n.rSpan <= 1 && (n = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }) : (c = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }, u = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }, f = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }, l = { rSpan: 1, cSpan: 0, cSpace: 0, set: !1 }) } function vt(n) { c.rSpan > 1 && (c.set && n == 1 && c.cSpan < 4 ? c.set = !1 : --c.rSpan, k(c)); u.rSpan > 1 && (n == 2 && u.set && u.cSpan < 3 ? u.set = !1 : --u.rSpan, k(u)); f.rSpan > 1 && (n == 3 && f.set && f.cSpan < 2 ? f.set = !1 : --f.rSpan, k(f)); l.rSpan > 1 && (--l.rSpan, k(l)) } function ot(n, t) { var s = n.getFieldBreadth(), o = n.getFieldColSpan(), i = n.getCellSpace(), h = n.getIsLongField(), v = n.getIsLineBreak(); if (v && (k(), t = !0), t && (vt(r), it(), r = 0), r == 0) if (h) it(), k(), nt(!0), e.addClass("vis-ev-col-end4"), r = 4; else if (c.rSpan > 1) r += c.cSpan; else if (i > 0) i > 3 && (i = 3), r += i, i = 0; else if (e) r += 1; else { nt(!0); o == 2 ? u.rSpan <= 1 && e.addClass("vis-ev-col-end2") : o == 3 ? u.rSpan <= 1 && f.rSpan <= 1 ? e.addClass("vis-ev-col-end3") : u.cSpan < 1 && e.addClass("vis-ev-col-end2") : o > 3 && (u.rSpan <= 1 && f.rSpan <= 1 && l.rSpan <= 1 ? e.addClass("vis-ev-col-end4") : u.rSpan <= 1 && f.rSpan <= 1 ? e.addClass("vis-ev-col-end3") : u.rSpan <= 1 && e.addClass("vis-ev-col-end2")); r += o - 1; s > 1 && (c.rSpan = s + 1, c.set = !0, c.cSpan = o, c.cSpace = i, e.css("grid-row", "span " + s)); return } if (r == 1) if (u.rSpan > 1) r += u.cSpan; else if (i > 0) i > 2 && (i = 2), r += i, i = 0; else if (a) r += 1; else { nt(!1, !0); o == 2 ? f.rSpan <= 1 && a.addClass("vis-ev-col-end3") : o >= 3 && (f.rSpan <= 1 && l.rSpan <= 1 ? a.addClass("vis-ev-col-end4") : f.cSpan < 1 && a.addClass("vis-ev-col-end3")); r += o - 1; s > 1 && (u.rSpan = s + 1, u.set = !0, u.cSpan = o, u.cSpace = i, a.css("grid-row", "span " + s)); return } if (r == 2) if (f.rSpan > 1) r += f.cSpan; else if (i > 0) i > 1 && (i = 1), r += i, i = 0; else if (p) r += 1; else { nt(!1, !1, !0); o >= 2 && l.rSpan <= 1 && p.addClass("vis-ev-col-end4"); r += o - 1; s > 1 && (f.rSpan = s + 1, f.set = !0, f.cSpan = o, f.cSpace = i, p.css("grid-row", "span " + s)); return } if (r == 3) { l.rSpan > 1 || (w ? t = !0 : (nt(!1, !1, !1, !0), o >= 2 && w.addClass("vis-ev-col-end4"), s > 1 && (l.rSpan = s + 1, l.set = !0, l.cSpan = o, l.cSpace = i, w.css("grid-row", "span " + s)))); return } e || a || p || w ? !h && r > 3 && ot(n, !0) : ot(n, t) } function it() { e && h.append(e); a && h.append(a); p && h.append(p); w && h.append(w); e = a = p = w = $td4 = null } function yt(i) { i.stopPropagation(); var r = t(this), o = t(i.target), h = r.data("name") + "_" + r.data("seqno"), s = r.data("display"), u = t(r.find(".vis-ev-col-fg-more")[0]), f = !1, e = !1; if (o.is("span") || o.hasClass("vis-ev-col-fg-more")) { if (s !== "show") return; f = !0; r.data("showmore") == "Y" ? (e = !0, r.data("showmore", "N"), u.text(n.Msg.getMsg("ShowLess"))) : (r.data("showmore", "Y"), u.text(n.Msg.getMsg("ShowMore"))) } else r.data("showmore") == "N" && (e = !0), s === "show" ? (r.data("display", "hide"), u.hide(), t(r.children()[2]).addClass("vis-ev-col-fg-rotate")) : (r.data("display", "show"), u.show(), f = !0, t(r.children()[2]).removeClass("vis-ev-col-fg-rotate")); st(h, f, e) } function st(n, t, i) { for (var r, f, u, s = o[n], e = 0; e < s.length; e++) { for (r = s[e], f = v[r.getColumnName()], u = 0; u < f.length; u++)f[u].tag = t, f[u].setVisible(t && r.getIsDisplayed(!0)); t && r.getIsDisplayed(!0) && (r.getIsFieldgroupDefault() || i) ? y[r.getColumnName()].show() : y[r.getColumnName()].hide() } } function pt(i) { var f, u; if (s == null && (s = ""), i == null || i.length == 0 || i.equals(s)) return !1; f = Object.keys(o).length + 1; s = i; it(); k(); nt(!0); u = t('<div class="vis-ev-col-fieldgroup" data-showmore="Y" data-name="' + i + '" data-display="show" data-seqno="' + f + '"><span class="vis-ev-col-fg-hdr"  >' + i + ' <\/span> <button class="vis-ev-col-fg-more">' + n.Msg.getMsg("ShowMore") + '<\/button><button class="vis-ev-fg-arrowBtn"><i class= "fa fa-angle-up"><\/button><\/span><\/div>'); e.append(u); e.addClass("vis-ev-col-end4"); r = 0; u.on("click", yt); return !0 } function lt(n, t) { v[n] ? v[n].push(t) : (v[n] = [], v[n].push(t)) } function wt(n) { if (s != null && !s.equals("")) { var t = null, i = Object.keys(o).length, r = s + "_" + i; o[r] && (t = o[r]); t == null && (t = [], o[s + "_" + (i + 1)] = t); t.push(n); n.getIsFieldgroupDefault() || y[n.getColumnName()].hide() } } function bt(n) { k(); nt(!1, !1, !1, !0); b.data("position", n); tt.append(b); it(); ht(n, !0) } function ht(n, t) { var u = 1, r, i; for (r in o) u >= n && (i = h.find("[data-name='" + r + "'],[data-seqno=" + u + "]"), i && i.length > 0 && (t ? (i.hide(), st(r, !1, !1)) : (i.show(), st(r, !0, i.data("showmore") == "N")))), u++ } function kt() { var t = b.data("state"), i = b.data("position"); t == "Y" ? (ht(i, !0), t = "N", b.text(n.Msg.getMsg("More") + "...")) : (ht(i, !1), t = "Y", b.text("..." + n.Msg.getMsg("Less"))); b.data("state", t) } var s = null, r = -2, rt = -1, d = [], ut = [], ft = {}, h, e, a, p, w, b = t('<span class="vis-ev-fgbtn" data-state="N">' + n.Msg.getMsg("More") + "...<\/span>"), tt = null, c = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, u = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, f = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, l = { rSpan: 1, cSpan: 0, cSpace: 0, orgRSpan: 1 }, v = {}, o = {}, y = {}, et = {}, g = null; at(); this.addField = function (u, f) { var s = !1, a, e, h, c, o, v, l; if (f.getIsLink() && f.getIsRightPaneLink()) { d[++rt] = u; ut.push(u); return } if (f.getDisplayType() == n.DisplayType.Button && f.getAD_Reference_Value_ID() == 435 && (a = f.getDefault(n.context, this.windowNo), ft[a] = u), e = n.VControlFactory.getLabel(f), e != null || u != null) { if (h = f.getIsSameLine(), pt(f.getFieldGroup(), r) && (h = !1), h ? (++r, r > 3 ? (h = !1, s = !0) : r < 0 && (s = !0)) : s = !0, ot(f, s), e != null && (f.getDescription().length > 0, lt(f.getColumnName(), e), d[++rt] = e), u != null) { c = f.getVFormat(); o = f.getVFormatError(); switch (c) { case "": break; default: u.getControl().on("focusout", function (i) { var r = new RegExp(c); n.DisplayType.IsString(f.getDisplayType()) && t(i.target).val() != null && t(i.target).val().toString().trim().length > 0 && (r.test(t(i.target).val()) || (!o && o.length > 0 && (o = n.Msg.getMsg("RegexFailed") + ":" + f.getHeader()), n.ADialogUI.warn(o, "", function () { t(i.target).focus() }))) }) }v = u.getBtnCount(); lt(f.getColumnName(), u); d[++rt] = u } (e != null || u != null) && (l = tt, i(e, u, l, f), y[f.getColumnName()] = l, wt(f), et[f.getColumnName()] = { help: f.getHelp() }) } }; this.flushLayout = function (n) { it(); n > 0 && Object.keys(o).length >= n && bt(n) }; this.getRoot = function () { return h }; this.getComponents = function () { return d }; this.getLinkComponents = function () { return ut }; this.setEnabled = function (n, t) { Object.keys(ft).length > 0 && ft[n] && ft[n].setReadOnly(!t) }; this.setVisible = function (n, t) { y[n] && (t ? y[n].show() : y[n].hide()) }; this.dispose = function () { var n, t; for (h.off("click", "span.vis-ev-ctrlinfowrap", ct), h.off(), et = {}, g && g.popover("dispose"), g = null, ut.length = 0, ut = null; d.length > 0;)d.pop().dispose(); for (n in v) v[n] = null, delete v[n]; v = null; y = {}; y = null; for (t in o) o[t].length = 0, o[t] = null, delete o[n]; o = null; rt = null; d = null; h.remove(); h = null; this.addField = null; b = null } } }(VIS, jQuery), function (n, t) { function e(n) { function f(n) { if (i[0].clientHeight + i[0].scrollTop >= i[0].scrollHeight ? r.css("opacity", ".6") : r.css("opacity", "1"), i[0].scrollTop == 0 ? u.css("opacity", ".6") : u.css("opacity", "1"), n == "up") { if (u.css("opacity") < 1) return; i[0].scrollTop -= 60 } else { if (r.css("opacity") < 1) return; i[0].scrollTop += 60 } } var u = t('<div class=vis-cv-rd-top><i class="vis vis-arrow-up"><\/i><\/div>'), r = t('<div class=vis-cv-rd-down><i class="vis vis-arrow-down"><\/i><\/div>'), i = t("<div class=vis-cv-rd-body>"); n.append(u).append(i).append(r); this.addItem = function (n) { var u = t('<span class="vis-cv-rd-body-item">'); u.text(n); i.append(u); i[0].clientHeight < i[0].scrollHeight && r.css("opacity", "1") }; this.reset = function () { i.empty(); u.css("opacity", ".5"); r.css("opacity", ".5") }; this.dispose = function () { i.empty(); u.off(); r.off() }; u.on("click", function () { f("up") }); r.on("click", function () { f("down") }) } function r() { function g() { var f = t("body").width() - 65; o = t("<div class='vis-cv-body vis-noselect'>"); y = t("<div class='vis-cv-ld'>"); c = t("<div class='vis-cv-rd'>"); u = t("<div class='vis-cv-main' style='max-width:" + f + "px'>"); s = t("<div class='vis-cv-header'>"); r = t('<input  class="vis-vs-card-autoComplete" style="display:inline">'); v = t("<p>"); h = t('<span class="vis-ad-w-p-tb-s-icon-down vis-cv-cardlist"><i class="fa fa-ellipsis-h"><\/i><\/span>'); l = t("<div class='vis-cv-groupHeader'style='overflow:hidden; max-width:" + f + "px'>"); a = t('<a href="javascript:;" class="vis-dailogOpen">' + n.Msg.getMsg("editCardView") + "<\/a>"); s.append(a).append(r).append(h).append(v); y.append(s).append(l).append(u); o.append(y).append(c); u.scroll(function () { p() }); nt(); a.click(function () { i.aPanel.cmd_cardDialog() }) } function nt() { r.autocomplete({ select: function (n, i) { b(i.item.id, i.item.label); var r = t(n.currentTarget); r.find(".vis-cv-card-selected-card").removeClass("vis-cv-card-selected-card"); r.find('[data-checkid="' + i.item.id + '"]').addClass("vis-cv-card-selected-card"); n.stopPropagation() }, minLength: 0, open: function () { i.isAutoCompleteOpen = !0 }, close: function () { window.setTimeout(function () { i.isAutoCompleteOpen = !1 }, 600) }, source: [] }); r.autocomplete().data("ui-autocomplete")._renderItem = function (r, u) { var f = null, o = null, e; f = u.isDefault == "Y" ? t("<span title='" + n.Msg.getMsg("DefaultCard") + "'  data-id='" + u.id + "' class='VIS-winSearch-defaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("MakeDefaultCard") + "' data-id='" + u.id + "' class='VIS-winSearch-NonDefaultIcon'><\/span>"); o = t("<span class='fa fa-check-circle vis-cv-card-selected-card-listitem'><\/span>"); e = null; e = i.AD_CardView_ID == u.id ? t("<li style='white-space:normal !important; max-width:210px !important'>").append(t("<a  data-checkid='" + u.id + "'  class='vis-cv-card-selected-card' style='display:block' title='" + u.title + "'><\/a>").append(o).append("<p>" + u.label + "<\/p>").append(f)).prependTo(r) : t("<li style='white-space:normal !important; max-width:210px !important'>").append(t("<a  data-checkid='" + u.id + "'  style='display:block' title='" + u.title + "'><\/a>").append(o).append("<p>" + u.label + "<\/p>").append(f)).prependTo(r); u.Created != n.context.getAD_User_ID() && e.find("p").text(u.label + " (S)"); f.on("click", function () { var r = t(this).data("id"); t.ajax({ url: n.Application.contextUrl + "JsonData/InsertUpdateDefaultCard", dataType: "json", data: { AD_Tab_ID: i.mTab.getAD_Tab_ID(), AD_Card_ID: r }, success: function () { }, error: function (n) { console.log(n) } }) }); return e } } function p() { l.scrollLeft(u.scrollLeft()) } var d, a; this.cGroupInfo = {}; this.cCols = []; this.cConditions = []; this.cGroup = null; this.mTab; this.AD_Window_ID; this.AD_Tab_ID; this.groupCtrls = []; this.fields = []; this.grpCount = 0; this.oldGrpCount = 0; this.grpColName = ""; this.hasIncludedCols = !1; this.GroupSequence = null; this.ExcludedGroup = null; this.onCardEdit = null; this.cardViewData = null; var o, u = null, s, r = null, v = null, h = null, i = this, l = null; this.isAutoCompleteOpen = !1; var c = null, y = null; this.cardID = 0; d = null; a = null; this.editID = 0; this.VCardRightPanel = null; this.SyncScroll = function () { p() }; g(); this.VCardRightPanel = new e(c); this.getRoot = function () { return o }; this.getRightDiv = function () { return c }; this.getBody = function () { return u }; this.setHeader = function (n) { v.text(n) }; this.getHeader = function () { return s }; this.getGroupHeader = function () { return l }; this.sizeChanged = function (n, t) { o.height(n - 12 + "px"); c.height(n - 12 + "px"); this.calculateWidth(t) }; this.setBusy = function () { this.aPanel.setBusy(!1) }; this.calculateWidth = function () { this.navigate() }; u.on("mousedown touchstart", "div.vis-cv-card", function (n) { var u, r, f; if (i.onCardEdit) if (u = t(n.target), u[0].nodeName == "SPAN" && u.hasClass("vis-cv-card-edit")) { if (r = u.data("recid"), r || r === 0) { i.editID = r; i.onCardEdit({ recid: r }) } } else { for (f = 0; !u.hasClass("vis-cv-card");) { if (f > 5) break; u = u.parent(); f++ } if (r = u.data("recid"), r || r === 0) { i.onCardEdit({ recid: r }, !0); i.navigate(r, !1, !0) } } n.stopPropagation() }); this.getAD_CardView_ID = function () { return this.AD_CardView_ID }; this.getField_Group_ID = function () { return this.cGroup ? this.cGroup.getAD_Field_ID() : 0 }; this.getCardCmb = function () { return r }; var tt = function () { r.one("focus", w); r.on("change", b); h.on("click", function () { w() }) }, w = function () { var t = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetCardsInfo", { AD_Tab_ID: i.mTab.getAD_Tab_ID() }); t && i.fillCardViewList(t, !0) }, b = function (n, t) { i.getCardViewData(i.mTab, n, t) }, f = null, k = null; this.navigate = function (n, t, i) { (n && (k = n), t) || (f && f.length > 0 && f.toggleClass("vis-cv-card-selected"), f = u.find("div.vis-cv-card[name~=vc_" + k + "]"), f.length != 0 && (f.toggleClass("vis-cv-card-selected"), i || f[0].scrollIntoView())) }; this.dC = function () { for (u.off("click"), this.onCardEdit = null, i = null, o.remove(), u.remove(), s.remove(), r.remove(), r = null, h.remove(), h = null, o = u = s = null, this.getRoot = this.getBody = this.setHeader = this.getHeader = this.dC = null, f = null, this.cGroupInfo = {}, this.cCols.length = 0, this.cConditions.length = 0, this.cGroup = null, this.mTab = null, this.fields.length = 0, this.grpCount = null; this.groupCtrls.length > 0;)this.groupCtrls.pop().dispose(); this.VCardRightPanel && this.VCardRightPanel.dispose(); this.VCardRightPanel = null }; this.fillCardViewList = function (t, i) { var f, u; if (r.empty(), f = [], t && t.length > 0) { for (u = t.length - 1; u >= 0; u--)t[u].Name = n.Utility.decodeText(t[u].Name), t[u].IsDefault ? f.push({ title: t[u].Name, label: t[u].Name, value: t[u].Name, id: t[u].AD_CardView_ID, isDefault: "Y", Created: t[u].Created }) : f.push({ title: t[u].Name, label: t[u].Name, value: t[u].Name, id: t[u].AD_CardView_ID, isDefault: "N", Created: t[u].Created }); r.autocomplete("option", "source", f, "position", { my: "left top", at: "left bottom" }); i && r.autocomplete("search", ""); this.AD_CardView_ID && r.val(this.cardName) } }; tt() } function u(r, u, f, e, o, s, h, c, l, a) { function w() { var n = "<div class='vis-cv-cg vis-pull-left'><div data-key='" + l + "'  class='vis-cv-grpbody'><\/div><\/div><\/div>"; v = t(n); y = v.find(".vis-cv-grpbody"); r && v.css({ "margin-right": "0px", width: "100%" }) } function b() { var t = null, f; if (this.fieldStyles = {}, u) for (f = 0; f < u.length; f++)t = new i(e, u[f], s, h, c, windowNo, this.fieldStyles, a), r && t.getRoot().width("240px").css({ margin: "5px 12px 12px 5px", float: n.Application.isRTL ? "right" : "left" }), f == 0 && t.addStyleToDom(), p.push(t), y.append(t.getRoot()), t.evaluate(o) } var v = null, y, p = []; windowNo = a.curTab.getWindowNo(); w(); this.getRoot = function () { return v }; this.getBody = function () { return y }; this.setWidth = function (n) { v.width(n) }; b(); this.dC = function () { while (p.length > 0) p.pop().dispose(); v.remove(); v = null; y = null; this.getBody = null; this.getRoot = null } } function i(i, r, u, f, e, o, s, h) { var l, p, c, a, w, v, b; this.record = r; this.aPanel = h; this.dynamicStyle = []; this.textAlignEnum = { C: "Center", R: "flex-end", L: "flex-start" }; this.alignItemEnum = { C: "Center", T: "flex-start", B: "flex-end" }; this.dynamicStyle = []; this.styleTag = document.createElement("style"); this.windowNo = o; this.fieldStyles = s; l = t('<div class="vis-cv-card va-dragdrop" data-recid=' + r.recid + " name = vc_" + r.recid + " ><\/div>"); p = t('<span class="glyphicon glyphicon-pencil vis-cv-card-edit vis-pull-right" data-recid=' + r.recid + "><\/span>"); l.append(p); c = null; w = t('<div class="vis-ad-w-p-card_root_common">'); l.append(w); this.fieldStyles["vis-ad-w-p-card-Custom_" + o] || (this.fieldStyles["vis-ad-w-p-card-Custom_" + o] = {}); this.headerCustom = this.fieldStyles["vis-ad-w-p-card-Custom_" + o].headerParentCustomUISettings; this.headerCustom || (this.headerCustom = this.headerParentCustomUISettings(f), this.fieldStyles["vis-ad-w-p-card-Custom_" + o].headerParentCustomUISettings = this.headerCustom); l.addClass(this.headerCustom); this.fieldStyles["root_" + o] || (this.fieldStyles["root_" + o] = {}); this.rootCustomStyle = this.fieldStyles["root_" + o].headerUISettings; this.rootCustomStyle || (this.rootCustomStyle = this.headerUISettings("", e), this.fieldStyles["root_" + o].headerUISettings = this.rootCustomStyle); w.addClass(this.rootCustomStyle); this.setHeaderItems = function (i, r, u, f) { var nt, tt, pt, wt, l, ut, fi, vt, kt, st, dt, gt, e, ot, ni, ti, ei, ii, oi, si, ri, hi, ui; if (i) { nt = null; for (tt in i.HeaderItems) { var h = i.HeaderItems[tt], it = h.StartColumn, ct = h.ColumnSpan, rt = h.StartRow, lt = h.RowSpan, ci = h.JustifyItems, li = h.AlignItems, ai = h.Padding, et = h.BackgroundColor, vi = h.HideFieldIcon, yi = h.HideFieldText, a = h.FieldValueStyle, pi = h.FieldLabelStyle; et || (et = ""); pt = h.FontColor; pt || (pt = ""); wt = h.FontSize; wt || (wt = ""); l = null; ut = null; $divDBIconSpan = t("<span>"); $divDBLevel = t("<span>"); var c = null, at = null, s = null, bt = i.AD_GridLayout_ID; if (this.fieldStyles[it + "_" + ct + "_" + rt + "_" + lt + "_" + bt] || (this.fieldStyles[it + "_" + ct + "_" + rt + "_" + lt + "_" + bt] = {}), this.dynamicClassName = this.fieldStyles[it + "_" + ct + "_" + rt + "_" + lt + "_" + bt].applyCustomUISettings, this.dynamicClassName || (this.dynamicClassName = this.applyCustomUISettings(tt, it, ct, rt, lt, ci, li, et, pt, wt, ai), this.fieldStyles[it + "_" + ct + "_" + rt + "_" + lt + "_" + bt].applyCustomUISettings = this.dynamicClassName), l = r.find("." + this.dynamicClassName), l.length <= 0 && (l = t('<div class="vis-w-p-card-data-f ' + this.dynamicClassName + '">')), h.ColSql.length > 0) { if (ot = {}, c = t('<div class="vis-w-p-header-Label-f"><\/div>'), fi = h.ColSql, s = new n.Controls.VKeyText(fi, this.windowNo, this.windowNo + "_" + tt, !1, null, h.AD_GridLayoutItems_ID), s == null) continue; ot.control = s; vt = { control: ot, field: null }; c.append(s.getControl()); s.setValue(null, !1, f); a = h.FieldValueStyle; a && c.attr("style", a); l.append(c); r.append(l) } else { if (!nt) for (nt = {}, kt = 0; kt < u.length; kt++)st = u[kt], st.getCardViewSeqNo() in nt ? nt[st.getCardViewSeqNo()].push(st) : nt[st.getCardViewSeqNo()] = [st]; if (dt = nt[tt], !dt) continue; for (gt = 0; gt < dt.length; gt++)if (e = dt[gt], e) { e.getCardFieldStyle() && (a = e.getCardFieldStyle()); e.setCardIconHide(vi); e.setCardTextHide(yi); this.fieldStyles[e.getColumnName()] || (this.fieldStyles[e.getColumnName()] = {}); ot = {}; ut = t('<div class="vis-w-p-card-icon-f"><\/div>'); ni = et.indexOf("flex-direction"); ti = ""; ni > -1 && (ei = et.indexOf(";", ni + 14), ti = "display:flex; " + et.substring(ni, ei)); c = t('<div class="vis-w-p-card-Label-f" style="' + ti + '"><\/div>'); $divDBIconSpan = t('<div class="vis-w-p-card-icon-f"><\/div>'); $divDBImgSpan = t('<div class="vis-w-p-card-img-f"><\/div>'); $divDBLevel = t('<div class="vis-w-p-card-Label-f" style="' + ti + '"><\/div>'); at = n.VControlFactory.getHeaderLabel(e, !0); s = n.VControlFactory.getReadOnlyControl(this.curTab, e, !1, !1, !1); e.getOrginalDisplayType() == n.DisplayType.Button && s != null && s.addActionListner(this); this.fieldStyles[e.getColumnName() + "applyCustomUIForLabelValue"] || (this.fieldStyles[e.getColumnName() + "applyCustomUIForLabelValue"] = {}); this.dynamicLabelValue = this.fieldStyles[e.getColumnName() + "applyCustomUIForLabelValue"].applyCustomUIForLabelValue; this.dynamicLabelValue || (this.dynamicLabelValue = this.applyCustomUIForLabelValue(tt, it, rt, e, pi), this.fieldStyles[e.getColumnName() + "applyCustomUIForLabelValue"] = { applyCustomUIForLabelValue: this.dynamicLabelValue }); at && at.getControl().addClass(this.dynamicLabelValue); this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"] || (this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"] = {}); this.dynamicFieldValue = this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"].applyCustomUIForFieldValue; this.dynamicFieldValue || (this.dynamicFieldValue = this.applyCustomUIForFieldValue(tt, it, rt, e, a), this.fieldStyles[e.getColumnName() + "applyCustomUIForFieldValue"] = { applyCustomUIForFieldValue: this.dynamicFieldValue }); s.getControl().addClass(this.dynamicFieldValue); ot.control = s; var vt = { control: ot, field: e }, ft = t("<span><\/span>"), yt = n.VControlFactory.getIcon(e); if (s != null) { ii = null; at && (ii = at.getControl().addClass("vis-w-p-card-data-label")); var p = b(e, f), ht = t("<img>"), w = t("<span>"); if (vt.img = ht, oi = null, e.lookup && e.lookup.gethasImageIdentifier()) { vt.imgspan = w; var o = null, g = null; this.iconStyle = null; n.DisplayType.List == e.lookup.displayType ? (oi = e.lookup.getLovIconType(f[e.getColumnName().toLower()], !0), o = e.lookup.getLOVIconElement(f[e.getColumnName().toLower()], !0), !o && p && (g = p.substring(0, 1), o = g)) : (p = n.Utility.Util.getIdentifierDisplayVal(p), o = k(e, f)); o && !o.contains("Images/") && o.indexOf("fa fa-") == -1 && o.indexOf("vis vis-") == -1 ? (g = o, w.append(g), yt = null) : n.DisplayType.List == e.lookup.displayType ? o && !o.contains("Images/") && (o.indexOf("fa fa-") != -1 || o.indexOf("vis vis-") != -1) ? (g = o, t(o).attr("style", this.iconStyle), w.append(o)) : (ht.attr("src", t(o).attr("src")), w.append(ht)) : o.indexOf("fa fa-") == -1 && o.indexOf("vis vis-") == -1 ? (ht.attr("src", o), w.append(ht)) : (g = t('<i style="' + this.iconStyle + '" class="' + o + '"><\/i>'), w.append(g), yt = null); si = t("<div>"); ri = t('<div class="vis-w-p-card-value-container">'); ft.addClass("vis-w-p-card-icon-fixed"); vt.imgspan = ft; yt != null ? (y(a, ft, t(yt), $divDBLevel, !0), ut.append(ft)) : y(a, c, w, s.getControl(), !0); d(e, g, ht, w, ii, c, ut); ri.append(c); n.DisplayType.List != e.lookup.displayType && c.append(s.getControl()); l.append(si).append(ri); r.append(l); n.DisplayType.List == e.lookup.displayType ? v(p, s, e) : v(p, s, e) } else e.getDisplayType() == n.DisplayType.Image ? (v(p, s, e), hi = s.getControl().find("img"), e.isCardTextHide() || (ui = t('<label for="' + e.getColumnName() + '" class="vis-w-p-card-data-label">' + e.getHeader() + "<\/label>"), ui.addClass(this.dynamicLabelValue), c.append(ui)), $divDBLevel = null, y(a, c, hi, $divDBLevel, !0), l.append(c)) : (y(a, l, ut, c, !1), ft.addClass("vis-w-p-card-icon-fixed"), vt.imgspan = ft, e.getOrginalDisplayType() == n.DisplayType.Button ? ut.remove() : this.setIconsDisplay(e, ut, ft, yt, ii, c), v(p, s, e), c.append(s.getControl())); r.append(l) } } } } } }; this.setIconsDisplay = function (n, t, i, r, u, f) { n.isCardIconHide() || n.isCardTextHide() ? n.isCardIconHide() && n.isCardTextHide() ? t.remove() : !n.isCardIconHide() && n.isCardTextHide() ? (t.append(i.append(r)), u && u.length > 0 && u.hide()) : n.isCardIconHide() && !n.isCardTextHide() && (u && u.length > 0 && f.append(u), t.remove()) : (t.append(i.append(r)), u && u.length > 0 && f.append(u)) }; this.setHeader = function () { var rt, ct, ut, f, st, ht, vt; if (u && u.length > 0) for (rt = 0; rt < u.length; rt++) { var p = u[rt], w = p.HeaderTotalRow, g = p.HeaderTotalColumn, s = p.HeaderBackColor, h = p.HeaderPadding, nt = p.AD_GridLayout_ID; s || (s = ""); h || (h = ""); this.fieldStyles[g + "_" + w + "_" + s + "_" + h + "_" + nt] || (this.fieldStyles[g + "_" + w + "_" + s + "_" + h + "_" + nt] = {}); this.dymcClass = this.fieldStyles[g + "_" + w + "_" + s + "_" + h + "_" + nt].fieldGroupContainerUISettings; this.dymcClass || (this.dymcClass = this.fieldGroupContainerUISettings(g, w, s, h, nt), this.fieldStyles[g + "_" + w + "_" + s + "_" + h + "_" + nt].fieldGroupContainerUISettings = this.dymcClass); ct = t('<div class="' + this.dymcClass + '">'); l.append(ct); this.setHeaderItems(p, ct, i, r) } else for (ut = 0; ut < i.length; ut++) { c = i[ut]; f = r[c.getColumnName().toLowerCase()]; a = c.getOrginalDisplayType(); var ft = n.VControlFactory.getHeaderLabel(c, !0), o = n.VControlFactory.getReadOnlyControl(this.curTab, c, !1, !1, !1), yt = null; if (ft && (yt = ft.getControl().addClass("vis-w-p-card-data-label")), c.getOrginalDisplayType() == n.DisplayType.Button && o != null && o.addActionListner(this), c.lookup && c.lookup.gethasImageIdentifier()) { var et = t('<div class="vis-w-p-card-icon-f"><\/div>'), pt = t('<div class="vis-w-p-card-data-f">'), lt = t('<div class="vis-w-p-card-Label-f"><\/div>'), e = null, tt = null, ot = t("<img>"), at = t("<span>"), it = b(c, r); y(c.cardFieldStyle, pt, et, lt, !0); n.DisplayType.List == c.lookup.displayType ? (e = c.lookup.getLOVIconElement(r[c.getColumnName().toLower()], !0), !e && it && (tt = it.substring(0, 1), e = tt)) : (it = n.Utility.Util.getIdentifierDisplayVal(it), e = k(c, r)); e && !e.contains("Images/") ? (tt = e, at.append(tt)) : n.DisplayType.List == c.lookup.displayType ? ot.attr("src", t(e).attr("src")) : ot.attr("src", e); et.append(at); et.append(ot); d(c, tt, ot, at, yt, lt, et); lt.append(o.getControl()); v(it, o, c); l.append(pt); continue } else if (n.DisplayType.IsLookup(a)) c.getLookup() && (f = c.getLookup().getDisplay(f)), f = f; else if (n.DisplayType.YesNo == a) f = f || f == "Y" ? n.Msg.getMsg("Yes") : f = n.Msg.getMsg("No"); else if (n.DisplayType.IsDate(a)) f ? (f = f.replace("Z", ""), st = new Date(f), f = a == n.DisplayType.Date ? st.toLocaleDateString() : a == n.DisplayType.DateTime ? st.toDateString() : st.toLocaleTimeString()) : f = null; else if (n.DisplayType.Amount == a) ht = n.Utility.Util.getValueOfDecimal(f), f = ht.toLocaleString(); else if (n.DisplayType.Quantity == a) ht = n.Utility.Util.getValueOfDecimal(f), f = ht.toLocaleString(); else if (n.DisplayType.Image == a) { v(f, o, c); ft && l.append(ft.getControl()); l.append(o.getControl()); continue } else if (n.DisplayType.Button == a) { v(f, o, c); l.append(o.getControl()); continue } f || f == 0 || (f = " -- "); f = w2utils.encodeTags(f); c.getIsEncryptedField() && (f = f.replace(/\w|\W/g, "*")); c.getObscureType() && (f = n.Env.getObscureValue(c.getObscureType(), f)); vt = ""; vt = n.Application.isRTL ? "<p><strong title='" + f + "'>" + f + "<\/strong> :" + c.getHeader() + "<\/p>" : "<p>" + c.getHeader() + ": <strong title='" + f + "'>" + f + "<\/strong><\/p>"; l.append(t(vt)) } }; this.setColor = function (n, t) { n && l.css("background", n); t && l.css("color", n) }; p.on("touchstart", function () { t(this).css({ color: "gray" }) }); this.getRoot = function () { return l }; this.setWidth = function (n) { l.width(n) }; this.dC = function () { p.off("touchstart mouseover"); this.styleTag.remove(); this.styleTag = null; l.remove(); l = null; this.getRoot = null; this.dc = null }; v = function (t, i, r) { if (t) { if (t.startsWith && t.startsWith("<") && t.endsWith(">") && (t = t.replace("<", "").replace(">", "")), r.getDisplayType() == n.DisplayType.Image) { var u = i.getValue(); i.getControl().show(); i.setDimension(240, 320); u == t && i.refreshImage(t) } else i.format && (t = i.format.GetFormatAmount(i.format.GetFormatedValue(t), "init", n.Env.isDecimalPoint())); i.setValue(t, !1) } else r.getDisplayType() == n.DisplayType.Image ? (i.getControl().hide(), i.setValue(null, !1)) : r.getOrginalDisplayType() == n.DisplayType.Button && r.getAD_Reference_Value_ID() > 0 ? i.setText("- -") : i.setValue("- -", !0) }; b = function (t, i) { var r = i[t.getColumnName().toLowerCase()], u, f; return r ? (u = t.getDisplayType(), t.lookup ? r = t.lookup.getDisplay(r, !0, !1) : n.DisplayType.IsDate(u) ? r = u == n.DisplayType.DateTime ? new Date(r).toLocaleString() : u == n.DisplayType.Date ? new Date(r).toLocaleDateString() : new Date(r).toLocaleTimeString() : u == n.DisplayType.YesNo ? (f = r.toString(), t.getIsEncryptedColumn() && (f = n.secureEngine.decrypt(f)), r = f.equals("true")) : r = r.toString(), t.getIsEncryptedField() && r && r.length > 0 && (r = r.replace(/[a-zA-Z0-9-. ]/g, "*").replace(/[^a-zA-Z0-9-. ]/g, "*")), t.getObscureType() && r && r.length > 0 && (r = n.Env.getObscureValue(t.getObscureType(), r))) : r = null, r }; this.iconStyle = null; var g = this, k = function (t, i) { var r = i[t.getColumnName().toLowerCase()], u, h, o, f, s, e; if (r = t.lookup.getDisplay(r, !0, !0), r == null || r == "") return ""; if (u = r.indexOf("Images/"), h = r.indexOf("^^"), r != null && r && (u > -1 || h > -1) && (u > -1 ? (f = r.substring(r.indexOf("Images/") + 7, r.lastIndexOf("^^")), f = n.Application.contextUrl + "Images/Thumb32x32/" + f) : u == -1 && h > -1 && (o = r.substring(r.indexOf("***"), r.lastIndexOf("***") + 3), o = o.replace("***", "").replace("***", ""), r = r.replace(r.substring(r.indexOf("***"), r.lastIndexOf("***") + 3), ""), u = r.indexOf("vis vis-"), u == -1 && (u = r.indexOf("fa fa-")), f = r.substring(u, r.lastIndexOf("^^")), g.iconStyle = o)), e == 0 || f.indexOf("nothing.png") > -1 && !o) for (r = r.replace("^^" + r.substring(r.indexOf("Images/"), r.lastIndexOf("^^") + 2), "^^^"), r.indexOf("Images/") > -1 && (r = r.replace(r.substring(r.indexOf("Images/"), r.lastIndexOf("^^") + 2), "^^^")), r = r.split("^^^"), s = "", e = 0; e < r.length; e++)if (r[e].trim().length > 0) return s.length == 0 && (s = r[e].trim().substring(0, 1).toUpper()), s; return f }, y = function (n, t, i, r, u) { var f = n, e, o; if (f && f.length > 0 && (f = f.split("|")), f && f.length > 0 && u == !0) for (e = 0; e < f.length; e++)f[e].indexOf("@img::") > -1 || f[e].indexOf("@span::") > -1 ? (t.append(i), o = "", f[e].indexOf("@img::") > -1 ? o = f[e].replace("@img::", "") : f[e].indexOf("@span::") && (o = f[e].replace("@span::", "")), i.attr("style", o)) : f[e].indexOf("@value::") > -1 ? t.append(r) : f[e].indexOf("<br>") > -1 ? t.css("flex-direction", "column") : (t.append(i), t.append(r)); else t.append(i), t.append(r) }, d = function (n, t, i, r, u, f, e) { n.isCardIconHide() || n.isCardTextHide() ? n.isCardIconHide() && n.isCardTextHide() ? (e.empty(), e.remove()) : n.isCardTextHide() ? (t != null ? i.hide() : r.hide(), u && u.length > 0 && u.remove()) : n.isCardIconHide() && (u && u.length > 0 && f.append(u), e.empty(), e.remove()) : (t != null ? i.hide() : r.hide(), u && u.length > 0 && f.append(u)) }, nt = function (n, t) { for (var i = "", f = new String(""), r = n.indexOf("@"), o, e, u, s; r != -1 && r != n.lastIndexOf("@");) { if (o = n.substring(0, r), f += n.substring(0, r), n = n.substring(r + 1, n.length), e = n.indexOf("@"), e < 0) return ""; if (u = "", s = "", i = n.substring(0, e), i.contains(".") && (i = i.substring(0, i.indexOf("."))), u = t[i.toLowerCase()], u.length == 0 && (i.startsWith("#") || i.startsWith("$")) && (u = ctx.getContext(i)), u.length == 0) { if (!ignoreUnparsable) return ""; f += " NULL " } else f += u; n = n.substring(e + 1, n.length); r = n.indexOf("@") } return f + n }; this.setHeader() } r.prototype.tableModelChanged = function (t, i, r) { var u = null, f, e; if (t === n.VTable.prototype.ROW_REFRESH) u = i.recid ? i.recid : i; else if (t === n.VTable.prototype.ROW_UNDO) this.getBody().find("div.vis-cv-card[name~=vc_" + i + "]").remove(); else if (t === n.VTable.prototype.ROW_DELETE) { for (f = i.slice(); f.length > 0;)e = f.pop(), this.getBody().find("div.vis-cv-card[name~=vc_" + e + "]").remove(); isNaN(r) && (u = r[0]) } else t === n.VTable.prototype.ROW_ADD && (u = i.recid); u && (i && this.replaceCard(i, u), this.navigate(u, null, null)) }; r.prototype.replaceCard = function (r, u) { r.recid = u; var f = new i(this.fields, r, this.headerItems, this.headerStyle, this.headerPadding, this.mTab.getWindowNo(), {}, this.aPanel); this.grpCount == 1 && f.getRoot().width("240px").css({ margin: "5px 12px 12px 5px", float: n.Application.isRTL ? "right" : "left" }); t('head:contains("' + f.headerCustom + ' {")').length == 0 && f.addStyleToDom(); this.getRoot().find("[name='vc_" + u + "']").replaceWith(f.getRoot()); f.evaluate(this.cConditions) }; r.prototype.setupCardView = function (n, t, i) { this.mTab = t; this.aPanel = n; t.vo && t.vo.DefaultCardID ? this.cardID = t.vo.DefaultCardID : this.setCardViewData(); i.append(this.getRoot()) }; r.prototype.getCardViewData = function (n, t, i) { this.cardID = t; this.mTab.getTableModel().setCardID(t); this.aPanel.curGC.query(this.mTab.getOnlyCurrentDays(), 0, !1); this.getCardCmb().val(i) }; r.prototype.resetCard = function () { while (this.groupCtrls.length > 0) this.groupCtrls.pop().dispose(); this.VCardRightPanel.reset(); this.getGroupHeader().empty(); this.groupCtrls.length = 0; this.editID = 0 }; r.prototype.setCardViewData = function (n) { var i, t, r; if (this.hasIncludedCols = !1, this.fields = [], this.cGroup = null, this.cConditions = [], this.GroupCount = {}, this.headerItems = {}, n) { for (this.AD_CardView_ID = n.AD_CardView_ID, this.cardName = n.Name, this.GroupSequence = n.GroupSequence, this.ExcludedGroup = n.ExcludedGroup, i = 0; i < n.GroupCount.length; i++)this.GroupCount[n.GroupCount[i].Group] = n.GroupCount[i].Count; for (this.getCardCmb().val(n.Name), t = this.mTab.getFieldById(n.FieldGroupID), t && (this.cGroup = t), this.cConditions = n.Conditions, this.headerItems = n.HeaderItems, this.headerStyle = n.Style, this.headerPadding = n.Padding, i = 0; i < n.IncludedCols.length; i++)t = this.mTab.getFieldById(n.IncludedCols[i].AD_Field_ID), t && (t.setCardViewSeqNo(n.IncludedCols[i].SeqNo), t.setCardFieldStyle(n.IncludedCols[i].HTMLStyle), this.fields.push(t), this.hasIncludedCols = !0) } this.fields.length < 1 && this.fields.length < 1 && (t = this.mTab.getField("Name"), t && this.fields.push(t), t = this.mTab.getField("Description"), t && this.fields.push(t), t = this.mTab.getField("Help"), t && this.fields.push(t)); for (r in this.cGroupInfo) this.cGroupInfo[r].records.length = 0; this.cGroupInfo = {}; this.grpCount = 0; this.isProcessed = !1 }; r.prototype.createGroups = function () { var e, i, f, u, r; if (this.isProcessed) { for (e in this.cGroupInfo) this.cGroupInfo[e].records = []; return } if (this.cGroup) if (this.cGroupInfo = [], this.grpCount = 0, i = this.cGroup, i) { if (i.getDisplayType() == n.DisplayType.YesNo) this.cGroupInfo["true"] = { name: "Yes", records: [], key: !0 }, this.cGroupInfo["false"] = { name: "No", records: [], key: !1 }, this.GroupCount["true"] = this.GroupCount.Y, this.GroupCount["false"] = this.GroupCount.N, this.grpCount = 2; else if (n.DisplayType.IsLookup(i.getDisplayType()) && i.getLookup()) for (f = i.getLookup(), f.fillCombobox(!0, !0, !0, !1), u = f.data, r = 0; r < u.length; r++)this.cGroupInfo[u[r].Key] = { name: u[r].Name, records: [], key: u[r].Key }, this.grpCount += 1; this.setHeader(i.getHeader()) } else this.setHeader(" "); else this.setHeader(" "); (this.grpCount < 1 || t.isEmptyObject(this.cGroupInfo)) && (this.cGroupInfo.All = { name: n.Msg.getMsg("All"), records: [], key: null }, this.grpCount = 1); this.isProcessed = !0 }; r.prototype.refreshUI = function (n) { var t = this.mTab.getTableModel().getCardTemplate(); this.setCardViewData(t); this.refresh(n) }; r.prototype.refresh = function (i) { var r = this; window.setTimeout(function () { function k(i) { o = new u(r.grpCount === 1, r.cGroupInfo[i].records, n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[i].name), r.fields, r.cConditions, r.headerItems, r.headerStyle, r.headerPaddings, r.cGroupInfo[i].key, r.aPanel); r.groupCtrls.push(o); f.append(o.getRoot()); var e = new vaSortable(o.getBody()[0], { attr: "data-recid", selfSort: !0, force: !1, mainNode: ".vis-cv-main", ignore: [".vis-cv-card-edit", ".vis-ev-col-wrap-button", ".cardEmpty"], onclick: function (n, i) { var f = t(i).attr("data-recid"), u; r.onCardEdit({ recid: f }, !0); u = r.mTab.getFieldById(r.getField_Group_ID()); u.getIsReadOnly() || u.getCallout() != "" || !u.getIsEditable(!0, !0) ? (vaSortable.prototype.setStopDrag(!0), t(i).css("cursor", "not-allowed")) : (t(i).css("cursor", "default"), vaSortable.prototype.setStopDrag(!1)) }, onSelect: function (i, u, f) { var e = t(i).parent().attr("data-key"), o; e != t(f).attr("data-key") && (o = { grpValue: e == "null" ? null : e, recordID: r.mTab.getRecord_ID(), columnName: r.cGroup.getColumnName(), tableName: r.mTab.getTableName(), dataType: r.cGroup.getDisplayType() }, t.ajax({ type: "POST", url: n.Application.contextUrl + "CardView/UpdateCardByDragDrop", dataType: "json", data: o, beforeSend: function () { r.setBusy(!0) }, success: function (i) { if (i != "1") n.ADialog.error(i, !0, ""), vaSortable.prototype.revertItem(); else { var u = t(f).attr("data-key"); r.GroupCount[e] || (r.GroupCount[e] = 0); r.GroupCount[e] = r.GroupCount[e] + 1; r.GroupCount[u] = r.GroupCount[u] - 1; r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + u + "']").find("span").text(" (" + r.GroupCount[u] + ")"); r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + e + "']").removeClass("emptyGroup").find("span").text(" (" + r.GroupCount[e] + ")"); r.getBody().find(".cardEmpty").closest(".emptyGroup").removeClass("emptyGroup"); r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + u + "'] .vis-cv-head").attr("title", r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + u + "']").text()); r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + e + "'] .vis-cv-head").attr("title", r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + e + "']").text()); y(); r.mTab.dataRefresh() } }, error: function (t) { n.ADialog.error(t.responseText, !0, ""); vaSortable.prototype.revertItem(); r.setBusy(!1) }, complete: function () { r.setBusy(!1) } })) } }) } function y() { var n, i; r.VCardRightPanel.reset(); r.getRoot().removeClass("emptyGroup").removeAttr("style"); f.find(".cardEmpty").remove(); n = r.ExcludedGroup; n = n.split(","); i = !1; f.find(".vis-cv-grpbody").each(function (u, e) { var o = t(e), s; o.parent().removeAttr("style"); o.is(":empty") ? (o.append("<div class='va-dragdrop cardEmpty' style='height:" + f.height() + "px'>").parent().addClass("emptyGroup"), r.getGroupHeader().find(".vis-cv-cg-grp").eq(u).addClass("emptyGroup").removeAttr("style")) : (r.getGroupHeader().find(".vis-cv-cg-grp").eq(u).css("min-width", o.parent().width()), o.parent().css("min-width", o.parent().width())); n.indexOf(o.attr("data-key")) != -1 && (o.parent().hide(), s = r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + o.attr("data-key") + "']"), r.VCardRightPanel.addItem(s.find(".vis-cv-head").text()), i = !0, s.hide()) }); r.getRightDiv().height(r.getRoot().height()); f.find(".vis-cv-grpbody").height(d(f.find(".vis-cv-grpbody"))); i ? r.getRightDiv().css("display", "flex") : r.getRightDiv().css("display", "none") } function d(n) { return Math.max.apply(null, n.map(function () { return t(this)[0].scrollHeight }).get()) } var f, o, c, a, e, h, v, l, s; if (i == 0 && (i = r.getBody().width()), r.isProcessed = !1, r.createGroups(), records = r.mTab.getTableModel().mSortList, f = r.getBody(), r.resetCard(), o = null, r.grpCount == 1) { c = ""; a = null; for (e in r.cGroupInfo) { c = n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[e].name); a = r.cGroupInfo[e].key; r.getGroupHeader().append("<div class='vis-cv-head' >" + c + "<\/div>"); break } o = new u(!0, records, c, r.fields, r.cConditions, r.headerItems, r.headerStyle, r.headerPadding, a, r.aPanel); r.groupCtrls.push(o); f.append(o.getRoot()); r.getGroupHeader().find(".vis-cv-head").width(f.find(".vis-cv-grpbody").width() - 10); r.getRightDiv().css("display", "none") } else { r.filterRecord(records); for (e in r.cGroupInfo) k(e), h = r.cGroupInfo[e].key, h = r.GroupCount[h] ? r.GroupCount[h] : 0, v = t("<div data-key='" + r.cGroupInfo[e].key + "' class='vis-cv-cg-grp'><\/div>"), v.append("<div class='vis-cv-head' title='" + n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[e].name) + " (" + h + ")' >" + n.Utility.Util.getIdentifierDisplayVal(r.cGroupInfo[e].name) + "<span> (" + h + ")<\/span><\/div>"), r.getGroupHeader().append(v); if (r.cGroup.lookup && (r.cGroup.lookup.displayType == n.DisplayType.List || r.cGroup.lookup.displayType == n.DisplayType.TableDir || r.cGroup.lookup.displayType == n.DisplayType.Table || r.cGroup.lookup.displayType == n.DisplayType.Search) && r.GroupSequence != null && r.GroupSequence != "") for (l = r.GroupSequence.split(","), s = 0; s < l.length; s++) { var p = f.find(".vis-cv-grpbody[data-key='" + l[s] + "']").parent(), w = r.getGroupHeader().find(".vis-cv-cg-grp[data-key='" + l[s] + "']"), b = f.find(".vis-cv-cg").eq(s); p.insertBefore(b); w.insertBefore(r.getGroupHeader().find(".vis-cv-cg-grp").eq(s)) } if (r.editID == 0) r.onCardEdit({ recid: f.find(".vis-cv-card:first").attr("data-recid") }, !0); r.editID = 0; y() } r.calculateWidth(i); r.SyncScroll(); r.aPanel.setBusy(!1) }, 10) }; r.prototype.filterRecord = function (t) { var u; if (t) { var e = t.length, o = this.cGroup.getColumnName().toLowerCase(), i = null, f = null, r = !1; for (u = 0; u < e; u++)i = t[u], f = i[o], this.cGroupInfo[f] ? (this.cGroupInfo[f].records.push(i), r = !0) : (this.cGroupInfo.Other__1 || (this.cGroupInfo.Other__1 = { name: n.Msg.getMsg("No") + " " + this.cGroup.getHeader(), records: [], key: null }, this.grpCount += 1, r = !0, r = !0), this.cGroupInfo.Other__1.records.push(i)); (this.oldGrpCount != this.grpCount || r) && (this.isProcessed = !1); this.oldGrpCount = this.grpCount } }; r.prototype.dispose = function () { this.dC() }; u.prototype.dispose = function () { this.dC(); vaSortable.prototype.dispose() }; i.prototype.addStyleToDom = function () { this.styleTag.type = "text/css"; this.styleTag.innerHTML = this.dynamicStyle.join(" "); t(t("head")[0]).append(this.styleTag) }; i.prototype.applyCustomUIForFieldValue = function (n, t, i, r, u) { var e = u, o = "vis-hp-card-FieldValue_" + i + "_" + t + "_" + this.windowNo + "_" + n + "_" + r.getAD_Column_ID(); return e && e.toLower().indexOf("@value::") > -1 && (e = f(e, "@value::")), this.dynamicStyle.push("." + o + "  {" + e + "} "), o }; i.prototype.applyCustomUIForLabelValue = function (n, t, i, r, u) { var e = u, o = "vis-hp-card-LabelValue_" + i + "_" + t + "_" + this.windowNo + "_" + n + "_" + r.getAD_Column_ID(); return e && e.toLower().indexOf("@value::") > -1 && (e = f(e, "@value::")), this.dynamicStyle.push("." + o + "  {" + e + "} "), o }; i.prototype.justifyAlignImageItems = function (n, t, i) { var r = "vis-w-p-header-label-center-justify_" + n + "_" + this.windowNo; return this.dynamicStyle.push(" ." + r + " {justify-content:" + this.textAlignEnum[t] + ";align-items:" + this.alignItemEnum[i] + "}"), r }; var f = function (n, t) { var r, i; if (n && n.toLower().indexOf(t) > -1) for (r = n.split("|"), i = 0; i < r.length; i++)if (r[i].toLower().indexOf(t) > -1) return r[i].toLower().replace(t, "").trim() }; i.prototype.headerParentCustomUISettings = function (n) { var t = "vis-ad-w-p-card-Custom_" + this.windowNo; return this.dynamicStyle.push(" ." + t + " {flex:1;"), this.dynamicStyle.push(n), this.dynamicStyle.push("} "), t }; i.prototype.headerUISettings = function (n, t) { var i = "vis-ad-w-p-card_root_" + this.windowNo; return this.dynamicStyle.push(" ." + i + " {display:flex;overflow:auto;"), this.dynamicStyle.push("padding:" + t + ";" + n), this.dynamicStyle.push("} "), i }; i.prototype.fieldGroupContainerUISettings = function (n, t, i, r, u) { var f = "vis-ad-w-p-fg_card-container_" + t + "_" + n + "_" + this.windowNo + "_" + u; return this.dynamicStyle.push(" ." + f + " {display:grid;"), this.dynamicStyle.push("grid-template-columns:repeat(" + n + ", 1fr);grid-template-rows:repeat(" + t + ", auto);padding:" + r + ";" + i), this.dynamicStyle.push("} "), f }; i.prototype.applyCustomUISettings = function (n, t, i, r, u, f, e, o, s, h, c) { var l = "vis-hp-card-FieldGroup_" + r + "_" + t + "_" + this.windowNo + "_" + n; return this.dynamicStyle.push("." + l + "  {grid-column:" + t + " / span " + i + "; grid-row: " + r + " / span " + u + ";"), this.dynamicStyle.push("justify-content:" + this.textAlignEnum[f] + ";align-items:" + this.alignItemEnum[e]), this.dynamicStyle.push(";font-size:" + h + ";color:" + s + ";padding:" + c + ";"), this.dynamicStyle.push(o), this.dynamicStyle.push("} "), l }; i.prototype.evaluate = function (t) { for (var i = null, r = 0; r < t.length; r++)(i = t[r], i.ConditionValue) && n.Evaluator.evaluateLogic(this, i.ConditionValue) && this.setColor(i.Color, i.FColor) }; i.prototype.getValueAsString = function (n) { var t = this.record[n.toLowerCase()]; return t ? (t === !0 ? t = "Y" : t && t.toString().endsWith(".000Z") && (t = t.replace(".000Z", "Z")), t = t.toString()) : t === !1 ? t = "N" : t === 0 && (t = "0"), t }; i.prototype.actionPerformed = function (n) { if (this.aPanel.curTab.needSave(!0, !1)) { this.aPanel.cmd_save(!0); return } this.curTab = this.aPanel.curTab; this.curGC = this.aPanel.curGC; this.aPanel.actionPerformed(n, this) }; i.prototype.cmd_save = function (n, t) { return this.aPanel.cmd_save2(n, this.curTab, this.curGC, this.aPanel, t) }; i.prototype.dispose = function () { this.dC() }; n.VCardView = r }(VIS, jQuery), function (n, t) { function i() { function f(i) { var u, e, f, r; try { if (t.grid.columns[i.column].columnName == t.hyperLinkCell) t.grid.select(Number(i.recid)), u = t.aPanel.getRoot().find("[name=" + i.target + "]").closest(".vis-ad-w-p-center-inctab"), u.length > 0 ? u.find(".vis-multi").length > 0 ? u.find(".vis-multi").click() : u.find(".vis-edit").click() : t.aPanel.actionPerformedCallback(t.aPanel, "Single"); else if (t.grid.columns[i.column].gridField.getDisplayType() == n.DisplayType.TelePhone) if (t.grid.select(Number(i.recid)), window.VA048) { if (e = t.grid.get(i.recid), f = e[t.grid.columns[i.column].columnName.toLowerCase()], !f || f === "") return; r = {}; r.tonumbers = f; r.username = ""; r.userimg = ""; r.isconference = !1; r.reftableid = -1; r.refrecordid = -1; r.windowno = 0; r.windowid = 0; r.tableid = 0; r.recordid = 0; r.withrecording = !1; r.withcall = !0; VA048.Apps.GetCallingInstance(!0, r, !1) } else n.ADialog.info("ComModuleNotInstalled"); else t.grid.columns[i.column].gridField.getDisplayType() == n.DisplayType.Button && (t.grid.select(Number(i.recid)), t.grid.columns[i.column].editable.ctrl.getControl().click()) } catch (o) { console.log(o) } } function u(n) { var i, r; return t.readOnly ? !1 : (i = t.grid.columns[n], !t.mTab.getTableModel().getIsInserting() && i.readOnly) ? !1 : (r = i.gridField, r.getIsEditable(!0, !0)) ? !0 : !1 } function e(n, i) { return t.readOnly ? !1 : i == t.indexActiveColumn && t.indexProcessedColumn == -1 ? !0 : o(n) ? !0 : !1 } function o(i) { var r, u; if (t.readOnly || i < 0) return !1; if (t.indexActiveColumn && t.indexActiveColumn > 0) if (r = t.grid.getCellValue(i, t.indexActiveColumn), typeof r == "boolean") { if (!r) return r } else if ("True".equals(r)) { if ("N".equals(r)) return !1 } else return !1; if (t.indexProcessedColumn && t.indexProcessedColumn > 0) if (u = t.grid.getCellValue(i, t.indexProcessedColumn), typeof u == "boolean") { if (u) return !1 } else if ("True".equals(u) || "Y".equals(u)) return !1; var f = s(i), e = f[0], o = f[1], h = f[2]; return n.MRole.canUpdate(e, o, t.AD_Table_ID, h, !1) } function s(i) { var e = -1, u, f, r; return typeof t.indexClientColumn != "undefined" && t.indexClientColumn != -1 && (r = t.grid.getCellValue(i, t.indexClientColumn), r != null && r !== "" && (e = n.Utility.Util.getValueOfInt(r))), u = 0, typeof t.indexOrgColumn != "undefined" && t.indexOrgColumn != -1 && (r = t.grid.getCellValue(i, t.indexOrgColumn), r != null && r !== "" && (u = n.Utility.Util.getValueOfInt(r))), f = 0, typeof t.indexKeyColumn != "undefined" && t.indexKeyColumn != -1 && (r = t.grid.getCellValue(i, t.indexKeyColumn), r != null && r !== "" && (f = n.Utility.Util.getValueOfInt(r))), [e, u, f] } this.grid = null; this.id = null; this.$container = null; this.aPanel = null; this.gc = null; this.rendered = !1; this.onSelect = null; this.onCellEditing = null; this.onCellValueChanged = null; this.onSort = null; this.onEdit = null; this.onAdd = null; this.hyperLinkCell = null; this.editColumnIndex = -1; var i = 0, t = this, r = { caption: "", sortable: !1, render: function () { return '<img src="' + n.Application.contextUrl + 'Areas/VIS/Images/base/pencil.png"  />' }, size: "25px" }; this.getEditColumn = function () { return r }; this.onClick = function (n) { (i++, this.readOnly) || (t.skipEditing = !1, this.records.length > 0 && this.records[t.mTab.getCurrentRow()].recid != n.recid && (t.skipEditing = !0)) }; this.onSingleClick = function (n) { i++; singleClickTimer = setTimeout(function () { i === 1 ? (i = 0, f(n)) : i === 2 && (clearTimeout(singleClickTimer), i = 0) }, 400) }; this.onSelectLocal = function (n) { if (t.blockSelect) { t.blockSelect = !1; return } if (t.onSelect) t.onSelect(n) }; this.checkCellEditable = !0; this.onEditField = function (n) { if (t.skipEditing) { t.skipEditing = !1; n.isCancelled = !0; this.select({ recid: n.recid }); return } n.isCancelled = !u(n.column) || n.originalEvent && n.originalEvent.altKey; t.blockSelect = !n.isCancelled }; this.onChange = function (n) { if (t.grid.columns[n.column].editable.type == "checkbox") { if (this.records.length > 0 && this.records[t.mTab.getCurrentRow()].recid != n.recid) { n.isCancelled = !0; return } n.isCancelled = !u(n.column) } n.onComplete = function (n) { var i = { newValue: n.value_new, propertyName: t.grid.columns[n.column].field }; if (t.onCellValueChanged) t.onCellValueChanged(i, t.grid.columns[n.column].editable.type == "checkbox") } }; this.onUnSelect = function () { }; this.onRowAdd = function (n) { t.paintRow(n.index) }; this.cellStyleRender = function (n, i) { var r = t.grid.columns[i]; return !r.selfCellStyleRender && r.gridField && r.gridField.getStyleLogic() != "" ? t.evaluateStyleLogic(n, r.gridField.getStyleLogic()) : null }; this.paintRow = function (n) { var t = this.grid.records[n]; if (!e(n, 0)) { t.style = "background-color:rgba(var(--v-c-secondary), .7)"; return } t && t.style && delete t.style }; this.disposeComponenet = function () { t = null; r = null; this.getEditColumn = null; this.onClick = null } } i.prototype.ROW_ADD = "A"; i.prototype.ROW_DELETE = "D"; i.prototype.ROW_REFRESH = "F"; i.prototype.ROW_UNDO = "U"; i.prototype.evaluateStyleLogic = function (t, i) { var f, e, r, u; for (this.cellRowIndex = t, f = i.split(","), e = null, r = 0; r < f.length; r++)if ((u = f[r].split("?"), u.length == 2) && n.Evaluator.evaluateLogic(this, u[0])) { e = u[1]; break } return e }; i.prototype.setupGridTable = function (i, r, u, f, e, o) { var v, b, a, c, s, g, et, w, nt, y, tt; if (!e.getIsDisplayed(!0)) return 0; this.id = f; this.aPanel = i; this.gc = o; this.$container = u; this.mTab = e; this.AD_Table_ID = this.mTab.getAD_Table_ID(); var h = [], l = null, it = r.length, k = 0, d = r.slice(0); for (d.sort(function (n, t) { return n.getMRSeqNo() - t.getMRSeqNo() }), v = -1, b = 0; b < d.length; b++)if (l = d[b], l != null) { a = l.getColumnName(); c = l.getDisplayType(); ++v; l.getIsKey() ? this.indexKeyColumn = v : a.equals("IsActive") ? this.indexActiveColumn = v : a.equals("Processed") ? this.indexProcessedColumn = v : a.equals("AD_Client_ID") ? this.indexClientColumn = v : a.equals("AD_Org_ID") && (this.indexOrgColumn = v); var p = l.getIsDisplayedMR ? l.getIsDisplayedMR() : l.getIsDisplayed(), rt = l.getIsMandatory(!1), ut = l.getIsReadOnly(), ft = l.getIsEditable(!1); l.getIsHeading() || (s = { resizable: !0, selfCellStyleRender: !1 }, s.gridField = l, (ut || !ft) && (s.readOnly = !0), s.caption = l.getHeader(), rt && (s.caption += '<sup style="color:red;font-size: 11px;top: 0;">*<\/sup>'), s.field = a.toLowerCase(), s.hidden = !p, g = s.gridField.getColumnWidth(), s.size = g ? g + "px" : "100px", l.getIsIdentifier() && l.getDisplayType() != n.DisplayType.Image && this.hyperLinkCell == null ? s.hidden == !1 && (this.hyperLinkCell = a, s.style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; cursor:pointer") : l.getDisplayType() == n.DisplayType.TelePhone && s.hidden == !1 && (s.style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; "), c == n.DisplayType.Amount ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return r || (r = 0), r = parseFloat(r).toLocaleString(undefined, { minimumFractionDigits: h[i].customFormat.getMinFractionDigit(), maximumFractionDigits: h[i].customFormat.getMaxFractionDigit() }), '<div data-type="int">' + r + "<\/div>" }) : c == n.DisplayType.Integer ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var u = h[i].field, r = n[u]; if (r) return '<div data-type="int">' + r + "<\/div>" }) : c == n.DisplayType.ProgressBar ? (s.sortable = !0, s.selfCellStyleRender = !0, s.render = function (n, t, i) { var f = h[i].field, e = h[i].gridField, r = "", u; return e.getStyleLogic() != "" && (r = tt.evaluateStyleLogic(t, e.getStyleLogic())), r || (r = ""), u = n[f], n.changes && typeof n.changes[f] != "undefined" && (u = n.changes[f]), '<div class="vis-progress-gridbar" style="' + r + '"><div class="vis-progress-percent-bar" style = "width:' + (u || 0) + "%;" + r + '" ><\/div><div class="vis-progress-gridoutput" > ' + (u || "") + "<\/div><\/div >" }) : n.DisplayType.IsNumeric(c) ? (s.sortable = !0, s.customFormat = n.DisplayType.GetNumberFormat(c), s.render = function (n, t, i) { var u = h[i].field, r = n[u]; if (r) return r = parseFloat(r).toLocaleString(undefined, { minimumFractionDigits: h[i].customFormat.getMinFractionDigit(), maximumFractionDigits: h[i].customFormat.getMaxFractionDigit() }), '<div data-type="int">' + r + "<\/div>" }) : c == n.DisplayType.YesNo ? (s.sortable = !0, et = a.toLowerCase(), s.gridField.getIsSwitch() && (s.render = "switch"), s.editable = { type: "checkbox" }) : c == n.DisplayType.String || c == n.DisplayType.Text || c == n.DisplayType.TextLong || c == n.DisplayType.Memo ? (s.sortable = !0, s.render = l.getIsEncryptedField() ? function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r = n[h[i].field], r || r === 0) ? r.replace(/\w|\W/g, "*") : "" } : l.getObscureType() ? function (t, i, r) { var u = t[h[r].field]; return u || u === 0 ? n.Env.getObscureValue(h[r].gridField.getObscureType(), u) : "" } : function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }) : n.DisplayType.IsLookup(c) || c == n.DisplayType.ID ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (i, r, u) { var s = h[u].lookup, rt = h[u].field, v = i[rt], ut = h[u].gridField.getGridImageStyle(), ft = h[u].gridField.getWindowNo(), d, g, f, tt, p, nt, et, y, o, k, l, e, a, c; if (h[u].customClass = "", ut && (d = h[u].customClass, d || (h[u].customClass = "vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + ft, d = ".vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + ft + "{" + ut + "}", g = document.createElement("style"), g.type = "text/css", g.innerHTML = d, t(t("head")[0]).append(g))), i.changes && typeof i.changes[rt] != "undefined", s) if (s.displayType == n.DisplayType.MultiKey) if (v) { for (tt = v.toString().split(","), p = "", nt = 0, et = tt.length; nt < et; nt++) { if (y = tt[nt], isNaN(y) || (y = Number(y)), p.length == 0) { p += s.getDisplay(y); continue } p += ", " + s.getDisplay(y) } f = p } else f = s.getDisplay(v, !0, !0); else f = s.getDisplay(v, !0, !0); if (o = "", s && n.DisplayType.List == s.displayType) { var ot = Math.floor(Math.random() * 360) + 0, st = Math.floor(Math.random() * 16) + 60, w = "hsl(" + ot + ", 100%," + st + "%)", it = s.getLovIconType(v, !0), b = s.getLOVIconElement(v, !0), e = ""; if (b || (e.length == 0 && (c = f.trim().split(" ")), e = c[0].substring(0, 1).toUpper(), c.length > 1 ? e += c[c.length - 1].substring(0, 1).toUpper() : e = c[0].substring(0, 2).toUpper()), it == "B") o = "<div class='vis-grid-td-icon-grp'>", o += b ? "<div class='" + h[u].customClass + " vis-grid-row-td-icon'> " + b + "<\/div> " : "<div style='background-color:" + w + "' class='" + h[u].customClass + " vis-grid-row-td-icon'><span>" + e + "<\/span><\/div>", o += "<span> " + f + "<\/span ><div>"; else { if (it == "T") return f; it == "I" && (o = "<div class='vis-grid-td-icon-grp' style='Justify-Content:center'>", o += b ? "<div class='" + h[u].customClass + " vis-grid-row-td-icon'> " + b + "<\/div> " : "<div style='background-color:" + w + "' class='" + h[u].customClass + " vis-grid-row-td-icon'><span>" + e + "<\/span><\/div>", o += "<div>") } } else if (s && s.gethasImageIdentifier()) { if (k = f.indexOf("Images/"), k == -1) return f; for (l = f.substring(k + 7, f.lastIndexOf("^^")), l = n.Application.contextUrl + "Images/Thumb32x32/" + l, f = f.replace("^^" + f.substring(k, f.lastIndexOf("^^") + 2), "^^^"), f.indexOf("Images/") > -1 && (f = f.replace(f.substring(k, f.lastIndexOf("^^") + 2), "^^^")), f = f.split("^^^"), o = "<div class='vis-grid-td-icon-grp'>", e = "", a = 0; a < f.length; a++) { var ot = Math.floor(Math.random() * 360) + 0, st = Math.floor(Math.random() * 16) + 60, w = "hsl(" + ot + ", 100%," + st + "%)"; f[a].trim().length > 0 ? (e.length == 0 && (c = f[a].trim().split(" ")), e = c[0].substring(0, 1).toUpper(), c.length > 1 ? e += c[c.length - 1].substring(0, 1).toUpper() : e = c[0].substring(0, 2).toUpper(), a > 0 && l.indexOf("nothing.png") > -1 && e.length > 0 && (o += "<div style='background-color:" + w + "' class='" + h[u].customClass + " vis-grid-row-td-icon' ><span>" + e + "<\/span><\/div>"), o += "<span>" + f[a] + "<\/span>") : l.indexOf("nothing.png") > -1 && e.length > 0 && (o += "<div style='background-color:" + w + "' class='" + h[u].customClass + " vis-grid-row-td-icon' ><span>" + e + "<\/span><\/div>"); (a == 0 || l.indexOf("nothing.png") > -1) && l.indexOf("nothing.png") == -1 && (o += "<div style='background-color:" + w + "' class='" + h[u].customClass + " vis-grid-row-td-icon' > <img src='" + l + "'><\/div > ") } +"</div > " } return o == "" ? f : o })) : n.DisplayType.IsDate(c) ? (s.sortable = !0, s.displayType = c, s.render = function (t, i, r) { var o = h[r], e = h[r].field, u = t[e], f; return t.changes && typeof t.changes[e] != "undefined" && (u = t.changes[e]), u ? o.displayType == n.DisplayType.Date ? (f = new Date(u), f.setMinutes(f.getTimezoneOffset() + f.getMinutes()), u = f.toLocaleDateString()) : u = o.displayType == n.DisplayType.DateTime ? new Date(u).toLocaleString() : new Date(u).toTimeString() : u = "", u }) : c == n.DisplayType.Location || c == n.DisplayType.Locator ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.AmtDimension ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.ProductContainer ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.Account || c == n.DisplayType.PAttribute ? (s.sortable = !0, s.lookup = l.getLookup(), p && (s.render = function (n, t, i) { var f = h[i].lookup, u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : c == n.DisplayType.PAttribute ? (s.sortable = !0, s.render = "int") : c == n.DisplayType.Button ? (s.sortable = !0, s.render = function (n, t, i) { var r = h[i].field, u = n[r]; return '<span style="cursor:pointer" class="vis-ev-col-linkbutton">' + h[i].gridField.getHeader() + "<\/span>" }) : c == n.DisplayType.Image ? (s.sortable = !0, s.render = function (i, r, u) { var s = h[u].field, c = h[u].gridField.getGridImageStyle(), l = h[u].gridField.getWindowNo(), e, o, f; return (c && (e = h[u].customClass, e || (h[u].customClass = "vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + l, e = ".vis-grd-custom-" + h[u].gridField.getAD_Column_ID() + l + "{" + c + "}", o = document.createElement("style"), o.type = "text/css", o.innerHTML = e, t(t("head")[0]).append(o))), f = i["imgurlcolumn" + s], i.changes && typeof i.changes[s] != "undefined" && (f = i.changes[s]), !f) ? '<div class="vis-grid-row-td-icon-center">-<\/div>' : (f = f.toString().replace("Images/", "Images/Thumb32x32/"), e ? '<div class="vis-grid-row-td-icon-center"><div class="' + h[u].customClass + ' vis-grid-row-td-icon"><img src="' + n.Application.contextUrl + f + '"><\/div><\/div>' : '<div class="vis-grid-row-td-icon-center"><div class="vis-grid-row-td-icon"><img src="' + n.Application.contextUrl + f + '"><\/div><\/div>') }) : n.DisplayType.IsLOB(c) ? (s.sortable = !0, s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || (r = ""), "#" + r.toString().length }) : n.DisplayType.TelePhone == c ? (s.sortable = !0, s.render = function (t, i, r) { var u = h[r].field, f = t[u]; return (t.changes && typeof t.changes[u] != "undefined" && (f = t.changes[u]), f) ? n.VTelePhoneInstance.getHtml(f, !0) : "" }) : n.DisplayType.Color == c ? (s.sortable = !0, s.render = function (n, t, i) { var r = h[i].field, u = n[r]; return (n.changes && typeof n.changes[r] != "undefined" && (u = n.changes[r]), u) ? '<div style="background-color:' + u + ';" ><\/div>' : "" }) : (s.sortable = !0, s.render = function (n, t, i) { var u = h[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }), l.getHtmlStyle() != "" && c != n.DisplayType.Button && (s.style = l.getHtmlStyle()), s.hidden || k++, h.push(s), s.columnName = a, w = n.VControlFactory.getControl(e, l, !1, !1, !1), w.setReadOnly(!1), s.editable || (s.editable = { type: "custom", ctrl: w }), w.addVetoableChangeListener(o), w instanceof n.Controls.VButton && w.addActionListner(i)) } if (k > 0) { nt = Math.floor(100 / k); for (y in h) h[y].hidden || (!h[y].size < 0 && (h[y].size = nt + "%", h[y].min = 100), this.hyperLinkCell == null && (this.hyperLinkCell = h[y].columnName, h[y].style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; cursor:pointer")) } return this.grid = t().w2grid({ name: f, autoLoad: !1, columns: h, records: [], show: { toolbar: !1, columnHeaders: !0, lineNumbers: !1, selectColumn: !0, toolbarReload: !1, toolbarColumns: !0, toolbarSearch: !1, toolbarAdd: !1, toolbarDelete: !1, toolbarSave: !1, selectionBorder: !1, recordTitles: !1 }, recordHeight: 41, onSelect: this.onSelectLocal, onUnselect: this.onUnSelect, onSort: this.onSort, onClick: this.onSingleClick, onDblClick: this.onClick, onEditField: this.onEditField, onChange: this.onChange, onRowAdd: this.onRowAdd, onCellStyleRender: this.cellStyleRender }), tt = this, it }; i.prototype.getValueAsString = function (t) { var r = this.grid.records[this.cellRowIndex], i = this.grid.parseField(r, t.toLowerCase()); return (this.mTab && n.DisplayType.YesNo == this.mTab.getField(t).getDisplayType() && (i = i ? "Y" : "N"), !i) ? "" : i.toString() }; i.prototype.get = function (n, t) { return this.grid.get(n, t) }; i.prototype.activate = function () { this.grid && !this.rendred && (this.$container.w2render(this.grid.name), this.rendred = !0) }; i.prototype.setReadOnly = function (n) { this.readOnly = n }; i.prototype.getGrid = function () { return this.grid }; i.prototype.select = function (n) { var t = this.grid.getSelection(); if (t.indexOf(n) == -1) { if (t.length == 1) this.grid.unselect(t[0]); else if (t.length > 1) while (t.length > 0) this.grid.unselect(t.pop()); return this.grid.select(n) } }; i.prototype.add = function (n) { this.grid.add(n) }; i.prototype.clear = function () { this.grid.clear(!0); this.grid.reset() }; i.prototype.refresh = function () { this.grid.refresh(); console.log("refresh") }; i.prototype.resize = function () { this.grid.resize() }; i.prototype.setRow = function (n) { isNaN(n) ? this.grid.set(n.recid, n) : this.grid.set(n) }; i.prototype.refreshRow = function (n, t) { if (!(this.grid.records.length < 1)) { var i = this.mTab.getCurrentRow(); i < 0 || (typeof n != "undefined" && (i = n), this.paintRow(t ? this.grid.get(n, !0) : i), this.grid.clearRowChanges(t ? n : this.grid.records[i].recid)) } }; i.prototype.refreshCells = function () { if (!(this.grid.records.length < 1)) { var n = this.mTab.getCurrentRow(); this.paintRow(n); this.grid.refreshRow(this.grid.records[n].recid) } }; i.prototype.refreshUndo = function () { if (!(this.grid.records.length < 1)) { var n = this.mTab.getCurrentRow(); this.grid.clearRowChanges(this.grid.records[n].recid); this.paintRow(n); this.grid.refreshRow(this.grid.records[n].recid) } }; i.prototype.getSelection = function (n) { return this.grid.getSelection(n) }; i.prototype.getSelectedRows = function () { for (var t = this.grid.getSelection(!0), i = [], n = 0, r = t.length; n < r; n++)i.push(this.grid.records[t[n]]); return i }; i.prototype.getColumnNames = function () { for (var t = this.grid.columns, i = {}, n = 0, r = t.length; n < r; n++)i[t[n].columnName] = t[n].caption; return i }; i.prototype.scrollInView = function (n) { this.grid.scrollIntoView(n) }; i.prototype.tableModelChanged = function (t, i, r) { var u, f, e; if (this.blockSelect = !0, t === n.VTable.prototype.ROW_REFRESH) this.setRow(i), this.refreshRow(i.recid, !0); else { if (u = null, t === n.VTable.prototype.ROW_UNDO) this.grid.unselect(i), this.grid.remove(i), r >= this.grid.records.length - 1 && this.grid.records.length > 0 ? (this.blockSelect = !1, u = this.grid.records[this.grid.records.length - 1].recid) : r < this.grid.records.length && (u = this.grid.records[r].recid); else if (t === n.VTable.prototype.ROW_ADD) this.grid.records.splice(r, 0, i), u = i.recid, this.grid.refresh(), this.blockSelect = !0; else if (t === n.VTable.prototype.ROW_DELETE) { for (f = i.slice(); f.length > 0;)e = f.pop(), this.grid.unselect(e), this.grid.remove(e); isNaN(r) ? u = r[0] : this.grid.records.length > 0 && (u = this.grid.records[this.grid.records.length - 1 < r ? this.grid.records.length - 1 : r].recid) } u && this.select(u); t !== n.VTable.prototype.ROW_ADD || this.gc.getIsCardRow() || this.gc.getIsSingleRow() || this.gc.getIsMapRow() || this.setDefaultFocus() } this.blockSelect = !1 }; i.prototype.setDefaultFocus = function (n) { if (this.mTab.defaultFocusField) { n || (n = this.mTab.defaultFocusField.getColumnName()); var t = this.grid.getSelection(), i = this.grid.getColumn(n.toLower(), !0); t && t.length > 0 && window.setTimeout(function () { this.grid.editField(t[0], i) }.bind(this), 200) } }; i.prototype.dispose = function () { var n, t; this.grid.off("select", this.onSelect); this.grid.off("sort", this.onSort); this.grid.off("click", this.onClick); this.onSelect = null; this.onSort = null; n = this.grid.columns; for (t in n) n[t].editable.ctrl && n[t].editable.ctrl.dispose(); this.grid.destroy(); this.grid = null; this.id = null; this.$container = null; this.rendered = null; this.disposeComponenet() }; n.VTable = i }(VIS, jQuery), function (n, t) { function i() { function b(n, t, i, f) { var e = new google.maps.Marker({ position: n, animation: google.maps.Animation.DROP, map: r, title: t, draggable: !0 }); e.info = new google.maps.InfoWindow({ content: t }); e.lid = i; e.ColName = f; e.info.open(r, e); google.maps.event.addListener(e, "click", function () { this.info.open(r, this) }); u.push(e) } function k(n, t, i, r, u) { window.setTimeout(function () { b(n, t, r, u) }, i) } function v(n) { for (var t = 0; t < u.length; t++)u[t].setMap(n), google.maps.event.clearListeners(u[t], "click"), u[t].info = null } function d() { v(null) } function y() { d(); u = [] } function g() { y(); r = null } function nt() { var r = "", t = i.mapFields, n; if (t.length > 1) { for (r += '<option data-index="-1" value="-1"> <\/option>', n = 0; n < t.length; n++)r += "<option data-index=" + n + " value=" + t[n].getColumnName() + " >" + t[n].getHeader() + "<\/option>"; e.html(r); e[0].selectedIndex = 0; it() } else h.hide(), o.css("top", "0") } function tt() { o = t('<div id="map" class="vis-mv-map">'); s = t('<div class="vis-apanel-busy vis-full-height">').hide(); h = t('<div class="vis-mv-header"> <select class="vis-mv-select vis-pull-right" /> <\/div>'); e = h.find(".vis-mv-select"); c.append(h).append(p).append(o).append(s); l && (a = { center: new google.maps.LatLng(26, 76), zoom: 4, mapTypeId: google.maps.MapTypeId.ROADMAP }) } function it() { e.on("change", function (n) { i.setBusy(!0); i.curIndex = t(n.target).find("option:selected").data("index"); i.curIndex == -1 ? i.setMapData(i.mapcols) : i.setMapData(i.mapcols[i.curIndex]) }) } var r = null, c = t('<div class="vis-mv-main">'), o = "", s = "", u = [], a, f = null, e = null, h = null, p = t('<Input id="pac-input" class="controls" type="text" placeholder="Search Box"/>'), i = this, l, w; this.locationID = ""; l = window.google && google.maps ? !0 : !1; w = new google.maps.Geocoder; this.renderMap = function () { r || (this.mapp && (r = this.mapp), r = new google.maps.Map(o[0], a), nt()) }; tt(); this.ResetCombo = function () { e.val(-1); this.curIndex = -1 }; this.setBusy = function (n) { n ? s.show() : s.hide() }; this.getRoot = function () { return c }; this.sizeChanged = function () { }; this.setMapData = function (n) { var o, s, u, e, t; if (l) { if (this.renderMap(), y(), f = null, f = new google.maps.LatLngBounds, google.maps.event.trigger(r, "resize"), i.curIndex == -1) { for (o = Object.keys(n).length, s = Object.keys(n), t = 0; t < o; t++)if (u = n[s[t]], u && u.length != 0) for (e = 0; e < u.length; e++)try { (i.locationID && i.locationID == u[e].lid || !i.locationID) && i.setLatLong(u[e].Latitude, u[e].Longitude, u[e].msg, u[e].lid, u[e].ColName) } catch (h) { console.log(h) } } else if (n.length > 0) for (t = 0; t < n.length; t++)i.setLatLong(n[t].Latitude, n[t].Longitude, n[t].msg, n[t].lid, n[t].ColName); r.fitBounds(f); i.setBusy(!1) } }; this.setLatLong = function (n, t, i, u, e) { if (n && t) { var o = null; o = new google.maps.LatLng(Number(n), Number(t)); k(o, i, 100, u, e); f.extend(o); r.fitBounds(f) } }; this.dc = function () { g(); c.remove(); this.cols = this.gc = this.aPanel = this.mapcols = null; this.mapFields = null; this.curIndex = -1; this.getRoot = null; this.dc = null } } i.prototype.setupMapView = function (n, t, i, r) { var u, f, e; for (this.mapFields = [], u = i.getMapColumns(), f = 0; f < u.length; f++)e = i.getField(u[f]), e && this.mapFields.push(e); this.cols = u; this.gc = t; this.aPanel = n; this.mapcols = {}; this.curIndex = -1; r.append(this.getRoot()) }; i.prototype.refreshUI = function (n, t) { var f, c, l, i, o, s, h, e, u, r; if (this.locationID = t, f = this.gc.getSelectedRows(), c = f.length, !(f.length < 1) && !(this.cols.length < 1)) { for (l = [[]], i = 0; i < this.cols.length; i++)if (o = this.cols[i], s = this.mapFields[i].getLookup(), !this.locationID || this.locationID == this.mapFields[i].getValue()) { for (h = [], e = 0; e < c; e++)u = f[e][o.toLowerCase()], u && (r = s.getLatLng(u), r && (r.msg = s.getDisplay(u), r.lid = u, r.ColName = o, h.push(r))); this.mapcols[i] = h } this.ResetCombo(); this.curIndex == -1 ? this.setMapData(this.mapcols) : this.setMapData(this.mapcols[this.curIndex]) } }; i.prototype.dispose = function () { this.dc() }; n.VMapView = i }(VIS, jQuery), function (n, t) { function i(n, i, r) { var u = null; return t.ajax({ url: a, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } var f = "G", e = "S", o = "C", s = "N", h = "Y", c = document.querySelector("#vis-ad-viewctrltmp").content, r = function (t, r, u) { var e = u ? !0 : !1, o = { sql: t, page: 1, pageSize: 0 }, f; return r && (o.param = r), f = null, i(o, e, function (t) { var i = (new n.DB.DataSet).toJson(t), i = (new n.DB.DataSet).toJson(t); f = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; e && u(f) }), f }, l = function (t, r, u) { var e = u ? !0 : !1, o = { sql: t, page: 1, pageSize: 0 }, f; return r && (o.param = r), f = null, i(o, e, function (t) { f = (new n.DB.DataReader).toJson(t); e && u(f) }), f }, u = n.Application.contextUrl, v = u + "Form/JDataSet", a = u + "JsonData/JDataSetWithCode"; n.GridController = function (i, r, u) { function tt() { var n = document.importNode(c, !0); e = t(n.querySelector(".vis-ad-w-p-vc")).hide(); d = e.find(".vis-ad-w-p-vc-tree").hide(); v = e.find(".vis-ad-w-p-vc-actions").hide(); y = e.find(".vis-ad-w-p-vc-header"); s = t("<div class='vis-gc-vtable'>"); o = t("<div class='vis-ad-w-p-vc-editview' id='AS_" + u + "'>"); l = t("<div class='vis-gc-vcard'>"); a = t("<div class='vis-gc-vmap'>"); g = e.find(".vis-ad-w-p-vc-gc"); g.append(s).append(o).append(l).append(a) } function it() { nt = new n.AppsAction({ action: "new", parent: null, enableDisable: !0, toggle: !1, imageOnly: !0, isSmall: !0, onAction: k }); p = new n.AppsAction({ action: "edit", parent: null, enableDisable: !0, toggle: !1, imageOnly: !0, isSmall: !0, onAction: k }); v.append(p.getListItm()).append(nt.getListItm()) } var h, f, k; this.id = u; this.vGridPanel = new n.VGridPanel; this.vTable = new n.VTable; this.vCardView = new n.VCardView; this.vMapView = new n.VMapView; this.vHeaderPanel = null; this.windowNo = 0; this.aPanel = null; this.singleRow = !1; this.isCardRow = !1; this.doPaging = r; this.vIncludedGC = null; this.m_tree = null; this.onRowInserted = null; this.onRowInserting = null; this.rightPaneLinkItems = []; this.leftPaneLinkItems = []; this.showClient = !1; this.showOrg = !1; h = n.Env.getCtx().getShowClientOrg(); h == n.Env.SHOW_CLIENT_ONLY ? this.showClient = !0 : h == n.Env.SHOW_ORG_ONLY ? this.showOrg = !0 : h == n.Env.SHOW_CLIENT_ORG && (this.showOrg = !0, this.showClient = !0); this.isParentDetailVisible = !1; this.isIncludedGCVisible = !1; this.displayAsIncludedGC = !1; var o, l, a, v, e, y, w = [], s, d, g, b = null, nt, p = null; tt(); f = this; k = function (n) { if (n == "edit") { if (f.displayAsIncludedGC) { f.aPanel.tabActionPerformed(f.id) && f.switchSingleRow(); return } } else if (f.displayAsIncludedGC) { if (!f.aPanel.tabActionPerformed(f.id)) return; f.switchSingleRow(); setTimeout(function (n) { n.aPanel.cmd_new() }, 500, f) } }; it(); this.initLayout = function () { this.layoutLoaded = !0 }; this.sizeChanged = function () { }; this.sizeChanged(); o.append(this.vGridPanel.getRoot()); this.getRoot = function () { return e }; this.getTreeArea = function () { return d }; this.getId = function () { return u }; this.setRecord = function () { }; this.getVTablePanel = function () { return s }; this.getVPanel = function () { return o }; this.getVCardPanel = function () { return l }; this.getVMapPanel = function () { return a }; this.setUI = function (n) { n ? (y.html(this.gTab.getName()), y.css("display", "block"), v.css("display", "flex"), p.setEnabled(!1), this.vTable.grid.show.selectColumn = !1) : (y.css("display", "none"), v.css("display", "none"), this.vTable.grid.show.selectColumn = !0) }; this.enableDisableToolbarItems = function (n) { p.setEnabled(n) }; this.vTable.onSelect = function (n) { f.aPanel && f.aPanel.setBusy && f.aPanel.setBusy(!0); f.cancelSel = !1; f.onTableRowSelect(n); f.cancelSel && (n.isCancelled = !0); f.aPanel && f.aPanel.setBusy && f.aPanel.setBusy(!1) }; this.vTable.onCellValueChanged = function (n, t) { t ? window.setTimeout(function () { f.vetoablechange(n); f.vTable.refreshCells() }, 10) : (f.vetoablechange(n), f.vTable.refreshCells()) }; this.vCardView.onCardEdit = function (n, t) { f.onTableRowSelect(n); t || f.aPanel.actionPerformedCallback(f.aPanel, "Single") }; this.vTable.onSort = function () { window.setTimeout(function () { f.navigate(f.gTab.getCurrentRow(), !0) }, 10) }; this.disposeComponent = function () { this.rightPaneLinkItems.length = 0; this.rightPaneLinkItems = null; this.leftPaneLinkItems.length = 0; this.leftPaneLinkItems = null; s = null; $divRecords = null; for (var n = 0; n < w.length; n++)w[n].dispose("ul_" + this.id); w = null; this.seletedTab = null; this.vGridPanel.dispose(); this.vGridPanel = null; this.vCardView.dispose(); this.vCardView.onSelect = null; this.vMapView.dispose(); this.vTable.dispose(); this.vTable.onSelect = null; this.vTable.onSort = null; this.vTable = null; s = null; o = null; l = null; a = null; f = null; this.getId = null; this.getReocrdDiv = null; this.getRoot = null; this.getVTablePanel = null; this.getVPanel = null; this.getVCardPanel = null; e.remove(); e = null; b && b.destroy(); b = null; this.onRowInserted = null } }; n.GridController.prototype.initTabPanel = function (t, i) { this.vTabPanel = new n.VTabPanel(i, t); this.vTabPanel.init(this.getMTab()); this.vTabPanel.addSizeChangeListner(this) }; n.GridController.prototype.initHeaderPanel = function (t) { this.vHeaderPanel = new n.HeaderPanel(t); this.vHeaderPanel.init(this); this.vHeaderPanel.addSizeChangeListner(this) }; n.GridController.prototype.initFilterPanel = function (t) { this.aFilterPanel = new n.FilterPanel(t, this) }; n.GridController.prototype.initFilterUI = function () { this.aFilterPanel && this.aFilterPanel.init() }; n.GridController.prototype.getTabPanel = function () { return this.vTabPanel.getRoot() }; n.GridController.prototype.getFilterPanel = function () { return this.aFilterPanel.getRoot() }; n.GridController.prototype.onSizeChanged = function () { this.multiRowResize(); this.vIncludedGC && this.vIncludedGC.multiRowResize() }; n.GridController.prototype.refreshTabPanelData = function (n) { this.vTabPanel && this.vTabPanel.refreshPanelData(n, this.gTab.getTableModel().getRow(this.gTab.getCurrentRow())) }; n.GridController.prototype.getSurveyCondition = function () { if (this.vTabPanel && this.vTabPanel.curTabPanel.getSurveyCondition) return this.vTabPanel.curTabPanel.getSurveyCondition() }; n.GridController.prototype.IsCheckListRequire = function () { var i = !0, f = !1, u, r; if (this.gTab.getHasPanel()) for (u = this.gTab.getTabPanels(), r = 0; r < u.length; r++)u[r].getClassName() == "VIS.SurveyPanel" && (f = !0, r = u.length); if (!f) return !0; var o = this.gTab.getAD_Table_ID(), s = this.gTab.getRecord_ID(), h = this.gTab.getAD_Window_ID(), l = this.gTab.currentRow, c = this.gTab, e = !1; return this.vTabPanel.curTabPanel && this.vTabPanel.curTabPanel.isCheckListFill && (e = this.vTabPanel.curTabPanel.isCheckListFill), t.ajax({ async: !1, url: n.Application.contextUrl + "SurveyPanel/IsCheckListRequire", data: { AD_Window_ID: h, AD_Table_ID: o, Record_ID: s }, success: function (t) { if (t = JSON.parse(t), t = t[0], t.ResponseCount > 0) i = !0; else if (t.Condition != "") { var r = n.Evaluator.evaluateLogicByRowData(c, t.Condition); i = r && e ? !0 : r ? !1 : !0 } else i = !0 }, error: function (n) { console.log(n) } }), i }; n.GridController.prototype.SaveSurvey = function (n) { return this.vTabPanel.curTabPanel.SaveData(n) }; n.GridController.prototype.refreshFilterPanelData = function () { this.aFilterPanel && this.aFilterPanel.refreshFilterOptions("", !0) }; n.GridController.prototype.initGrid = function (t, i, u, f) { var k = f.gridTable.gridFields, c = null, g = i + "_" + f.vo.AD_Tab_ID, nt = i + "_c" + f.vo.AD_Tab_ID, tt = i + "_m" + f.vo.AD_Tab_ID, b, d, v, e, l, w; if (f.getTableModel().setDoPaging(this.doPaging), b = n.MRole, b.getIsDisplayClient() && this.showClient || f.getField("AD_Client_ID").setDisplayed(!1), b.getIsDisplayOrg() && this.showOrg || f.getField("AD_Org_ID").setDisplayed(!1), d = this.vTable.setupGridTable(u, k, this.getVTablePanel(), g, f, this), f.addDataStatusListener(this), !t) { for (this.vCardView.setupCardView(u, f, this.getVCardPanel(), nt), f.getIsMapView() && this.vMapView.setupMapView(u, this, f, this.getVMapPanel(), tt), v = 0; v < d; v++)if (c = k[v], c.getIsDisplayed()) { if (e = n.VControlFactory.getControl(f, c, !1, !1, !1), e == null && !c.getIsHeading()) continue; e != null && (e.setReadOnly(!0), c.setPropertyChangeListener(e), e.addVetoableChangeListener(this)); this.vGridPanel.addField(e, c); e instanceof n.Controls.VButton && (c.getIsLink() && c.getIsRightPaneLink() && this.rightPaneLinkItems.push(e), c.getAD_Reference_Value_ID() == 435 && e.setReadOnly(!1), e.addActionListner(this)); e = null } this.vGridPanel.flushLayout(f.getHideFGFrom()) } if (l = 0, f.getIsTreeTab()) { var y = "", a = [], p = f.getAD_Table_ID(); (p == 208 || p == 291) && (y = p == 208 ? "VIS_155" : "VIS_156", a[0] = new n.DB.SqlParam("@AD_Org_ID", n.Env.getCtx().getAD_Org_ID()), l = n.Utility.Util.getValueOfInt(r(y, a)), a = []); l == 0 && (y = "VIS_120", a[0] = new n.DB.SqlParam("@AD_Client_ID", n.Env.getCtx().getAD_Client_ID()), a[1] = new n.DB.SqlParam("@AD_Table_ID", p), l = r(y, a)); l > 0 && (this.treeID = l, f.getShowSummaryLevel() ? (this.onDemandTree = !0, this.m_tree = new n.TreePanel(i, !1, !0, !0, this), u.aShowSummaryLevel.show()) : (this.onDemandTree = !1, this.m_tree = new n.TreePanel(i, !1, !0, !1, this), u.aShowSummaryLevel.hide()), this.m_tree.setTabID(f.getAD_Tab_ID()), f.getTabNo() == 0 && this.m_tree.initTree(l), this.getTreeArea().append(this.m_tree.getRoot()), this.m_tree.addSelectionChangeListner(this), this.getTreeArea().show()) } f.getTableModel().addTableModelListener(this.vTable); f.getTableModel().addCardModelListener(this.vCardView); f.getTableModel().addRowChangedListener(this); f.getTableModel().addQueryCompleteListner(this); f.getTableModel().setDoPaging(this.doPaging); f.getTableModel().setCurrentPage(1); this.gTab = f; this.windowNo = i; this.onlyMultiRow = t; this.aPanel = u; w = f.getTabLayout(); w == s ? this.singleRow = !1 : w == h ? this.switchSingleRow(!0) : w == o && (this.isCardRow = !1, this.switchCardRow(!0)) }; n.GridController.prototype.getIsHeaderPanel = function () { return this.gTab.getIsHeaderPanel() }; n.GridController.prototype.detachDynamicAction = function () { for (var n = 0, t = 0, n = 0, t = this.leftPaneLinkItems.length; n < t; n++)this.leftPaneLinkItems[n].getControl().detach(); for (n = 0, t = this.rightPaneLinkItems.length; n < t; n++)this.rightPaneLinkItems[n].getControl().detach(); n = null; t = null; this.vTabPanel && this.vTabPanel.getRoot().detach(); this.aFilterPanel && this.aFilterPanel.getRoot().detach() }; n.GridController.prototype.switchRowPresentation = function () { this.singleRow ? this.switchMultiRow() : this.switchSingleRow() }; n.GridController.prototype.getIsSingleRow = function () { return this.singleRow }; n.GridController.prototype.getIsCardRow = function () { return this.isCardRow }; n.GridController.prototype.getIsMapRow = function () { return this.isMapRow }; n.GridController.prototype.onTableRowSelect = function (n) { var t, i, r; if (!this.rowSetting && this.gTab.getRowCount() != 0) { if (t = this.vTable.get(n.recid, !0), i = this.gTab.getCurrentRow(), t == -1 && i >= 0) { this.vTable.select(n.recid); this.vCardView.navigate(n.recid, !this.isCardRow); return } if (t != i) this.rowSetting = !0, this.navigate(t), this.rowSetting = !1; else if (!this.settingGridSelecton) return; this.dynamicDisplay(-1); r = this; this.getIsSingleRow() ? r.notifyDependents() : window.setTimeout(function () { r.notifyDependents() }, 50) } }; n.GridController.prototype.switchIncludedGC = function () { this.vIncludedGC != null && this.switchIncludedGC() }; n.GridController.prototype.dynamicDisplay = function (t) { var v, e, r, u, i, o, f, s, l, a; if (this.gTab != null && !this.isCardRow && !this.isMapRow) { if (v = this.gTab.getRecord_ID(), !this.getIsSingleRow()) { this.dynamicDisplayLinks(t); return } if (this.gTab.getIsOpen()) { if (t >= 0) { var h = this.gTab.getField(t), u = h.getColumnName(), y = this.gTab.getDependantFields(u); if (y.length == 0 && h.getCallout().length > 0) return } var p = this.gTab.getRowCount() == 0, c = this.vGridPanel.getComponents(), w = c.length; for (e = 0; e < w; e++)if (r = c[e], u = r.getName(), u != null && (u.startsWith("lbl") && (u = u.substring(3)), i = this.gTab.getField(u), i != null)) { if (i.getDisplayType() == n.DisplayType.Button && i.getAD_Reference_Value_ID() == 435) continue; i.getIsDisplayed(!0) ? (o = r.tag, !r.getIsVisible() && (o == null || o == "undefined" || o) && (r.setVisible(!0), this.vGridPanel.setVisible(u, !0)), r instanceof n.Controls.IControl && (f = r, p ? f.setReadOnly(!0) : (s = i.getIsEditable(!0) && !this.gTab.getIsReadOnly(), f.setReadOnly(!s), f.showObscureButton && f.showObscureButton(s), f.setMandatory(i.getIsMandatory(!0)), f.setBackground(i.getIsError()), !i.getIsDefaultFocus() || this.isDefaultFocusSet || r.getName().startsWith("lbl") || (f.setDefaultFocus(!0), this.isDefaultFocusSet = !0), r.getName().startsWith("lbl") || i.getStyleLogic() == "" || (l = i.getStyleLogic().split(","), a = this.evaluateStyleCondition(i, l), f.setHtmlStyle(a))))) : r.getIsVisible() && (r.setVisible(!1), this.vGridPanel.setVisible(u, !1)); i.getIsDisplayed(!0) || i.getIsMandatory(!0) || i.setError(!1) } } } }; n.GridController.prototype.evaluateStyleCondition = function (t, i) { for (var r, f = null, u = 0; u < i.length; u++)if ((r = i[u].split("?"), r.length == 2) && n.Evaluator.evaluateLogic(t, r[0])) { f = r[1]; break } return f }; n.GridController.prototype.dynamicDisplayLinks = function () { var s, o, f, t, r, i, e, u, h; if (!this.displayAsIncludedGC) for (s = this.gTab.getRowCount() == 0, o = this.vGridPanel.getLinkComponents(), f = 0; f < o.length; f++)t = o[f], r = t.getName(), r != null && (r.startsWith("lbl") && (r = r.substring(3)), i = this.gTab.getField(r), i != null && (i.getIsDisplayed(!0) ? (e = t.tag, !t.getIsVisible() && (e == null || e == "undefined" || e) && t.setVisible(!0), t instanceof n.Controls.IControl && (u = t, s ? u.setReadOnly(!0) : (h = i.getIsEditable(!0) && !this.gTab.getIsReadOnly(), u.setReadOnly(!h), u.setMandatory(i.getIsMandatory(!0)), u.setBackground(i.getIsError())))) : t.getIsVisible() && t.setVisible(!1), i.getIsDisplayed(!0) || i.getIsMandatory(!0) || i.setError(!1))) }; n.GridController.prototype.setDefaultFocus = function () { for (var u, n, i, e = this.gTab.getRowCount() == 0, r = this.vGridPanel.getComponents(), f = r.length, t = 0; t < f; t++)if (u = r[t], n = u.getName(), n != null && (i = this.gTab.getField(n), i != null && i.getIsDefaultFocus())) { this.vTable.setDefaultFocus(n); break } }; n.GridController.prototype.setVisible = function (n) { this.layoutLoaded || this.initLayout(); n ? (this.getRoot().show(), this.vTable.resize()) : this.getRoot().hide() }; n.GridController.prototype.getMTab = function () { return this.gTab }; n.GridController.prototype.getAPanel = function () { return this.aPanel }; n.GridController.prototype.getIsDisplayed = function () { return this.gTab.getIsDisplayed(!1) }; n.GridController.prototype.getTabLevel = function () { return this.gTab.getTabLevel() }; n.GridController.prototype.getTitle = function () { return this.gTab.getName() }; n.GridController.prototype.getSelection = function (n) { return this.vTable.getSelection(n) }; n.GridController.prototype.getSelectedRows = function () { return this.vTable.getSelectedRows() }; n.GridController.prototype.getColumnNames = function () { var t, i, n; if (this.colNames) return this.colNames; for (t = this.gTab.getTableModel().getFields(), i = {}, n = 0; n < t.length; n++)i[t[n].getColumnName()] = t[n].getHeader(); return this.colNames = i, this.colNames }; n.GridController.prototype.setMnemonics = function () { }; n.GridController.prototype.activate = function (n) { var t, i; this.vTable.activate(); n = n || {}; this.vTable.setReadOnly(!1); this.displayAsIncludedGC ? (i = this.aPanel.getLayout(), this.setUI(!1), this.getRoot().detach(), i.append(this.getRoot()), this.displayAsIncludedGC = !1, this.aPanel.getIncludedEmptyArea().css({ display: "none" })) : this.gTab.getIncluded_Tab_ID() == 0 && (t = n.vIncludedGC, t && (i = t.aPanel.getLayout(), t.setUI(!1), t.getRoot().detach(), this.aPanel.getIncludedEmptyArea().css({ display: "none" }))); this.isIncludedGCVisible = !1; this.vIncludedGC && (this.vIncludedGC.displayAsIncludedGC = !1, this.vIncludedGC.isIncludedGCVisible = !1); this.activateTree() }; n.GridController.prototype.multiRowResize = function () { this.singleRow || this.isCardRow || this.vTable.resize() }; n.GridController.prototype.activateTree = function () { var t, i, r, e, o, s, u, f; if (this.gTab.getIsTreeTab() && this.gTab.getTabNo() > 0) { if (t = 0, this.gTab.getTabLevel() > 0 && (i = this.gTab.getKeyColumnName(), r = "AD_Tree_ID", i.startsWith("CM") && (i.equals("CM_Container_ID") ? r = "AD_TreeCMC_ID" : i.equals("CM_CStage_ID") ? r = "AD_TreeCMS_ID" : i.equals("CM_Template_ID") ? r = "AD_TreeCMT_ID" : i.equals("CM_Media_ID") && (r = "AD_TreeCMM_ID")), t = n.Env.getCtx().getWindowContextAsInt(this.windowNo, r)), t == 0) { if (e = this.gTab.getAD_Table_ID(), o = n.Env.getCtx().getAD_Client_ID(), e == 0) return 0; s = "VIS_121"; u = []; u[0] = new n.DB.SqlParam("@AD_Client_ID", o); u[1] = new n.DB.SqlParam("@AD_Table_ID", e); f = l(s, u); f.read() && (t = f.getInt(0)); f = null } this.m_tree != null && t > 0 && this.m_tree.initTree(t) } }; n.GridController.prototype.nodeSelectionChanged = function (n) { var u, t, f, r, i; if (n != null && (u = n.newValue, u != null)) { if (t = u, this.treeNodeID = t, this.gTab.SetSelectedNode(t), this.gTab.SetIsSummaryNode(n.isSummaryNode), this.onDemandTree) { this.aPanel && this.aPanel.setBusy && this.aPanel.setBusy(!0); this.gTab.setTreeNodeID(t); this.gTab.gridTable.setCurrentPage(1); this.navigate(0); this.query(0, 0, !1, t, this.treeID, this.gTab.getAD_Table_ID()); return } for (f = this.gTab.getRowCount(), r = -1, i = 0; i < f; i++)if (this.gTab.getKeyID(i) == t) { r = i; break } r != -1 && this.navigate(r) } }; n.GridController.prototype.skipRowInserting = function (n) { this.skipInserting = n }; n.GridController.prototype.query = function (n, t, i, r, u, f) { this.aPanel && this.aPanel.setBusy && this.aPanel.setBusy(!0); this.onDemandTree && (r && this.gTab.setTreeNodeID(r), u && this.gTab.setTreeID(u), f && this.gTab.setTreeTable(f), this.aPanel.isSummaryVisible ? this.gTab.setShowSummaryNodes(!0) : this.gTab.setShowSummaryNodes(!1)); var e = this.gTab.prepareQuery(n, t, i, !1) }; n.GridController.prototype.applyFilters = function (n) { var r = "", t = [], u, i; this.searchCode && this.searchCode != "" && t.push(this.searchCode); u = n.getWhereClause(); u != "" && t.push(n.getWhereClause()); this.aFilterPanel && (i = this.aFilterPanel.getFilterClause(), i != "" && t.push(i)); r = n.getWhereClause(!0); n.clear(); t.length > 0 ? (n.addRestriction(t.join(" AND ")), n.reportWhere = r) : n = null; this.getMTab().getTableModel().setCurrentPage(1); this.getMTab().setQuery(n); this.query(0, 0, null) }; n.GridController.prototype.queryCompleted = function () { this.vTable.clear(); this.gTab.clearSelectedRow(); this.vTable.add(this.gTab.getTableModel().getDataTable()); this.gTab.getTableModel().setSortModel(this.vTable.getGrid().records); this.displayAsIncludedGC || (this.onRowInserting ? this.onRowInserting() : this.checkInsertNewRow()); this.navigate(this.gTab.getCurrentRow(), !this.gTab.getTableModel().getIsInserting()); this.isCardRow && this.vCardView.refreshUI(this.getVCardPanel().width()); this.isMapRow && this.vMapView.refreshUI(this.getVMapPanel().width()); this.aPanel && this.aPanel.setBusy(this.isCardRow); this.skipInserting = !1; this.dynamicDisplay(-1) }; n.GridController.prototype.checkInsertNewRow = function () { if (this.aPanel == null || this.aContentPane) return !1; var t = !0, i = this.gTab.getLinkColumnName(), r = n.context.getWindowContext(this.windowNo, i); return (i.Length > 0 && r.length == 0 && (t = !1), (this.gTab.getTableModel().getTotalRowCount() == 0 || this.gTab.getTableModel().getTotalRowCount() == null) && !this.gTab.getIsReadOnly() && (this.gTab.getIsZoomAction() == !0 || n.context.getIsAutoNew(this.windowNo) || this.gTab.getIsQueryNewRecord() || this.gTab.getIsAutoNewRecord()) && t && this.gTab.getIsInsertRecord() && !this.skipInserting) ? (this.setNewRecordLayout(), this.dataNew(!1), !0) : !1 }; n.GridController.prototype.setNewRecordLayout = function () { var n = this.gTab.getNewRecordView(); n == e ? this.switchSingleRow() : n == f ? (this.isNewClick = !0, this.switchMultiRow()) : this.getIsCardRow() && this.switchSingleRow() }; n.GridController.prototype.vetoablechange = function (n) { var t = this.gTab.getTableModel(), i = this.gTab.getCurrentRow(), r = t.findColumn(n.propertyName); t.setValueAt(n.newValue, i, r) }; n.GridController.prototype.actionPerformed = function (n) { if (this.aContentPane) { this.aContentPane.actionPerformed(n); return } this.aPanel.actionPerformed(n) }; n.GridController.prototype.refreshUI = function () { this.dataRefreshAll() }; n.GridController.prototype.navigate = function (n, t) { if (!t && n == this.gTab.getCurrentRow()) return this.gTab.getCurrentRow(); var i = this.gTab.navigate(n, !0, t); if (i > -1 && !this.rowSetting ? (this.settingGridSelecton = !0, this.vTable.select(i), this.settingGridSelecton = !1, this.vCardView.navigate(i, !this.isCardRow)) : i > -1 && this.isCardRow && (this.settingGridSelecton = !0, this.vTable.select(i), this.settingGridSelecton = !1, this.vCardView.navigate(i, !0)), this.vHeaderPanel && this.vHeaderPanel.navigate(), i == -1) { this.cancelSel = !0; this.refreshTabPanelData(-1); return } return i > -1 && this.refreshTabPanelData(this.gTab.getRecord_ID()), this.navigateTreeNode(n), this.gTab.getCurrentRow() }; n.GridController.prototype.navigateTreeNode = function (i) { if (this.m_tree != null && (this.m_tree.setSelectedNode(this.gTab.getRecord_ID()), this.gTab.SetIsSummaryNode(this.m_tree.isSummaryNode)), this.vTable.scrollInView(i), this.onDemandTree) { var r = this.gTab.getRecord_ID(), u = this.treeID, f = this.aPanel; t.ajax({ url: n.Application.contextUrl + "JsonData/GetTreeNodePath", data: { nodeID: r, treeID: u }, success: function (n) { var t = JSON.parse(n); f.setStatusLine(t) }, error: function (n) { console.log(n) } }) } }; n.GridController.prototype.navigatePageExact = function (n) { this.gTab.getTableModel().setCurrentPage(n); this.query(this.gTab.getOnlyCurrentDays(), 0, !1, this.treeNodeID, this.treeID, this.gTab.getAD_Table_ID()) }; n.GridController.prototype.navigatePage = function (n) { this.gTab.getTableModel().setCurrentPageRelative(n); this.query(this.gTab.getOnlyCurrentDays(), 0, !1, this.treeNodeID, this.treeID, this.gTab.getAD_Table_ID()) }; n.GridController.prototype.navigateRelative = function (n) { return this.navigate(this.gTab.getCurrentRow() + n) }; n.GridController.prototype.dataRefresh = function () { var n = this.gTab.dataRefresh(); this.dynamicDisplay(-1); window.setTimeout(function (n) { n.notifyDependents(); n = null }, 500, this) }; n.GridController.prototype.dataRefreshAll = function () { this.gTab.dataRefreshAll() }; n.GridController.prototype.dataSave = function (t) { var i = this, u = i.IsCheckListRequire(), r; return u ? (i.m_tree != null && (i.gTab.SetSelectedNode(i.m_tree.currentNode), i.gTab.setTreeID(i.treeID)), r = i.gTab.dataSave(t), r && t && i.vHeaderPanel && i.vHeaderPanel.navigate(), r) : (n.ADialog.error("CheckListRequired"), !1) }; n.GridController.prototype.dataNew = function (n) { this.isDefaultFocusSet = !1; this.gTab.dataNew(n); this.dynamicDisplay(-1); this.notifyDependents(); this.onRowInserted && this.onRowInserted(); this.isDefaultFocusSet = !0 }; n.GridController.prototype.canDeleteRecords = function () { for (var r, i = this.vTable.getSelection(!0), f = this.vTable.getGrid().records, u = [], t = 0; t < i.length; t++)r = f[i[t]], "ad_client_id" in r && (n.MRole.getIsClientAccess(r.ad_client_id, !0) || u.push(i[t])); return u }; n.GridController.prototype.dataDelete = function () { var n = this.gTab.dataDelete(this.vTable.getSelection(!0)); return this.vTabPanel && this.vTabPanel.curTabPanel && this.vTabPanel.curTabPanel.isCheckListFill && this.vTabPanel.curTabPanel.setisCheckListFill(!1), this.refreshTabPanelData(this.gTab.getRecord_ID()), this.dynamicDisplay(-1), n }; n.GridController.prototype.dataDeleteAsync = function () { this.aPanel.setBusy(!0); var n = this; n.gTab.getTableModel().dataDeleteAsync(n.vTable.getSelection(!0), n.gTab.currentRow).then(function () { n.gTab.setCurrentRow(n.gTab.currentRow, !0); n.vTabPanel && n.vTabPanel.curTabPanel && n.vTabPanel.curTabPanel.isCheckListFill && n.vTabPanel.curTabPanel.setisCheckListFill(!1); n.refreshTabPanelData(n.gTab.getRecord_ID()); n.dynamicDisplay(-1); n.aPanel.setBusy(!1) }) }; n.GridController.prototype.rowChanged = function (n, i) { var r; if (this.m_tree != null) { if (t.isArray(i) && !n) { for (r = 0; r < i.length; r++)this.m_tree.nodeChanged(n, i[r], "", "", "", ""); return } if (!(i <= 0)) { var o = this.gTab.getValue("Name"), s = this.gTab.getValue("Description"), f = this.gTab.getValue("IsSummary"), e = f == !0 || f == "Y", u = this.gTab.getValue("Action"); this.gTab.gridTable.columns.indexOf("Action") != -1 || u || e || (u = "O"); this.m_tree.nodeChanged(n, i, o, s, e, u) } } }; n.GridController.prototype.dataIgnore = function () { this.gTab.dataIgnore(); this.dynamicDisplay(-1); this.notifyDependents(); this.vTable.refreshUndo() }; n.GridController.prototype.addSubTabDataStatusListner = function (n) { this.aContentPane = n }; n.GridController.prototype.removeSubTabDataStatusListner = function () { this.aContentPane = null }; n.GridController.prototype.dataStatusChanged = function (t) { var i, r, e, o, u, f, s, h; if (this.displayAsIncludedGC) { this.enableDisableToolbarItems(!0); return } if (this.aContentPane ? this.aContentPane.dataStatusChanged(t) : this.aPanel.dataStatusChanged(t), i = t.getChangedColumn(), this.vHeaderPanel ? this.vHeaderPanel.navigate() : this.aPanel.vHeaderPanel && this.aPanel.vHeaderPanel.navigate(!0), t.m_info == "VER" && (t.m_info = "", this.gTab.setCurrentRow(t.m_currentRow), this.dynamicDisplay(i)), t.getIsChanged() && !(i < 0)) { if (r = this.gTab.getField(i), r != null) if (r.getCallout().length > 0) e = this.gTab.processFieldChange(r), e.length > 0 && n.ADialog.error(e); else for (o = r.getColumnName(), dependants = this.gTab.getDependantFields(o), u = 0; u < dependants.length; u++)(f = dependants[u], f != null) && (s = f.getLookup(), s != null) && (h = s.getValidation(), h.indexOf(o) != -1 && (this.gTab.getTableModel().setDisableNotification(!0), this.gTab.setValue(f, null), this.gTab.getTableModel().setDisableNotification(!1))); this.dynamicDisplay(i) } }; n.GridController.prototype.includeTab = function (n) { var t = n.getMTab(); return this.gTab.getIncluded_Tab_ID() != t.getAD_Tab_ID() ? !1 : (this.vIncludedGC = n, this.vIncludedGC.switchMultiRow(), !0) }; n.GridController.prototype.switchSingleRow = function () { if (!this.onlyMultiRow && !this.singleRow) { this.singleRow = !0; this.isCardRow = !1; this.isMapRow = !1; var n = this.getVTablePanel(), t = this.getVPanel(); (this.isIncludedGCVisible || !0) && (n.hide(), t.css("display", "block"), this.getVCardPanel().hide(), this.getVMapPanel().hide()); this.gTab.isHPanelNotShowInMultiRow && this.vHeaderPanel != null && (this.vHeaderPanel.showPanel(), this.vHeaderPanel.sizeChangedListner && this.vHeaderPanel.sizeChangedListner.onSizeChanged && this.vHeaderPanel.sizeChangedListner.onSizeChanged()); this.dynamicDisplay(-1); this.aPanel.getTabSuffix() == "b" && (this.aPanel.getLayout().removeClass("vis-ad-w-p-center-view-height"), this.getRoot().find(".vis-ad-w-p-vc-editview").css("position", "unset")) } }; n.GridController.prototype.switchMultiRow = function () { if (this.singleRow || this.isCardRow) { this.aPanel.getTabSuffix() == "b" && (this.aPanel.getLayout().addClass("vis-ad-w-p-center-view-height"), this.getRoot().find(".vis-ad-w-p-vc-editview").css("position", "absolute")); this.singleRow = !1; this.isCardRow = !1; this.isMapRow = !1; var n = this.getVTablePanel(); this.getVPanel().hide(); this.getVCardPanel().hide(); this.getVMapPanel().hide(); this.isIncludedGCVisible ? n.css({ float: "right" }) : n.css({ float: "" }); n.show(); n = null; this.vTable.resize(); this.vTable.refreshRow(); this.gTab.isHPanelNotShowInMultiRow && this.vHeaderPanel != null && (this.vHeaderPanel.hidePanel(), this.vHeaderPanel.sizeChangedListner && this.vHeaderPanel.sizeChangedListner.onSizeChanged && this.vHeaderPanel.sizeChangedListner.onSizeChanged()); this.isNewClick = !1 } }; n.GridController.prototype.switchCardRow = function (t) { var i, r; this.isCardRow || (this.singleRow = !1, this.isCardRow = !0, this.isMapRow = !1, this.getVTablePanel().hide(), this.getVPanel().hide(), this.getVMapPanel().hide(), i = this.getVCardPanel(), this.isIncludedGCVisible ? i.css({ float: "right" }) : i.css({ float: "" }), i.css("display", "block"), this.gTab.getTableModel().setCardID(this.vCardView.cardID), t || (this.aPanel.clearSearchBox(), this.refreshFilterPanelData(), this.vCardView.resetCard(), r = new n.Query, this.getMTab().setQuery(r), this.query(this.gTab.getOnlyCurrentDays(), 0, !1)), i = null) }; n.GridController.prototype.switchMapRow = function (n) { if (!this.isMapRow) { this.singleRow = !0; this.isCardRow = !1; this.isMapRow = !0; this.getVTablePanel().hide(); this.getVPanel().hide(); this.getVCardPanel().hide(); var t = this.getVMapPanel(); this.isIncludedGCVisible ? t.css({ float: "right" }) : t.css({ float: "" }); t.show(); this.vMapView.refreshUI(this.getVMapPanel().width(), n); t = null } }; n.GridController.prototype.notifyDependents = function () { this.vIncludedGC && this.switchIncludedGC() }; n.GridController.prototype.switchIncludedGC = function () { var r, t, i; this.vIncludedGC && !this.displayAsIncludedGC && (r = this.isIncludedGCVisible, r || (t = this.aPanel.getIncludedEmptyArea(), t.empty(), i = this.vIncludedGC.getRoot(), i.detach(), this.vIncludedGC.setUI(!0), t.append(i), t.height(n.Application.isMobile ? 250 : 350), t.css("display", "flex"), i.show(), this.vIncludedGC.vTable.activate(), this.vIncludedGC.vTable.setReadOnly(!0), this.isIncludedGCVisible = !0, this.singleRow || (this.singleRow = !0, this.switchMultiRow()), this.vIncludedGC.displayAsIncludedGC = !0, this.vIncludedGC.singleRow = !0, this.vIncludedGC.switchMultiRow(), this.vTable.resize()), window.setTimeout(function (n) { n.vIncludedGC.query(0, 0, !1); n = null }, 1, this)) }; n.GridController.prototype.removeRecord = function () { var n = this.vTable.getSelection(!0), t; if (n && n.length > 0) for (t = 0; t < n.length; t++)this.vTable.grid.unselect(n[t] + 1), this.vTable.grid.remove(n[t] + 1); this.navigate(0); this.aPanel.setBusy(!1) }; n.GridController.prototype.dispose = function () { this.gTab.removeDataStatusListener(this.aPanel); this.gTab.removeDataStatusListener(); this.gTab.getTableModel().removeTableModelListener(this.vTable); this.gTab.getTableModel().removeCardModelListener(this.vCardView); this.gTab.getTableModel().removeRowChangedListener(); this.gTab.getTableModel().removeQueryCompleteListner(); this.disposeComponent(); this.gTab = null; this.windowNo = null; this.onlyMultiRow = null; this.aPanel = null; this.m_tree && this.m_tree.dispose(); this.vTabPanel && (this.vTabPanel.dispose(), this.vTabPanel = null); this.aFilterPanel && (this.aFilterPanel.dispose(), this.aFilterPanel = null); this.vHeaderPanel && this.vHeaderPanel.dispose(); this.m_tree = null }; n.GridController.prototype.HEADER_HEIGHT = 55 }(VIS, jQuery), function (n, t) { function h(n, i, r) { var u = null; return t.ajax({ url: l, type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", async: i, data: JSON.stringify(n) }).done(function (n) { u = n; r && r(n) }), u } function i() { function ni() { var i = document.importNode(a, !0); u = t(i.querySelector(".vis-ad-w-p")); it = u.find(".vis-ad-w-p-busy"); y = u.find(".vis-ad-w-p-tb-lc"); b = u.find(".vis-ad-w-p-nav-btns"); v = u.find(".vis-ad-w-p-t-c-tc"); h = u.find(".vis-ad-w-p-t-c"); nt = u.find(".vis-ad-w-p-tabs-oflow").hide(); lt = u.find(".vis-ad-w-p-tabs-t"); dt = u.find(".vis-ad-w-p-action").hide(); ut = u.find(".vis-ad-w-p-tb-rc-abar").hide(); f = u.find(".vis-ad-w-p-a-m-slist"); p = u.find(".vis-ad-w-p-a-m-dlist"); l = u.find(".vis-ad-w-p-a-main"); ft = u.find(".vis-ad-w-p-a-oflow"); et = u.find(".vis-ad-w-p-header-l"); vt = u.find(".vis-ad-w-p-center-inctab"); tt = u.find(".vis-ad-w-p-tb-rc-a-list"); st = u.find(".vis-ad-w-p-center-view"); rt = u.find(".vis-ad-w-p-status"); w = u.find(".vis-ad-w-p-actionpanel-r"); e = u.find(".vis-ad-w-p-tb-s-input"); s = u.find(".vis-ad-w-p-tb-s-icon"); c = u.find(".vis-ad-w-p-tb-s-icon-down"); e.attr("placeholder", n.Msg.getMsg("Search")); ht = u.find(".vis-ad-w-p-tb-s-btn"); pt = u.find(".vis-ad-w-p-tb-advsrch"); wt = u.find(".vis-ad-w-p-t-close"); bt = u.find(".vis-ad-w-p-t-name h5"); ct = u.find("span.vis-ad-w-p-tb-rc-action"); k = u.find(".vis-ad-w-p-filterpnl").hide(); kt = u.find(".vis-ad-w-p-setting"); at = k.find(".vis-fp-bodywrap"); k.find(".vis-fp-header h4").text(n.Msg.getMsg("Filter")); yt = k.find(".vis-fp-header .vis-mark"); gt(); ti() } function ii() { lt.show(); rt.show(); n.Application.isMobile && (ft.hide(), l.addClass("vis-ad-w-p-a-main-mob"), h.addClass("vis-ad-w-p-t-c-mob")); r.vTabbedPane.finishLayout(n.Application.isMobile); r.gridWindow.getIsHideTabLinks() && lt.find("*").css("visibility", "hidden"); r.gridWindow.getIsHideTabLinks(); gt() } var g, d, ot, i; this.$parentWindow; this.ctx = n.Env.getCtx(); this.curGC; this.curST; this.curTab; this.vTabbedPane = new n.VTabbedPane(!1); this.statusBar = new n.StatusBar; this.curWinTab = null; this.curTabIndex; this.firstTabId = null; this.DocActionVariables = {}; this.DocActionVariables.STATUS_COMPLETED = "CO"; this.DocActionVariables.STATUS_CLOSED = "CL"; this.DocActionVariables.STATUS_VOIDED = "VO"; this.DocActionVariables.STATUS_REVERSED = "RE"; this.toolbarCreated = !1; this.errorDisplayed = !1; this.isPersonalLock = n.MRole.getIsPersonalLock(); this.isShowSharedRecord = n.MRole.getIsShowSharedRecord(); this.log = n.Logging.VLogger.getVLogger("APanel"); this.isSummaryVisible = !1; this.lastView = ""; var st, b, y, rt, v, h, nt, e, ht, s, c, ct, u, it, tt, ut, f, p, l, ft, et = "", vt, lt, k = "", at = "", yt = "", w = null, pt = null, wt = null, bt = null, kt = null, dt = null; this.excludeFromShare = ["ad_org", "m_warehouse", "ad_sharerecordorg"]; d = []; ot = {}; this.defaultSearch = !0; this.isAutoCompleteOpen = !1; this.instructionPop = {}; this.instructionPop[this.ACTION_NAME_NEW] = !1; this.tabStack = []; this.toolbarActionList = ["UNO", "NRD", "SAR", "DRD", "RQY", "RET", "PRT", "BVW"]; var gt = function () { ct.attr("title", n.Msg.getMsg("FilterRecord")); kt.attr("title", n.Msg.getMsg("Settings")) }, r = this, ti = function () { u.on("click", function (n) { u.find(".vis-window-instruc-overlay-new").remove(); u.find(".vis-window-instruc-overlay-new-li").removeClass(".vis-window-instruc-overlay-new-li"); t(n.target).is(":focus") && r.compositViewChangeSave(n) }) }; this.createSearchAutoComplete = function () { if (e) { var i = this; e.autocomplete({ select: function (t, i) { r.defaultSearch = !1; r.isSummaryVisible ? r.curTab.setShowSummaryNodes(!0) : r.curTab.setShowSummaryNodes(!1); var u = new n.Query(r.curTab.getTableName(), !1); r.curTab.searchText = i.item.value; r.curTab.userQueryID = i.item.id; i.item.code != n.Msg.getMsg("All") && (r.curGC.searchCode = i.item.code); r.curGC.applyFilters(u); s.css("visibility", "visible"); c.css("visibility", "visible").css("transform", "rotate(360deg)"); t.stopPropagation() }, minLength: 0, open: function () { i.isAutoCompleteOpen = !0 }, close: function () { c.css("transform", "rotate(360deg)"); window.setTimeout(function () { i.isAutoCompleteOpen = !1 }, 400) }, source: [] }); e.autocomplete().data("ui-autocomplete")._renderItem = function (u, f) { var e = null, o; e = i.curTab.getTabLevel() == 0 ? f.defaultids && f.userid > 0 ? t("<span title='" + n.Msg.getMsg("DefaultSearch") + "'  data-id='" + f.id + "' class='VIS-winSearch-defaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("MakeDefaultSearch") + "' data-id='" + f.id + "' class='VIS-winSearch-NonDefaultIcon'><\/span>") : t("<span title='" + n.Msg.getMsg("DefaultSearch") + "'  data-id='" + f.id + "'><\/span>"); o = t("<li>").append(t("<a style='display:block' title='" + f.title + "'>" + f.label + "<\/a>").append(e)).appendTo(u); e.on("click", function () { var i = t(this).data("id"); t.ajax({ url: n.Application.contextUrl + "JsonData/InsertUpdateDefaultSearch", dataType: "json", data: { AD_Tab_ID: r.curTab.getAD_Tab_ID(), AD_Table_ID: r.curTab.getAD_Table_ID(), AD_User_ID: r.ctx.getAD_User_ID(), AD_UserQuery_ID: i }, success: function () { }, error: function (n) { console.log(n) } }) }); return o } } }; ni(); rt.append(this.statusBar.getRoot()); this.setSize = function () { return }; this.getIsWindowAction = function (n) { return n == 435 ? !0 : !1 }; i = function (n) { r.actionPerformed(n) }; this.onTabChange = function (n) { r.tabActionPerformed(n) }; this.statusBar.onComboChange = function (n) { r.setBusy(!0); setTimeout(function () { r.curGC.navigatePageExact(n + 1); r.curGC.onDemandTree || r.setBusy(!1) }, 100) }; this.createToolBar = function () { this.aRefresh = this.addActions(this.ACTION_NAME_REFRESH, null, !0, !0, !1, i, null, "Shct_Refresh", "Refresh"); this.aDelete = this.addActions(this.ACTION_NAME_DELETE, null, !0, !0, !1, i, null, "Shct_Delete", "Delete"); this.aNew = this.addActions(this.ACTION_NAME_NEW, null, !0, !1, !1, i, null, "Shct_New", "New"); this.aIgnore = this.addActions("UNO", null, !0, !0, !1, i, null, "Shct_Ignore", "Ignore"); this.aSave = this.addActions("SAR", null, !0, !0, !1, i, null, "Shct_Save", "Save"); this.aFind = this.addActions("Find", null, !0, !0, !1, i, null, "Shct_Find"); this.aInfo = this.addActions("Info", null, !0, !0, !1, i, null, "Shct_Info"); this.aReport = this.addActions("RET", null, !0, !0, !1, i, null, "Shct_Report", "Report"); this.aPrint = this.addActions("PRT", null, !0, !0, !1, i, null, "Shct_Print", "Print"); this.aBack = this.addActions("BVW", null, !0, !0, !1, i, null, "Shct_Back", "back-arrow"); this.gridWindow.getIsHideToolbar() || (y.append(this.aBack.getListItm()), y.append(this.aIgnore.getListItm()), y.append(this.aNew.getListItm()), y.append(this.aDelete.getListItm()), y.append(this.aSave.getListItm()), y.append(this.aRefresh.getListItm()), y.append(this.aReport.getListItm()), y.append(this.aPrint.getListItm())); pt.append(this.aFind.getListItm()); this.aPrevious = this.addActions(this.ACTION_NAME_PREV, null, !0, !0, !0, i, null, "Shct_PrevRec"); this.aFirst = this.addActions(this.ACTION_NAME_FIRST, null, !0, !0, !0, i, null, "Shct_FirstRec"); this.aLast = this.addActions(this.ACTION_NAME_LAST, null, !0, !0, !0, i, null, "Shct_LastRec"); this.aNext = this.addActions(this.ACTION_NAME_NEXT, null, !0, !0, !0, i, null, "Shct_NextRec"); this.aMulti = this.addActions("Multi", null, !1, !0, !0, i, !1, "Shct_MultiRow", "Multix"); this.aSingle = this.addActions("Single", null, !1, !0, !0, i, !1, "Shct_MultiRow", "Multi"); this.aCard = this.addActions("Card", null, !1, !0, !0, i, !1, "Shct_CardView", "card-o"); this.aMap = this.addActions("Map", null, !1, !0, !0, i); b.append(this.aPrevious.getListItm()).append(this.aNext.getListItm()); b.append(this.aMulti.getListItm()); b.append(this.aSingle.getListItm()); b.append(this.aCard.getListItm()); b.append(this.aMap.getListItm().hide()); this.aPageUp = this.addActions(this.ACTION_NAME_PAGEUP, null, !0, !0, !0, i, null, "Shct_PageUp"); this.aPageFirst = this.addActions("PageFirst", null, !0, !0, !0, i, null, "Shct_PageFirst"); this.aPageLast = this.addActions("PageLast", null, !0, !0, !0, i, null, "Shct_PageLast"); this.aPageDown = this.addActions(this.ACTION_NAME_PAGEDOWN, null, !0, !0, !0, i, null, "Shct_PageDown"); var r = this.gridWindow; actionItemCount_Right = 0; r.getIsHideActionbar() || (ut.show(), dt.show()); this.aBatchUpdate = this.addActions("BUE", null, !1, !1, !1, i); n.Env.getCtx().getContext("#ENABLE_BATCHUPDATE") === "Y" && this.ctx.getAD_User_ID() == 100 && (this.aBatchUpdate.setTextDirection("r"), f.append(this.aBatchUpdate.getListItmIT())); r.getIsAppointment() && (this.aAppointment = this.addActions("APT", null, !1, !1, !1, i), this.aAppointment.setTextDirection("r"), f.append(this.aAppointment.getListItmIT())); r.getIsTask() && (this.aTask = this.addActions("TAK", null, !1, !1, !1, i), this.aTask.setTextDirection("r"), f.append(this.aTask.getListItmIT())); r.getIsEmail() && (this.aEmail = this.addActions("EML", null, !1, !1, !1, i), this.aEmail.setTextDirection("r"), f.append(this.aEmail.getListItmIT())); r.getIsLetter() && (this.aLetter = this.addActions("LER", null, !1, !1, !1, i), this.aLetter.setTextDirection("r"), f.append(this.aLetter.getListItmIT())); r.getIsSms() && (this.aSms = this.addActions("SMS", null, !1, !1, !1, i), this.aSms.setTextDirection("r"), f.append(this.aSms.getListItmIT())); r.getIsFaxEmail() && (this.aFaxEmail = this.addActions("FaxEmail", null, !1, !1, !1, i), this.aFaxEmail.setTextDirection("r"), f.append(this.aFaxEmail.getListItmIT())); r.getIsChat() && (this.aChat = this.addActions(this.ACTION_NAME_CHAT, null, !1, !1, !1, i, !0), this.aChat.setTextDirection("r"), f.append(this.aChat.getListItmIT())); r.getIsAttachment() && (this.aAttachment = this.addActions("ATT", null, !1, !1, !1, i, !0), this.aAttachment.setTextDirection("r"), f.append(this.aAttachment.getListItmIT())); r.getIsHistory() && (this.aHistory = this.addActions("HIY", null, !1, !1, !1, i), this.aHistory.setTextDirection("r"), f.append(this.aHistory.getListItmIT())); r.getIsCheckRequest() && (this.aRequest = this.addActions("CRT", null, !0, !1, !1, i), this.aRequest.setTextDirection("r"), f.append(this.aRequest.getListItmIT())); n.AEnv.getIsWorkflowProcess() && (this.aWorkflow = this.addActions("Workflow", null, !0, !1, !1, i), this.aWorkflow.setTextDirection("r"), f.append(this.aWorkflow.getListItmIT())); r.getIsCopyReocrd() && (this.aCopy = this.addActions("CRD", null, !1, !1, !1, i), this.aCopy.setTextDirection("r"), f.append(this.aCopy.getListItmIT())); r.getIsSubscribedRecord() && (this.aSubscribe = this.addActions("SRD", null, !0, !1, !1, i, !0), this.aSubscribe.setTextDirection("r"), f.append(this.aSubscribe.getListItmIT())); r.getIsZoomAcross() && (this.aZoomAcross = this.addActions("ZAS", null, !0, !1, !1, i), this.aZoomAcross.setTextDirection("r"), f.append(this.aZoomAcross.getListItmIT())); n.MRole.getFormAccess(this.ctx.getContextAsInt("DMS_Form_ID")) && (r.getIsCreatedDocument() && (this.aCreateDocument = this.addActions("CDT", null, !1, !1, !1, i), this.aCreateDocument.setTextDirection("r"), f.append(this.aCreateDocument.getListItmIT())), r.getIsUploadedDocument() && (this.aUploadDocument = this.addActions("UDT", null, !1, !1, !1, i), this.aUploadDocument.setTextDirection("r"), f.append(this.aUploadDocument.getListItmIT())), r.getIsViewDocument() && (this.aViewDocument = this.addActions("VDT", null, !1, !1, !1, i, !0), this.aViewDocument.setTextDirection("r"), f.append(this.aViewDocument.getListItmIT())), r.getIsAttachDocumentFrom() && (this.aAttachFrom = this.addActions("ADF", null, !1, !1, !1, i, !0), this.aAttachFrom.setTextDirection("r"), f.append(this.aAttachFrom.getListItmIT())), r.getIsGenerateAttachmentCode() && (this.aGenerateAttachmentCode = this.addActions("CAC", null, !1, !1, !1, i), this.aGenerateAttachmentCode.setTextDirection("r"), f.append(this.aGenerateAttachmentCode.getListItmIT()))); r.getIsMarkToExport() && (this.aMarkToExport = this.addActions("MTE", null, !1, !1, !1, i, !0), this.aMarkToExport.setTextDirection("r"), f.append(this.aMarkToExport.getListItmIT())); r.getIsImportMap() && (this.aImportMap = this.addActions("IMP", null, !1, !1, !1, i), this.aImportMap.setTextDirection("r"), f.append(this.aImportMap.getListItmIT())); r.getIsArchive(); r.getIsAttachmail(); r.getIsRoleCenterView(); this.isPersonalLock && (this.aLock = this.addActions("Lock", null, !0, !1, !1, i, !0), this.aLock.setTextDirection("r"), f.append(this.aLock.getListItmIT()), this.aRecAccess = this.addActions("RecordAccess", null, !0, !1, !1, i, !0), this.aRecAccess.setTextDirection("r"), f.append(this.aRecAccess.getListItmIT())); this.isShowSharedRecord && r.getWindowType() == "M" ? (this.aSharedRecord = this.addActions(this.ACTION_NAME_SHAREDREC, null, !0, !1, !1, i, !0), this.aSharedRecord.setTextDirection("r"), f.append(this.aSharedRecord.getListItmIT())) : this.isShowSharedRecord = !1; this.aPreference = this.addActions("Preference", null, !1, !1, !0, i); n.MRole.getDefault().getIsShowPreference() && tt.append(this.aPreference.getListItmIT()); this.aHelp = this.addActions("Help", null, !0, !1, !0, i); tt.append(this.aHelp.getListItmIT()); this.aCardDialog = this.addActions("CardDialog", null, !0, !1, !0, i); tt.append(this.aCardDialog.getListItmIT()); this.aShowSummaryLevel = this.addActions("ShowSummaryNodes", null, !0, !1, !0, i, !0); tt.append(this.aShowSummaryLevel.getListItmIT()); r = null; this.statusBar.setPageItem(this.aPageUp.getListItm()); this.statusBar.setComboPage(); this.statusBar.setPageItem(this.aPageDown.getListItm()); this.statusBar.render(); this.toolbarCreated = !0; this.setRightBarVisibility = function (n) { n && t(tt.parent()[0]).removeClass("show") }; ii() }; this.setDynamicActions = function () { if (this.curGC != null) { p.css("display", "none"); var n = 0, t = []; if (this.curGC.leftPaneLinkItems.length > 0) for (t = this.curGC.leftPaneLinkItems, n = 0; n < t.length; n++)p.append(t[n].getControl()); if (n = 0, this.curGC.rightPaneLinkItems.length > 0) for (t = this.curGC.rightPaneLinkItems, n = 0; n < t.length; n++)p.append(t[n].getControl()); (this.curGC.leftPaneLinkItems.length > 0 || this.curGC.rightPaneLinkItems.length > 0) && (p.css("display", "flex"), this.updateLabelVisbility()); t = null } }; this.getRoot = function () { return u }; this.getLayout = function () { return st }; this.getIncludedEmptyArea = function () { return vt }; this.getParentDetailPane = function () { return et }; this.getFilterPane = function () { return at }; this.clearSearchBox = function () { s.css("visibility", "hidden"); r.defaultSearch = !0; r.clearSearchText(); e.val("") }; this.showTabPanel = function (n) { var t, i, r; n ? (t = "vis-ad-w-p-center-flow-", i = "vis-ad-w-p-actionpanel-", g = this.curTab.getIsTPBottomAligned() ? "b" : "r", r = this.curTab.getIsTPBottomAligned() ? "r" : "b", w.hasClass(i + g) || (w.parent().removeClass(t + r).addClass(t + g), w.removeClass(), w.addClass(i + g)), this.curGC && w.append(this.curGC.getTabPanel()), w.css({ display: "grid" }), this.curGC.getIsSingleRow() && g == "b" && (this.getLayout().removeClass("vis-ad-w-p-center-view-height"), this.getLayout().find(".vis-ad-w-p-vc-editview").css("position", "unset"))) : w.css({ display: "none" }) }; this.showFilterPanel = function (n) { this.curGC ? (at.append(this.curGC.getFilterPanel()), this.curGC.initFilterUI(), n || this.curGC.refreshFilterPanelData()) : k.hide() }; this.setTabPanelclass = function () { }; this.getTabControl = function () { return v }; this.getLinkControl = function () { return " New Link Control for header Composite" }; this.setTabControl = function (t) { var i, r; for (d = t, i = 0; i < t.length; i++)r = t[i].getListItm(), ot[d[i].action] = r, v.append(r); v.width() > h.width() && (n.Application.isMobile || nt.show()) }; this.setTabNavigation = function () { v.width() > h.width() ? n.Application.isMobile || nt.show() : nt.hide() }; this.setSelectedTab = function (n) { this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"); this.selectedTab = ot[n]; this.selectedTab.addClass("vis-apanel-tab-selected") }; this.navigateThroghtShortcut = function (n) { var t = null; n ? (t = v.find(".vis-apanel-tab-selected").nextAll("[style='opacity: 1;']:first"), (!t || t.length <= 0) && (t = v.children().first())) : (t = v.find(".vis-apanel-tab-selected").prevAll("[style='opacity: 1;']:first"), (!t || t.length <= 0) && (t = v.children().last())); t.trigger("click") }; this.setBusy = function (n, t) { this.isLocked = n; n ? it[0].style.visibility = "visible" : (it[0].style.visibility = "hidden", t) }; this.startFilterPanel = function () { k.show(); this.refresh() }; this.getTabSuffix = function () { return g }; ct.on("click", function () { r.startFilterPanel() }); yt.on("click", function () { k.hide(); r.refresh() }); nt.on("click", function (i) { var r, o; if (i.stopPropagation(), r = t(i.target).data("dir"), r) { var c = h.width(), s = v.width(), f = h.scrollLeft(), e = Math.ceil(c / 2), u = 0; if (n.Application.isRTL && (r == "r" ? r = "b" : r == "rl" ? r = "bf" : r == "bf" ? r = "rl" : r == "b" && (r = "r")), r == "r") { if (f + e >= s - e && !n.Application.isRTL) return; o = s - c; u = f + e; h.animate({ scrollLeft: u > o ? o : u }, 1e3) } else if (r == "b") if (n.Application.isRTL) u = f - e, h.animate({ scrollLeft: u > 0 ? 0 : u }, 1e3); else { if (f == 0) return; u = f - e; h.animate({ scrollLeft: u < 0 ? 0 : u }, 1e3) } if (r == "rl") { if (f + e >= s - e) return; n.Application.isRTL ? h.animate({ scrollLeft: 0 }, 500) : (o = s - c, h.animate({ scrollLeft: o }, 500)) } else if (r == "bf") if (n.Application.isRTL) o = s - c, h.animate({ scrollLeft: -o }, 500); else { if (f == 0) return; u = f - e; h.animate({ scrollLeft: 0 }, 500) } } }); ft.on("click", function (n) { var r, o; if (n.stopPropagation(), r = t(n.target).data("dir"), r) { var s = l.height(), h = f.height() + p.height(), u = l.scrollTop(), e = Math.ceil(s / 2), i = 0; if (r == "d") { if (u + e >= h - e) return; o = h - s; i = u + e; l.animate({ scrollTop: i > o ? o : i }, 1e3) } else if (r == "u") { if (u == 0) return; i = u - e; l.animate({ scrollTop: i < 0 ? 0 : i }, 1e3) } } }); ht.on(n.Events.onTouchStartOrClick, function (n) { r.cmd_find(e.val()); r.clearSearchText(); e.val(""); n.stopPropagation() }); if (!n.Application.isMobile) e.on("keyup", function (t) { var u = t.charCode || t.keyCode, i; if (u == 13) { if (!r.defaultSearch) return; r.cmd_find(e.val()); e.val("") } else u == 8 && s.css("visibility") == "visible" && (t.preventDefault(), r.defaultSearch = !0, e.val(""), s.css("visibility", "hidden"), i = new n.Query, i.addRestriction(" 1 = 1 "), r.findRecords(i)) }); c.on("click", function () { r.isAutoCompleteOpen ? c.css("transform", "rotate(360deg)") : (c.css("transform", "rotate(180deg)"), r.refreshSavedASearchList(!0)) }); s.on("click", function () { s.css("visibility", "hidden"); r.defaultSearch = !0; r.clearSearchText(); e.val(""); var t = new n.Query; r.findRecords(t); c.css("transform", "rotate(360deg)") }); this.setAdvancedSerachText = function (n, t) { n ? s.css("visibility", "hidden") : (s.css("visibility", "visible"), c.css("visibility", "visible")); e.val(t) }; this.toggleASearchIcons = function (n, t) { n && t ? (s.css("visibility", "visible"), c.css("visibility", "visible")) : n && !t ? (s.css("visibility", "hidden"), c.css("visibility", "visible")) : (s.css("visibility", "hidden"), c.css("visibility", "hidden")) }; this.setSearchFocus = function (n) { n ? e.focus() : e.trigger("focusout") }; this.refreshSavedASearchList = function (t, i) { var u = [], f; u[0] = new n.DB.SqlParam("@AD_Tab_ID", r.curTab.getAD_Tab_ID()); u[1] = new n.DB.SqlParam("@AD_User_ID", parseInt(r.ctx.getAD_User_ID())); u[2] = new n.DB.SqlParam("@AD_Tab_ID1", r.curTab.getAD_Tab_ID()); u[3] = new n.DB.SqlParam("@AD_User_ID1", parseInt(r.ctx.getAD_User_ID())); u[4] = new n.DB.SqlParam("@AD_Client_ID", parseInt(r.ctx.getAD_Client_ID())); u[5] = new n.DB.SqlParam("@AD_Tab_ID2", r.curTab.getAD_Tab_ID()); u[6] = new n.DB.SqlParam("@AD_Table_ID", r.curTab.getAD_Table_ID()); f = this; o("VIS_116", u, function (r) { var o = [], h, u; if (r && r.tables[0].rows && r.tables[0].rows.length > 0) for (c.css("visibility", "visible"), o.push({ label: n.Msg.getMsg("All"), value: n.Msg.getMsg("All"), code: n.Msg.getMsg("All") }), h = !1, u = 0; u < r.tables[0].rows.length; u++)r.tables[0].rows[u].cells.ad_defaultuserquery_id > 0 ? (o.push({ title: r.tables[0].rows[u].cells.title, label: r.tables[0].rows[u].cells.name, value: r.tables[0].rows[u].cells.name, code: r.tables[0].rows[u].cells.code, id: r.tables[0].rows[u].cells.ad_userquery_id, defaultids: r.tables[0].rows[u].cells.ad_defaultuserquery_id, userid: r.tables[0].rows[u].cells.ad_defaultuserquery_id }), h = !0) : o.push({ title: r.tables[0].rows[u].cells.title, label: r.tables[0].rows[u].cells.name, value: r.tables[0].rows[u].cells.name, code: r.tables[0].rows[u].cells.code, id: r.tables[0].rows[u].cells.ad_userquery_id }); else f.toggleASearchIcons(!1, !1); i || (i = e.val()); i && i.length > 0 ? (i.length > 25 ? e.val(i.substr(0, 25) + "...") : e.val(i), s.css("visibility", "visible"), f.defaultSearch = !1) : s.css("visibility", "hidden"); e.autocomplete("option", "source", o); t && (e.autocomplete("search", ""), e.trigger("focus")) }) }; this.findRecords = function (t) { this.curTab.getTableModel().setCurrentPage(1); this.isSummaryVisible ? this.curTab.setShowSummaryNodes(!0) : this.curTab.setShowSummaryNodes(!1); this.curGC.skipRowInserting(!0); t || (t = new n.Query); this.curGC.applyFilters(t) }; this.setTitle = function (n) { bt.text(n) }; this.highlightButton = function (t, i) { var u = i.$li, r = this.getRoot(); if (i.getAction() == this.ACTION_NAME_NEW) { if ((!t || e.val().length > 0) && (this.instructionPop[this.ACTION_NAME_NEW] = !0), this.instructionPop[this.ACTION_NAME_NEW]) { r.find(".vis-window-instruc-overlay-new").length > 0 && (r.find(".vis-window-instruc-overlay-new").remove(), u.removeClass("vis-window-instruc-overlay-new-li")); return } r.find(".vis-window-instruc-overlay-new").length <= 0 && (r.prepend('<div class="vis-window-instruc-overlay-new"><div class="vis-window-instruc-overlay-new-inn"><p>' + n.Msg.getMsg("CreateNewRec") + "<\/p><\/div><\/div>"), u.addClass("vis-window-instruc-overlay-new-li"), this.instructionPop[this.ACTION_NAME_NEW] = !0) } }; wt.on("click", function () { r.$parentWindow.dispose() }); this.updateLabelVisbility = function () { var n = parseInt(l.width()); n > 50 ? (f.find("span").show(), p.find("span").show()) : (f.find("span").hide(), p.find("span").hide()) }; ut.on(n.Events.onTouchStartOrClick, function (n) { n.stopPropagation(); n.preventDefault(); var t = parseInt(l.width()); t > 50 ? (f.find("span").hide(), p.find("span").hide()) : l.css({ position: "absolute" }); l.animate({ width: t > 50 ? "30" : "220" }, 300, "swing", function () { t < 50 ? (f.find("span").show(), p.find("span").show()) : (l.css({ position: "" }), l.css({ width: "" })); r.curGC && r.curGC.multiRowResize(); r.setTabNavigation() }) }); this.disposeComponent = function () { if (ht.off(n.Events.onTouchStartOrClick), e.remove(), e = null, ut.off(n.onTouchStartOrClick), ft.off("click"), nt.off("click"), u.remove(), it.remove(), u = it = st = b = y = rt = null, r = null, i = null, this.toolbarCreated && (this.aRefresh.dispose(), this.aDelete.dispose(), this.aNew.dispose(), this.aSave.dispose(), this.aPrevious.dispose(), this.aFirst.dispose(), this.aLast.dispose(), this.aNext.dispose(), this.aPageUp.dispose(), this.aPageFirst.dispose(), this.aPageLast.dispose(), this.aPageDown.dispose(), this.aCard.dispose(), this.aCardDialog.dispose(), this.aShowSummaryLevel && this.aShowSummaryLevel.dispose(), this.aChat && this.aChat.dispose(), this.aAppointment && this.aAppointment.dispose(), this.aBatchUpdate && this.aBatchUpdate.dispose(), this.aHelp.dispose(), this.aSubscribe && this.aSubscribe.dispose(), this.aAttachment && this.aAttachment.dispose(), this.aHistory && this.aHistory.dispose(), this.aZoomAcross && this.aZoomAcross.dispose(), this.aRequest && this.aRequest.dispose(), this.aMarkToExport && this.aMarkToExport.dispose(), this.aWorkflow && this.aWorkflow.dispose(), this.aRecAccess && this.aRecAccess.dispose(), this.aImportMap && this.aImportMap.dispose(), this.aRefresh = this.aDelete = this.aNew = this.aPrevious = this.aFirst = this.aLast = this.aNext = null, this.aChat = this.aPageUp = this.aPageFirst = this.aPageLast = this.aPageDown = null, this.aHelp = this.aSubscribe = this.aAttachment = null, this.toolbarCreated = null, this.aZoomAcross = this.aRequest = this.aMark = this.aWorkflow = this.aHistory = null, this.aAppointment = null, this.aBatchUpdate = null, this.aRecAccess = this.aImportMap = this.aCard = this.aCardDialog = this.aShowSummaryLevel = null), this.statusBar.dispose(), this.statusBar.onComboChange = null, this.statusBar = null, this.getRoot = null, this.getLayout = null, this.setBusy = null, this.createToolBar = null, this.$parentWindow = null, this.ctx = null, this.curGC = null, this.curST = null, this.curTab = null, this.vTabbedPane = null, this.curWinTab = null, this.curTabIndex = null, this.firstTabId = null, et.remove(), et = null, this.getParentDetailPane = null, d) for (var t = 0; t < d.length; t++)d[t].dispose(); d = null; ot = null; v.remove() } } function v(i) { t.ajax({ url: n.Application.contextUrl + "Posting/PostByNewLogic", dataType: "json", async: !0, data: { AD_Client_ID: n.context.getAD_Client_ID() }, error: function () { n.ADialog.info(n.Msg.getMsg("ERRORGettingPostingServer")) }, success: function (n) { i && i(n.result) } }) } function c(i, r, u, e, o, s, h) { var a = i.getName(), c = !1, y = !0, v; try { if (i.getAskUserBGProcess() == !0 || i.getIsBackgroundProcess() == !0) { var p = t('<div class="vis-confirm-popup-check"><label>' + n.Msg.translate(n.context, "IsBackgroundProcess") + "<\/label><\/div>"), l = t('<input type="checkbox">'), w = i.getIsBackgroundProcess(); l.prop("checked", w); l.prop("disabled", w); p.prepend(l); n.ADialog.confirmCustomUI("StartProcess?", !0, i.getDescription() + "\n" + i.getHelp(), "Confirm", p, function (n) { if (n) return isBg = l.is(":checked"), f(i, r, u, e, h, o, c, a, isBg) }) } else if (v = i.getIsBackgroundProcess(), s || i.getDescription().equals("") && i.getHelp().equals("") || (y = !1, n.ADialog.confirm("StartProcess?", !0, i.getDescription() + "\n" + i.getHelp(), "Confirm", function (n) { if (n) return f(i, r, u, e, h, o, c, a, v) })), y) return f(i, r, u, e, h, o, c, a, v) } catch (b) { n.ADialog.error("Error?", !0, "error in process : " + b.message); c = !1 } return !1 } function f(t, i, r, u, f, e, o, s, h) { var l = t.getDescription(), c, a; return (l == null || l.length == 0) && (l = s), c = new n.ProcessInfo(l, t.getProcess_ID(), i, r), c.setAD_User_ID(u.getAD_User_ID()), c.setAD_Client_ID(u.getAD_Client_ID()), c.setAD_Window_ID(e.$parentWindow === undefined ? 0 : e.$parentWindow.AD_Window_ID), c.setUseCrystalReportViewer(u.getIsUseCrystalReportViewer()), c.setIsBatch(f), c.setIsBackground(h), a = new n.ProcessCtl(e, c, null), t.isPdf ? c.setFileType(n.ProcessCtl.prototype.REPORT_TYPE_PDF) : t.isCsv && c.setFileType(n.ProcessCtl.prototype.REPORT_TYPE_CSV), a.process(e.curWindowNo), o = !0, e = null, t = null, f = !1, startWOasking = !1, actionProcessAfterSave = null, o } function u(i, r) { var e, o, s, u, f, h; window.VADMS ? r == "CDT" ? (u = new n.CFrame, e = new window.VADMS.editDocument(0, "", 0, "", 0, null, "", i.curTab.getAD_Window_ID(), i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID()), u.setName(n.Msg.getMsg("VADMS_CreateDocument")), u.setTitle(n.Msg.getMsg("VADMS_CreateDocument")), u.hideHeader(!0), u.setContent(e), e.initialize(), u.show()) : r == "ADF" ? (o = n.context.getContext("VADMS_Document_ID"), o.length > 0 && (s = { docID: o, winID: i.curTab.getAD_Window_ID(), tableID: i.curTab.getAD_Table_ID(), recID: i.curTab.getRecord_ID() }, t.ajax({ url: n.Application.contextUrl + "JsonData/AttachFrom", dataType: "json", data: s, success: function (t) { JSON.parse(t) == "OK" ? (i.curTab.loadDocuments(), i.aViewDocument.setPressed(i.curTab.hasDocument()), n.ADialog.confirm("AttachWithOther", !0, "", "Confirm", function (t) { t || n.context.setContext("VADMS_Document_ID", 0) }), i = null) : n.ADialog.error("NotAttached", !0, "") } }))) : r == "VDT" ? (u = new n.CFrame, f = new window.VADMS.DocumentManagementSystem, u.setName(n.Msg.getMsg("VADMS_Document")), u.setTitle(n.Msg.getMsg("VADMS_Document")), u.hideHeader(!0), f.setWindowNo(n.Env.getWindowNo()), f.setWindowID(i.curTab.getAD_Window_ID()), f.setTableID(i.curTab.getAD_Table_ID()), f.setRecordID(i.curTab.getRecord_ID()), f.setWindowName(i.gridWindow.getName()), u.setContent(f), f.initialize(), u.show()) : r == "UDT" ? window.VADMS.uploaddocument(0, i.curTab.getAD_Window_ID(), i.curTab.getAD_Table_ID(), i.curTab.getRecord_ID(), i.$parentWindow.name, i.curTab.getName()) : r == "CAC" && (h = i.curTab.getAD_Window_ID() + "|" + i.curTab.getAD_Table_ID() + "|" + i.curTab.getRecord_ID() + "|" + i.$parentWindow.name + "|" + i.curTab.getName(), n.context.setContext("VADMS_WinTableRecID", h), n.ADialog.info("VADMS_CodeSetIntoContext", !0, "")) : n.ADialog.error("PleaseInstallDMSModule", !0, "") } var e = n.Application.contextUrl, l = e + "JsonData/JDataSetWithCode", o = function (t, i, r) { var e = r ? !0 : !1, f = { sql: t, page: 1, pageSize: 0 }, u; return i && (f.param = i), u = null, h(f, e, function (t) { u = (new n.DB.DataSet).toJson(t); r && r(u) }), u }, s = function (t, i, r) { var f = r ? !0 : !1, e = { sql: t, page: 1, pageSize: 0 }, u; return i && (e.param = i), u = null, h(e, f, function (t) { i = (new n.DB.DataSet).toJson(t); var i = (new n.DB.DataSet).toJson(t); u = i.getTable(0).getRows().length > 0 ? i.getTable(0).getRow(0).getCell(0) : null; i.dispose(); i = null; f && r(u) }), u }, a = document.querySelector("#vis-ad-paneltmp").content, r; i.prototype.ACTION_NAME_FIRST = "First"; i.prototype.ACTION_NAME_LAST = "Last"; i.prototype.ACTION_NAME_PREV = "Previous"; i.prototype.ACTION_NAME_NEXT = "Next"; i.prototype.ACTION_NAME_PAGEDOWN = "PageDown"; i.prototype.ACTION_NAME_PAGEUP = "PageUp"; i.prototype.ACTION_NAME_NEW = "NRD"; i.prototype.ACTION_NAME_DELETE = "DRD"; i.prototype.ACTION_NAME_REFRESH = "RQY"; i.prototype.ACTION_NAME_FIND = "Find"; i.prototype.ACTION_NAME_CHAT = "CHT"; i.prototype.ACTION_NAME_APPOINTMENT = "Appointment"; i.prototype.ACTION_NAME_ARCHIVE = "Archive"; i.prototype.ACTION_NAME_SHAREDREC = "RSD"; r = null; i.prototype.keyDown = function (n) { if (!n.ctrlKey && n.altKey && this.curGC) { var t = this.aNew.getIsEnabled(); switch (n.keyCode) { case 78: t && this.actionPerformed(this.aNew.getAction()); break; case 83: this.ShortcutNavigation(this.aSave.getAction()); break; case 66: t && this.aBack.getIsEnabled() && this.actionPerformed(this.aBack.getAction()); break; case 68: t && this.actionPerformed(this.aDelete.getAction()); break; case 90: t || this.actionPerformed(this.aIgnore.getAction()); break; case 80: t && this.actionPerformed(this.aPrint.getAction()); break; case 82: t && this.actionPerformed(this.aReport.getAction()); break; case 81: t && this.actionPerformed(this.aRefresh.getAction()); break; case 65: this.actionPerformed(this.aFind.getAction()); break; case 70: this.setSearchFocus(!0); break; case 37: this.ShortcutNavigation(this.aFirst.getAction()); break; case 39: this.ShortcutNavigation(this.aLast.getAction()); break; case 38: this.ShortcutNavigation(this.aPrevious.getAction()); break; case 40: this.ShortcutNavigation(this.aNext.getAction()); break; case 84: this.actionPerformed(this.aMulti.getAction()); break; case 86: this.actionPerformed(this.aCard.getAction()); break; case 88: this.$parentWindow.dispose(); break; case 79: this.startFilterPanel(); break; case 33: if (n.ctrlKey) { this.aPageFirst.isEnabled && this.ShortcutNavigation(this.aPageFirst.getAction()); break } else { this.aPageUp.isEnabled && this.ShortcutNavigation(this.aPageUp.getAction()); break } case 34: if (n.ctrlKey) { this.aPageLast.isEnabled && this.ShortcutNavigation(this.aPageLast.getAction()); break } else { this.aPageDown.isEnabled && this.ShortcutNavigation(this.aPageDown.getAction()); break } }n.preventDefault(); n.stopPropagation() } else n.keyCode == 112 ? (this.actionPerformed(this.aHelp.getAction()), n.preventDefault(), n.stopPropagation()) : n.altKey && n.keyCode == 33 ? n.ctrlKey ? this.aPageFirst.isEnabled && this.ShortcutNavigation(this.aPageFirst.getAction()) : this.aPageUp.isEnabled && this.ShortcutNavigation(this.aPageUp.getAction()) : n.altKey && n.keyCode == 34 ? n.ctrlKey ? this.aPageLast.isEnabled && this.ShortcutNavigation(this.aPageLast.getAction()) : this.aPageDown.isEnabled && this.ShortcutNavigation(this.aPageDown.getAction()) : this.vTabbedPane && this.vTabbedPane.keyDown && this.vTabbedPane.keyDown(n); n.keyCode === 9 && this.compositViewChangeSave(n) }; i.prototype.ShortcutNavigation = function (n) { var r = this, i = t(document.activeElement); i && i.length > 0 && i.trigger("change"); window.setTimeout(function () { r.actionPerformed(n) }, 200) }; i.prototype.sizeChanged = function () { this.setTabNavigation(); this.vTabbedPane.sizeChanged(); return }; i.prototype.refresh = function () { this.curGC && (this.curGC.vTable.resize(), this.curGC.vIncludedGC && this.curGC.vIncludedGC.vTable.refresh()); this.vTabbedPane.refresh() }; i.prototype.refreshData = function () { var n = this; window.setTimeout(function () { n.curTab.getAD_Tab_ID() == n.firstTabId.split("_")[1] ? n.curGC.dataRefreshAll() : n.selectFirstTab(!1, function () { n.curGC.dataRefreshAll() }); n.setBusy(!1) }, 100); this.setBusy(!0) }; i.prototype.addActions = function (t, i, r, u, f, e, o, s, h) { var c = { action: t, parent: i, enableDisable: r, toggle: o, imageOnly: u, isSmall: f, onAction: e, toolTipText: s }, t; return h && (c.iconName = h), new n.AppsAction(c) }; i.prototype.compositViewChangeSave = function (i) { var u = this, f; (t(i.target).closest(".vis-ad-w-p-center-inctab").length > 0 || t(i.target).closest(".vis-ad-w-p-vc").length > 0) && (f = t(document.activeElement), setTimeout(function () { var e = t(document.activeElement).closest(".vis-ad-w-p-center-inctab").length > 0 ? "vis-ad-w-p-center-inctab" : "vis-ad-w-p-vc", i, o; if (r || (r = e), r !== e && r !== "") if (r == "vis-ad-w-p-vc" && (i = u.vTabbedPane.contentPane.curTab.getLastFocus(), u.vTabbedPane.contentPane.curTab.setLastFocus(null), i && u.curTab.setLastFocus(i)), r == "vis-ad-w-p-center-inctab" && (i = u.curTab.getLastFocus(), u.curTab.setLastFocus(null), u = u.vTabbedPane.contentPane, i && u.curTab.setLastFocus(i)), u.curGC != null) if (u.curTab.needSave(!0, !1)) if (u.curTab.needSave(!0, !0)) if (n.Env.getCtx().isAutoCommit(u.curWindowNo)) { if (r == "vis-ad-w-p-vc" && (o = u.curGC.IsCheckListRequire(), !o)) return u.curTab.getLastFocus().focus(), !1; if (u.curTab.dataSave(!0)) u.curTab.setLastFocus(f); else return !1 } else canExecute = !1, n.ADialog.confirm("SaveChanges?", !0, u.curTab.getCommitWarning(), "Confirm", function (n) { if (n) if (u.curTab.dataSave(!0)) u.curTab.setLastFocus(f); else return !1 }); else u.curTab.setLastFocus(f); else u.curTab.setLastFocus(f); else u.curTab.setLastFocus(f); else u.curTab.setLastFocus(f); r = e }, 100)) }; i.prototype.ShowHideViewIcon = function (n) { this.curTab != null && this.curGC != null ? (this.curTab.getIsHideGridToggle() ? (this.aMulti.hide(), this.aSingle.hide()) : (this.aMulti.show(), this.aSingle.show()), this.curTab.getIsHideCardToggle() ? this.aCard.hide() : this.aCard.show(), n.hide()) : (this.aMulti.hide(), this.aSingle.hide(), this.aCard.hide()) }; i.prototype.initPanel = function (i, r, u, f, e) { var v, b, y, s, a, d, g, rt, h, tt, ut; this.$parentWindow = u; v = new n.GridWindow(i); this.gridWindow = v; this.createToolBar(); var c = u.getWindowNo(), it = this.ctx.isAutoNew(), l = v.getTabs(); this.ctx.setAutoCommit(c, this.ctx.isAutoCommit()); this.ctx.setAutoNew(c, it); this.ctx.setIsSOTrx(c, v.getIsSOTrx()); !it && v.getIsTransaction() && this.ctx.setAutoNew(c, !0); this.ctx.setContext(c, "WindowName", v.getName()); b = v.getIsCompositeView(); this.vTabbedPane.init(this, b); !r && e && (r = new n.Query, y = l[0].getKeyColumnName(), y.length == 0 && (y = l[0].getLinkColumnName()), y.length != 0 && (y.endsWith("_ID") ? r.addRestriction(y, n.Query.prototype.EQUAL, e) : r.addRestriction(y, n.Query.prototype.EQUAL, e))); var o, p = [], nt = {}, w = !1, k = !0; for (s = 0; s < l.length; s++)a = c + "_" + l[s].getAD_Tab_ID(), d = { action: a, text: l[s].getName(), toolTipText: l[s].getDescription(), textOnly: !0, iconName: "", isHideTab: l[s].getIsHideTabName() }, l[s].getTabLevel() > 0 && (d.textOnly = !1, d.iconName = l[s].getTabLevel() > 3 ? "tl-4" : "tl-" + l[s].getTabLevel()), p[s] = new n.AppsAction(d), o = l[s], k && (s === 0 && (r == null || r.list != null && r.list.length == 0 || r.list[0].code == -10) ? (this.curTab = o, this.firstTabId = a, w = !0, k = !1, r != null && o.setQuery(r)) : r != null && r.list != null && r.list.length > 0 && r.list[0].columnName && o.getKeyColumnName().toUpperCase() == r.list[0].columnName.toUpperCase() && (this.firstTabId = a, o.setQuery(r), this.curTab = o, w = !0, k = !1, s > 0 && this.setParentsContext(l, s))), g = null, o.getIsSortTab() ? (rt = new n.VSortTab(c, o.getAD_Table_ID(), o.getAD_ColumnSortOrder_ID(), o.getAD_ColumnSortYesNo_ID(), o.getIsReadOnly(), a), g = rt, s == 0 && (firstTabId = a)) : (h = new n.GridController(!0, !0, a), h.initGrid(!1, c, this, o), w && (this.curGC = h, w = !1), s !== 0 || w || (this.curTab = o, this.curGC = h, this.firstTabId = a, o.getIsHeaderPanel() && (h.initHeaderPanel(this.getParentDetailPane()), this.vHeaderPanel = h.vHeaderPanel, o.isHPanelNotShowInMultiRow && o.getTabLayout() != "Y" && (h.vHeaderPanel.hidePanel(), h.vHeaderPanel.sizeChangedListner && h.vHeaderPanel.sizeChangedListner.onSizeChanged && h.vHeaderPanel.sizeChangedListner.onSizeChanged()))), h.initFilterPanel(c, this.getFilterPane()), g = h, s === 0 && f && (this.ShowHideViewIcon(this.aSingle), h.switchSingleRow()), o.getIncluded_Tab_ID() != 0 && (nt[o.getIncluded_Tab_ID()] = h), o.getHasPanel() && h.initTabPanel(v.getWindowWidth(), c), b || t.isEmptyObject(nt) || (tt = nt[o.getAD_Tab_ID()], tt != null && (ut = tt.includeTab(h)))), this.vTabbedPane.addTab(a, o, g, p[s]), p[s].onAction = this.onTabChange; k && r != null && r.list != null && r.list.length > 0 && this.curTab.setQuery(r); this.vTabbedPane.setTabControl(p); p = null; this.ctx.setWindowContext(c, "WindowName", i._vo.DisplayName); u.setTitle(n.Env.getHeader(this.ctx, c)); this.setTitle(n.Env.getHeader(this.ctx, c)); u.setName(i._vo.DisplayName); this.curWindowNo = c; b && this.setIncTabReziable(); i = null; u = null }; i.prototype.setIncTabReziable = function () { var n = this.getIncludedEmptyArea(), t = this; n.is(".ui-resizable") || n.resizable({ handles: "n", ghost: !0, minHeight: 40, maxHeight: 500, resize: function (t, i) { n.css("flex-basis", i.size.height + "px") }, start: function () { }, stop: function (i, r) { n.css({ "flex-basis": r.size.height + "px", top: "", width: "" }); t.refresh() } }) }; i.prototype.setIncTabReziable = function () { var n = this.getIncludedEmptyArea(), t = this; n.is(".ui-resizable") || n.resizable({ handles: "n", ghost: !0, minHeight: 40, maxHeight: 500, resize: function (t, i) { n.css("flex-basis", i.size.height + "px") }, start: function () { }, stop: function (i, r) { n.css({ "flex-basis": r.size.height + "px", top: "", width: "" }); t.refresh() } }) }; i.prototype.setParentsContext = function (t, i) { for (var e, o, u = [], f = t[i].query.list[0].code, r = i - 1; r >= 0; r--)t[r].getTabLevel() != t[i].getTabLevel() && t[r].getTabLevel() < t[i].getTabLevel() && (u.push({ TabNo: t[r].getTabNo(), columnName: t[r].getKeyColumnName(), childTableKeyColumn: t[i].getKeyColumnName(), index: r }), i = r); if (u) for (e = t[i].getWindowNo(), r = 0; r < u.length; r++)f && (t[u[r].index].query.addRestriction(u[r].childTableKeyColumn, n.Query.prototype.EQUAL, f), t[u[r].index].setIsZoomAction(!0)), o = { SelectColumn: u[r].columnName, SelectTable: u[r].childTableKeyColumn.substr(0, u[r].childTableKeyColumn.length - 3), WhereColumn: u[r].childTableKeyColumn, WhereValue: f }, f = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetZoomParentRec", o), f && n.context.setWindowContext(e, u[r].columnName, f.toString()) }; i.prototype.selectFirstTab = function (n) { this.curTab.setIsZoomAction(n); setTimeout(function (n) { n.tabActionPerformed(n.firstTabId); n.setTabNavigation(); n = null }, 10, this) }; i.prototype.getIsUILocked = function () { return this.isLocked }; i.prototype.lockUI = function () { this.setBusy(!0, !1) }; i.prototype.unlockUI = function (i) { var u = i != null && i.getAD_Process_ID() != this.curTab.getAD_Process_ID(), r; u && (this.curTab.dataRefresh(), i.getIsTimeout() && n.context.setWindowContext(this.curWindowNo, "Processed", "Y"), this.curGC.dynamicDisplay(-1), this.setStatusLine(i.getSummary(), i.getIsError()), i.customHTML && i.customHTML != "" ? this.displayDialog(t(i.customHTML)) : (n.ProcessInfoUtil.setLogFromDB(i), r = i.getLogInfo(), r.length > 0 && (n.ADialog.info(i.getTitle(), !0, r, ""), this.setStatusLine(i.getSummary(), i.getIsError())))); this.setBusy(!1, u) }; i.prototype.displayDialog = function (i) { var r = new n.ChildDialog; r.setTitle(""); var f = window.innerWidth - 150, e = window.innerHeight - 120, u = t('<div style="max-height: ' + e + "px; max-width: " + f + 'px; min-width: 150px; min-height: 60px;"><\/div>'); u.append(i); r.setContent(u); r.close = function () { r.dispose() }; r.show(); r.hidebuttons() }; i.prototype.actionPerformed = function (t, i) { var u, r; this.getIsUILocked() || t.source instanceof n.Controls.VButton && (u = t.source.getField(), !this.getIsWindowAction(u.getAD_Reference_Value_ID()) && (!u.getIsEditable(!0) || this.curTab.getIsReadOnly())) || (this.setBusy(!0), r = this, setTimeout(function () { if (t.source instanceof n.Controls.VButton) { var u = t.source.getField().vo.DefaultValue; if (r.getIsWindowAction(t.source.mField.getAD_Reference_Value_ID()) && r.toolbarActionList.indexOf(u) > -1) { r.actionPerformedCallback(r, u); return } r.actionButton(t.source, i) || r.setBusy(!1, !0); return } r.actionPerformedCallback(r, t) }, 100)) }; i.prototype.actionPerformedCallback = function (t, i) { var r, e, f; (i === "Multi" || i === "Card" || i === "Single") && (r = "Y", i === "Multi" ? r = "N" : i === "Single" ? r = "Y" : i === "Card" && (r = "C"), this.tabStack.length > 0 && (e = this.curWinTab.getSelectedIndex(), f = this.tabStack.find(function (n) { return n.tabSeq === e }), f.tabView.includes(r) && (f.tabView = []), f.tabView.push(r)), this.setBackEnable()); t.aFirst.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigate(0)) : t.aPrevious.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigateRelative(-1)) : t.aLast.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigate(t.curTab.getRowCount() - 1)) : t.aNext.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigateRelative(1)) : t.aSingle.getAction() === i ? (t.ShowHideViewIcon(t.aSingle), t.curGC.switchSingleRow(!0)) : t.aMulti.getAction() === i ? (t.ShowHideViewIcon(t.aMulti), t.curGC.switchMultiRow()) : t.aCard.getAction() === i ? (t.ShowHideViewIcon(t.aCard), t.curGC.switchCardRow()) : t.aMap.getAction() === i ? (t.aMulti.setPressed(!0), t.aCard.setPressed(!1), t.curGC.switchMapRow()) : t.aBack.getAction() === i ? t.cmd_back() : t.aPageUp.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage(-1)) : t.aPageFirst.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage(0)) : t.aPageDown.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage(1)) : t.aPageLast.getAction() === i ? (t.isDefaultFocusSet = !1, t.curGC.navigatePage("last")) : t.aRefresh.getAction() === i ? t.cmd_refresh() : t.aIgnore.getAction() === i ? t.cmd_ignore() : t.aSave.getAction() === i ? t.cmd_save(!0) : t.aNew.getAction() === i ? t.cmd_new(!1) : t.aCopy && t.aCopy.getAction() === i ? t.cmd_new(!0) : t.aDelete.getAction() === i ? t.cmd_delete() : t.aFind.getAction() === i ? t.cmd_finddialog() : t.aBatchUpdate && t.aBatchUpdate.getAction() === i ? t.cmd_batchUpdatedialog() : t.aChat && t.aChat.getAction() === i ? t.cmd_chat() : t.aAttachment && t.aAttachment.getAction() === i ? t.cmd_attachment() : t.aHistory && t.aHistory.getAction() == i ? t.cmd_history() : t.aPreference.getAction() === i ? t.cmd_preference() : t.aHelp.getAction() === i ? t.cmd_help() : t.aCardDialog.getAction() === i ? t.cmd_cardDialog() : t.aAppointment && t.aAppointment.getAction() === i ? t.cmd_appointment() : t.aTask && t.aTask.getAction() === i ? t.cmd_task() : t.aSubscribe && t.aSubscribe.getAction() === i ? t.cmd_subscribe() : t.aImportMap && t.aImportMap.getAction() === i ? t.cmd_ImportMap() : t.aEmail && t.aEmail.getAction() === i ? t.cmd_email() : t.aLetter && t.aLetter.getAction() === i ? t.cmd_letter() : t.aSms && t.aSms.getAction() === i ? t.cmd_sms() : t.aInfo.getAction() === i ? t.cmd_infoWindow() : t.aZoomAcross && t.aZoomAcross.getAction() === i ? t.cmd_zoomAcross() : t.aRequest && t.aRequest.getAction() === i ? t.cmd_request() : t.aReport.getAction() === i ? t.cmd_report() : t.isPersonalLock && t.aLock.getAction() === i ? t.cmd_lock() : t.isPersonalLock && t.aRecAccess.getAction() === i ? t.cmd_recAccess() : t.isShowSharedRecord && t.aSharedRecord.getAction() === i ? t.cmd_RecordShared() : t.aWorkflow != null && i === t.aWorkflow.getAction() ? t.curTab.getRecord_ID() > 0 && n.AEnv.startWorkflowProcess(t.curTab.getAD_Table_ID(), t.curTab.getRecord_ID()) : t.aPrint.getAction() === i ? t.cmd_print() : t.aCreateDocument && t.aCreateDocument.getAction() === i ? u(t, i) : t.aUploadDocument && t.aUploadDocument.getAction() === i ? u(t, i) : t.aViewDocument && t.aViewDocument.getAction() === i ? u(t, i) : t.aAttachFrom && t.aAttachFrom.getAction() === i ? u(t, i) : t.aGenerateAttachmentCode && t.aGenerateAttachmentCode.getAction() === i ? u(t, i) : t.aMarkToExport && t.aMarkToExport.getAction() === i ? t.cmd_markToExport() : t.aShowSummaryLevel.getAction() == i && t.ShowSummaryNodes(); t.setRightBarVisibility(!0); t.setBusy(!1); t = null }; i.prototype.actionButton = function (t, i) { var c = !1, l = !1, a = null, s = t.getColumnName(), u = n.context, o; i || (i = this); var r = this, h = 0, f = 0, e = 0; if (i.curTab && (h = i.curTab.getTabNo(), f = u.getTabRecordContext(r.curWindowNo, h, "AD_Table_ID", !1), e = u.getTabRecordContext(r.curWindowNo, h, "Record_ID", !1)), f < 0 && (f = u.getContextAsInt(r.curWindowNo, "AD_Table_ID")), e < 0 && (e = u.getContextAsInt(r.curWindowNo, "Record_ID")), s.equals("Record_ID")) { n.AEnv.zoom(f, e); return } return o = !0, t.getField().getIsAction() && t.getField().getAction() === "MTU" ? (r.cmd_ignore(), r.tabActionPerformed(r.vTabbedPane.getNextTabId(t.getField().getTabSeqNo()), t.getField().getAction()), o = !1) : i.curTab.needSave(!0, !1) && (o = !1, i.cmd_save(!0, function (n) { n && r.actionButtonCallBack(t, c, l, a, s, u, i) })), o ? r.actionButtonCallBack(t, c, l, a, s, u, i) : void 0 }; i.prototype.actionButtonCallBack = function (i, r, f, e, o, s, h) { var ut = h.curTab.getAD_Table_ID(), a = h.curTab.getRecord_ID(), l = h.curTab, b = h.curGC, c = this, y = this.curWindowNo, nt = i.getField(), ft, k, p, tt, w, it, et, d, g, rt, ot, st; if (a == -1 && l.getKeyColumnName().equals("AD_Language") && (a = s.getContextAsInt(y, "AD_Language_ID")), a == -1 && (i.getProcess_ID() == 306 || i.getProcess_ID() == 307) && (ft = l.getValue("AD_ChangeLog_ID"), a = ft), a == -1 && l.getKeyColumnName().equals("EntityType") && (a = l.getValue("AD_EntityType_ID")), a == -1 && l.getKeyColumnName().toUpperCase().endsWith("_ID")) { n.ADialog.error("SaveErrorRowNotFound", !0, ""); return } if (o.equals("PaymentRule")) { k = new n.VPayment(y, l, i); k.show(); k.init(); k.onClose = function () { k.isInitOK() && (b.dynamicDisplay(i.getName()), b.cmd_save(!1), this.checkAndCallProcess(i, ut, a, s, h, r, f)) }; return } if (o.equals("DocAction")) { p = new n.VDocAction(y, l, a); p.show(); p.onClose = function () { if (p.getNumberOfOptions() == 0) { p.dispose(); c.log.info("DocAction - No Options"); return } if (!p.isStartProcess()) { p.dispose(); return } f = p.isBatch(); r = !0; c.checkAndCallProcess(i, ut, a, s, h, r, f); p.dispose(); h = null }; return } if (o.equals("CreateFrom")) { if (tt = !1, (l.getAD_Window_ID() == 341 || l.getAD_Window_ID() == 170) && (window.MMPM ? (it = MMPM.Requisition.prototype.create(l.getAD_Window_ID(), l.getRecord_ID()), tt = !0) : window.DTD001 && (it = DTD001.Requisition.prototype.create(l.getAD_Window_ID(), l.getRecord_ID()), tt = !0)), tt) return; if (w = n.VCreateFrom.prototype.create(l), w != null) { w.isInitOK() ? (w.showDialog(), w.onClose = function () { w.dispose(); l.dataRefresh() }, w = null) : w.dispose(); return } } else { if (o.equals("GenerateSticker")) { window.DTD001 && (it = DTD001.StickerProduct.prototype.create(l.getAD_Window_ID(), l.getRecord_ID())); return } if (o.equals("DTD001_GenerateSticker")) { window.DTD001 && (it = DTD001.MRProductSticker.create(l.getAD_Window_ID(), l.getRecord_ID(), l.getTabLevel())); return } if (o.equals("BGT01_CreateLinePo")) { window.BGT01 && BGT01.CreateLineMovement(l.getAD_Window_ID(), l.getAD_Tab_ID(), l.getRecord_ID()); return } if (o == "Posted" && n.MRole.getDefault().getIsShowAcct()) { if (et = n.context.getWindowContext(y, "Processed"), et != "Y" && (d = n.context.getWindowContext(y, "DocStatus"), this.DocActionVariables.STATUS_COMPLETED != d && this.DocActionVariables.STATUS_CLOSED != d && this.DocActionVariables.STATUS_REVERSED != d && this.DocActionVariables.STATUS_VOIDED != d)) { n.ADialog.info(n.Msg.getMsg("PostDocNotComplete")); return } return g = l.getValue("Posted"), g != null && g == "Y" ? (rt = new n.AcctViewer(n.context.getAD_Client_ID(), l.getAD_Table_ID(), l.getRecord_ID(), y, l.getAD_Window_ID()), rt != null && (c.setBusy(!1), rt.showDialog()), rt = null) : n.ADialog.confirm("PostImmediate?", !0, "", "Confirm", function (i) { if (i) { c.setBusy(!0, !0); var r = g != null && g != "N"; v(function (i) { var u = !1; if (i == "Yes" && (u = !0), window.FRPT && u) var f = Number(n.context.getWindowTabContext(y, 0, "AD_Org_ID")), e = l.getAD_Window_ID(), o = Number(n.context.getWindowTabContext(y, 0, "C_DocType_ID")), s = FRPT.PostingLogic(y, l.getAD_Table_ID(), l.getRecord_ID(), r, f, e, o, function () { b.dataRefresh(); c.setBusy(!1, !0); return }); else t.ajax({ url: n.Application.contextUrl + "Posting/PostImmediate", dataType: "json", data: { AD_Client_ID: n.context.getAD_Client_ID(), AD_Table_ID: l.getAD_Table_ID(), Record_ID: l.getRecord_ID(), force: r }, error: function () { c.setBusy(!1, !0); n.ADialog.info("ERRORGettingPostingServer") }, success: function (t) { t.result != "OK" ? (c.setBusy(!1, !0), n.ADialog.info(t.result)) : (c.setBusy(!1, !0), b.dataRefresh()) } }) }) } else return c.setBusy(!1, !0), !1 }), !1 } if (o.equals("SendNewEMail")) return; if (o.equals("OpenCardDialog")) c.cmd_cardDialog(!0); else if (nt.getIsAction()) { this.tabActionPerformed(this.vTabbedPane.getNextTabId(nt.getTabSeqNo()), nt.getAction(), nt.getActionName()); return } } if (i.AD_Process_ID > 0) return ot = this.checkAndCallProcess(i, ut, a, s, h), h = null, ot; if (i.AD_Form_ID > 0 && (n.MRole.getFormAccess(i.AD_Form_ID) ? st = new n.WForm(n.Env.getScreenHeight(), i.AD_Form_ID, l, y) : n.ADialog.warn("AccessTableNoView")), c.getIsWindowAction(i.mField.getAD_Reference_Value_ID())) { switch (i.mField.vo.DefaultValue) { case "APT": c.cmd_appointment(); break; case "BUE": c.cmd_batchUpdatedialog(); break; case "EML": c.cmd_email(); break; case "SMS": c.cmd_sms(); break; case "LER": c.cmd_letter(); break; case "TAK": c.cmd_task(); break; case "CHT": c.cmd_chat(); break; case "ATT": c.cmd_attachment(i.getField().evaluateLogicsOnly()); break; case "HIY": c.cmd_history(); break; case "CRT": c.cmd_request(); break; case "CRD": c.cmd_new(!0); break; case "SRD": c.cmd_subscribe(); break; case "ZAS": c.cmd_zoomAcross(); break; case "MTE": c.cmd_markToExport(); break; case "IMP": c.cmd_ImportMap(); break; case "RSD": c.cmd_RecordShared(); break; case "NRD": c.cmd_new(); break; case "SAR": c.cmd_save(!1); break; case "DRD": c.cmd_delete(); break; case "RQY": c.cmd_refresh(); break; case "BVW": c.cmd_back(); break; case "UNO": c.cmd_ignore(); break; case "RET": c.cmd_report(); break; case "PRT": c.cmd_print(); break; default: u(c, i.value) }l = b = c = null } }; i.prototype.checkAndCallProcess = function (n, t, i, r, u, f, e) { if (n.getProcess_ID() != 0) { var o = !0, s = this; return u.curTab.needSave(!0, !1) && (o = !1, u.cmd_save(!0, function (u) { if (u) return c(n, t, i, r, s, f, e) })), o ? c(n, t, i, r, s, f, e) : void 0 } }; i.prototype.tabActionPerformed = function (i, r, u) { var d, v, f, l, s, p, a, g, k; if ((r == "WIW" || r == "FOM") && u != "") { d = { tableID: this.curTab.getAD_Table_ID(), actionType: r, actionName: u }; v = this; v.setBusy(!0); t.ajax({ url: e + "JsonData/CheckTableMapWithAction", type: "POST", datatype: "json", contentType: "application/json; charset=utf-8", data: JSON.stringify(d) }).done(function (i) { var f, e, r, u; if (v.setBusy(!1), list = JSON.parse(i), f = t("<div>"), e = t("<ul class=vis-apanel-rb-ul>"), f.append(e), list.length > 1) { for (r in list) { u = t("<li data-id='" + list[r].ID + "' data-action='" + list[r].ActionType + "'>"); u.append(list[r].Name); u.on("click", function (i) { var u, f, r; i.stopImmediatePropagation(); u = t(this).data("id"); f = t(this).data("action"); n.viewManager.startAction(f, u); r = t("#w2ui-overlay-main"); r.hide(); r = null }); e.append(u) } t(document.activeElement).w2overlay(f.clone(!0), { align: "right", css: { height: "200px" } }) } else list.length == 1 && n.viewManager.startAction(list[0].ActionType, list[0].ID) }).error(function () { v.setBusy(!1) }); return } if (!this.vTabbedPane.getIsTabChanged(i)) return console.log("tabNotChange"), !1; var w = !1, h = !1, c = this.vTabbedPane.getTabElement(i), o = this.curST || this.curGC, y = null; if (r == "OTD") { n.TabMngr.show(c, o.gTab.keyColumnName, o.gTab.getRecord_ID()); this.vTabbedPane.restoreTabChange(); return } if (this.toggleASearchIcons(!1, !1), this.setAdvancedSerachText(!0, ""), f = this, !this.vTabbedPane.getIsWorkbench()) { if (this.curWinTab = this.vTabbedPane, l = this.curWinTab.getSelectedIndex(), w = l < this.curTabIndex, s = null, p = null, c instanceof n.VSortTab ? (p = c, h = !0) : s = c, a = !0, this.curGC != null) { if (this.curTab.needSave(!0, !1)) if (this.curTab.needSave(!0, !0)) if (this.ctx.isAutoCommit(this.curWindowNo)) { if (g = this.curGC.IsCheckListRequire(), !g) return this.vTabbedPane.restoreTabChange(), this.setBusy(!1, !0), n.ADialog.error("CheckListRequired"), !1; if (!this.curTab.dataSave(!0)) return this.vTabbedPane.restoreTabChange(), this.setBusy(!1, !0), !1 } else a = !1, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { if (!f.curTab.dataSave(!0)) return f.vTabbedPane.restoreTabChange(), f.setBusy(!1, !0), !1 } else f.curTab.dataIgnore(); o = f.curGC; y = f.curGC; f.curGC = null; f.curST != null && (f.curST.saveData(), f.curST.unRegisterAPanel(), o = f.curST, f.curST = null); f.curTabIndex = l; h || (f.curGC = s); f.tabActionPerformedCallback(i, w, h, c, o, y, s, p) }); else f.curTab.dataIgnore(); a && (o = this.curGC, y = this.curGC, this.curGC = null) } a && (this.curST != null && (this.curST.saveData(), this.curST.unRegisterAPanel(), o = this.curST, this.curST = null), this.curTabIndex = l, h || (this.curGC = s)); var b = l, nt = i, tt = this.curWindowNo; this.tabStack = this.tabStack.filter(function (n) { return n.tabSeq <= b }); k = undefined; this.tabStack.length > 0 && (k = this.tabStack.find(function (n) { return n.tabSeq === b })); k || this.tabStack.push({ tabSeq: b, tabID: nt, tabView: [h ? "" : s.getMTab().getTabLayout()] }) } return a && f.tabActionPerformedCallback(i, w, h, c, o, y, s, p), !0 }; i.prototype.tabActionPerformedCallback = function (t, i, r, u, f, e, o, s) { var a, v, y, h, p, l, c, w; f.setVisible(!1); f.getRoot().detach(); this.getLayout().prepend(u.getRoot()); this.vTabbedPane.setSelectedTab(t); a = i; r ? (u.setVisible(!0), this.curST = s, s.registerAPanel(this), s.loadData()) : (v = o.getMTab(), u.setVisible(!0), o.activate(e), e && e.detachDynamicAction(), this.curTab = o.getMTab(), this.setDynamicActions(), !this.curTab.getIsZoomAction() && this.curTab.getTabLevel() > 0 && (y = new n.Query, this.curTab.query = y, a = !1), h = v.getTabLayout(), i && this.curTab.getIsCurrent() ? (this.curTab.getTabLevel() == 0 ? this.curTab.searchText ? this.setAdvancedSerachText(!1, this.curTab.searchText) : this.curTab.hasSavedAdvancedSearch && this.toggleASearchIcons(!0, !1) : this.curTab.searchText ? this.setAdvancedSerachText(!1, this.curTab.searchText) : this.curTab.hasSavedAdvancedSearch && this.toggleASearchIcons(!0, !1), o.dataRefresh(), this.tabStack.length > 0 && (p = this.curWinTab.getSelectedIndex(), l = this.tabStack.find(function (n) { return n.tabSeq === p }), l.tabView.length > 0 && (h = l.tabView[l.tabView.length - 1]))) : (v.getIsResetLayout() && (h == "N" ? o.switchMultiRow() : h == "Y" ? o.switchSingleRow(!0) : h == "C" && o.switchCardRow(!0)), this.curTab.getTableModel().setCurrentPage(1), !this.curGC.onDemandTree || o.isZoomAction ? (this.clearSearchText(), this.setDefaultSearch(o), o.query(this.curTab.getOnlyCurrentDays(), 0, !1)) : this.setDefaultSearch(o)), h == "N" ? this.ShowHideViewIcon(this.aMulti) : h == "Y" ? this.ShowHideViewIcon(this.aSingle) : h == "C" && this.ShowHideViewIcon(this.aCard), this.curGC.onDemandTree ? this.aShowSummaryLevel.show() : this.aShowSummaryLevel.hide()); c = null; this.curGC ? c = this.curGC.vGridPanel : (c = {}, c.setEnabled = function () { }); r ? (this.ShowHideViewIcon(null), this.aCardDialog.setEnabled(!1), this.aNew.setEnabled(!1), this.aDelete.setEnabled(!1), this.aFind.setEnabled(!1), this.aBatchUpdate.setEnabled(!1), this.aRefresh.setEnabled(!1), this.aNext.setEnabled(!1), this.aLast.setEnabled(!1), this.aFirst.setEnabled(!1), this.aPrevious.setEnabled(!1), this.aPageFirst.setEnabled(!1), this.aPageUp.setEnabled(!1), this.aPageLast.setEnabled(!1), this.aPageDown.setEnabled(!1)) : (this.aCardDialog.setEnabled(!0), this.aFind.setEnabled(!0), this.aBatchUpdate ? this.aBatchUpdate : "", this.aRefresh.setEnabled(!0), c.setEnabled("RQY", !0)); this.showTabPanel(this.curTab.getHasPanel()); this.showFilterPanel(a); this.refresh(); this.setTabNavigation(); this.aParentDetail && this.aParentDetail.evaluate(u); f = u = null; this.curTab.getAD_Process_ID() == 0 ? (this.aPrint.setEnabled(!1), c.setEnabled("PRT", !1)) : (this.aPrint.setEnabled(!0), c.setEnabled("PRT", !0)); this.curTab.getIsMapView() ? this.aMap.show() : this.aMap.hide(); this.curTab.getIsHideRecordNav() ? (this.aNext.hide(), this.aPrevious.hide()) : (this.aNext.show(), this.aPrevious.show()); w = this }; i.prototype.onQueryCompleted = function () { }; i.prototype.onQueryCompleted = function () { }; i.prototype.setDefaultSearch = function (t) { var i = this, u = [], r, e, f, s; if (u[0] = new n.DB.SqlParam("@AD_Tab_ID", this.curTab.getAD_Tab_ID()), u[1] = new n.DB.SqlParam("@AD_User_ID", parseInt(this.ctx.getAD_User_ID())), u[2] = new n.DB.SqlParam("@AD_Tab_ID1", this.curTab.getAD_Tab_ID()), u[3] = new n.DB.SqlParam("@AD_User_ID1", parseInt(this.ctx.getAD_User_ID())), u[4] = new n.DB.SqlParam("@AD_Client_ID", parseInt(this.ctx.getAD_Client_ID())), u[5] = new n.DB.SqlParam("@AD_Tab_ID2", this.curTab.getAD_Tab_ID()), u[6] = new n.DB.SqlParam("@AD_Table_ID", this.curTab.getAD_Table_ID()), r = o("VIS_117", u), r && r.tables[0].rows && r.tables[0].rows.length > 0) if (i.curTab.hasSavedAdvancedSearch = !0, i.curTab.getTabLevel() != 0 || t.gTab.getIsZoomAction()) i.toggleASearchIcons(!0, !1); else { for (e = !1, f = 0; f < r.tables[0].rows.length; f++)r.tables[0].rows[f].cells.ad_defaultuserquery_id > 0 && (e = !0, i.setAdvancedSerachText(!1, r.tables[0].rows[f].cells.name), s = new n.Query(i.curTab.getTableName(), !1), s.addRestriction(r.tables[0].rows[f].cells.code), i.curTab.setQuery(s), i.defaultSearch = !1, i.curTab.searchText = r.tables[0].rows[f].cells.name, toastr.success(n.Msg.getMsg("DefaultSerachExist"), "", { timeOut: 4e3, positionClass: "toast-top-center", closeButton: !0 })); !i.curTab.hasSavedAdvancedSearch; i.toggleASearchIcons(!0, e) } else i.toggleASearchIcons(!1, !1), i.setAdvancedSerachText(!0, "") }; i.prototype.dataStatusChanged = function (t) { var i = null, s, p, o, u, c, h, w, l, a, v, y; this.curGC ? i = this.curGC.vGridPanel : (i = {}, i.setEnabled = function () { }); s = t.getMessage(); p = this.curTab.getIsQueryActive() || this.curTab.getOnlyCurrentDays() > 0; p && (s = "[ " + s + " ]"); this.statusBar.setStatusDB(s, t); o = this; (t.getAD_Message() != null || t.getInfo() != null) && (u = new StringBuilder, c = t.getAD_Message(), c != null && c.length > 0 && u.append(n.Msg.getMsg(t.getAD_Message())), h = t.getInfo(), h != null && h.length > 0 && (u.length() > 0 && !u.endsWith(":") && u.append(": "), u.append(h)), u.length() > 0 && (w = u.indexOf("\n"), w != -1 && u.replace("\n", " - "), this.setStatusLine(u.toString(), t.getIsError()))); t.getIsError() && !t.getIsConfirmed() ? (n.ADialogCallback.error(t.getAD_Message(), t.getInfo(), null, function () { var n = o.curTab.getLastFocus(); n && (n.focus(), o.curTab.setLastFocus(null)) }), t.setConfirmed(!0), this.errorDisplayed = !0) : t.getIsWarning() && !t.getIsConfirmed() && (n.ADialogCallback.warn(t.getAD_Message(), t.getInfo(), null, function () { var n = o.curTab.getLastFocus(); n && (n.focus(), o.curTab.setLastFocus(null)) }), t.setConfirmed(!0)); l = t.getIsFirstRow(); this.aFirst.setEnabled(!l); this.aPrevious.setEnabled(!l); a = t.getIsLastRow(); this.aNext.setEnabled(!a); this.aLast.setEnabled(!a); v = t.getIsFirstPage(); this.aPageFirst.setEnabled(!v); this.aPageUp.setEnabled(!v); y = t.getIsLastPage(); this.aPageLast.setEnabled(!y); this.aPageDown.setEnabled(!y); var r = t.getIsChanged() || t.getIsInserting(), f = this.curTab.getIsReadOnly(), e = !f; e && (e = this.curTab.getIsInsertRecord()); this.aNew.setEnabled(!r && e); i.setEnabled("NRD", !r && e); this.aCopy && this.aCopy.setEnabled(!r && e); this.aRefresh.setEnabled(!r); i.setEnabled("RQY", !r); this.aDelete.setEnabled(!r && !f && t.getCurrentRow() > -1); i.setEnabled("DRD", !r && !f && t.getCurrentRow() > -1); f && this.curTab.getIsAlwaysUpdateField() && (f = !1); this.aIgnore.setEnabled(r && !f); i.setEnabled("UNO", r && !f); this.aSave.setEnabled(r && !f); i.setEnabled("SAR", r && !f); this.aCardDialog.setEnabled(!r); t.getTotalRows() == 0 && e ? (this.aNew.setEnabled(!0), i.setEnabled("NRD", !0), this.aDelete.setEnabled(!1), i.setEnabled("DRD", !0), this.curGC.isZoomAction || this.highlightButton(!0, this.aNew)) : this.highlightButton(!1, this.aNew); this.setBackEnable(); this.aChat && this.aChat.setPressed(this.curTab.hasChat()); this.aAttachment && this.aAttachment.setPressed(this.curTab.hasAttachment()); this.aMarkToExport && this.aMarkToExport.setPressed(this.curTab.hasMarked()); this.aSubscribe && this.aSubscribe.setPressed(this.curTab.HasSubscribed()); this.isPersonalLock && (this.aLock.setEnabled(!0), i.setEnabled(this.aLock.getAction(), !0), this.aLock.setPressed(this.curTab.getIsLocked()), this.aRecAccess.setEnabled(!0), i.setEnabled(this.aRecAccess.getAction(), !0)); this.isShowSharedRecord && this.aSharedRecord && (this.curTab.getValue("AD_Org_ID") > 0 && this.excludeFromShare.indexOf(this.curTab.getTableName().toLowerCase()) == -1 ? (this.aSharedRecord.setEnabled(!0), i.setEnabled(this.aSharedRecord.getAction(), !0), this.aSharedRecord.setPressed(this.curTab.hasShared())) : (this.aSharedRecord.setEnabled(!1), i.setEnabled(this.aSharedRecord.getAction(), !1))); this.curTab.getRecord_ID() == -1 ? (this.aChat && (this.aChat.setEnabled(!1), i.setEnabled(this.aChat.getAction(), !1)), this.aAttachment && (this.aAttachment.setEnabled(!1), i.setEnabled(this.aAttachment.getAction(), !1)), this.aSubscribe && (this.aSubscribe.setEnabled(!1), i.setEnabled(this.aSubscribe.getAction(), !1)), this.aHistory && (this.aHistory.setEnabled(!1), i.setEnabled(this.aHistory.getAction(), !1)), this.aEmail && (this.aEmail.setEnabled(!1), i.setEnabled(this.aEmail.getAction(), !1)), this.aLetter && (this.aLetter.setEnabled(!1), i.setEnabled(this.aLetter.getAction(), !1)), this.aSms && (this.aSms.setEnabled(!1), i.setEnabled(this.aSms.getAction(), !1)), this.aFaxEmail && (this.aFaxEmail.setEnabled(!1), i.setEnabled(this.aFaxEmail.getAction(), !1)), this.aCreateDocument && (this.aCreateDocument.setEnabled(!1), i.setEnabled(this.aCreateDocument.getAction(), !1)), this.aUploadDocument && (this.aUploadDocument.setEnabled(!1), i.setEnabled(this.aUploadDocument.getAction(), !1)), this.aViewDocument && (this.aViewDocument.setEnabled(!1), i.setEnabled(this.aViewDocument.getAction(), !1)), this.aAttachFrom && (this.aAttachFrom.setEnabled(!1), i.setEnabled(this.aAttachment.getAction(), !1)), this.aZoomAcross && (this.aZoomAcross.setEnabled(!1), i.setEnabled(this.aZoomAcross.getAction(), !1)), this.aMarkToExport && (this.aMarkToExport.setEnabled(!1), i.setEnabled(this.aMarkToExport.getAction(), !1)), this.aArchive && (this.aArchive.setEnabled(!1), i.setEnabled(this.aArchive.getAction(), !1)), this.aEmailAttach && (this.aEmailAttach.setEnabled(!1), i.setEnabled(this.aEmailAttach.getAction(), !1)), this.aAppointment && (this.aAppointment.setEnabled(!1), i.setEnabled(this.aAppointment.getAction(), !1)), this.aTask && (this.aTask.setEnabled(!1), i.setEnabled(this.aTask.getAction(), !1)), this.aRequest && (this.aRequest.setEnabled(!1), i.setEnabled(this.aRequest.getAction(), !1)), this.aWorkflow && (this.aWorkflow.setEnabled(!1), i.setEnabled(this.aWorkflow.getAction(), !1)), this.aCopy && (this.aCopy.setEnabled(!1), i.setEnabled(this.aCopy.getAction(), !1)), this.aLock && (this.aLock.setEnabled(!1), i.setEnabled(this.aLock.getAction(), !1)), this.aRecAccess && (this.aRecAccess.setEnabled(!1), i.setEnabled(this.aRecAccess.getAction(), !1)), this.aSharedRecord && (this.aSharedRecord.setEnabled(!1), i.setEnabled(this.aSharedRecord.getAction(), !1)), this.aBatchUpdate && (this.aBatchUpdate.setEnabled(!1), i.setEnabled(this.aBatchUpdate.getAction(), !1))) : (this.aChat && (this.aChat.setEnabled(!0), i.setEnabled(this.aChat.getAction(), !0)), this.aAttachment && (this.aAttachment.setEnabled(!0), i.setEnabled(this.aAttachment.getAction(), !0)), this.aSubscribe && (this.aSubscribe.setEnabled(!0), i.setEnabled(this.aSubscribe.getAction(), !0)), this.aHistory && (this.aHistory.setEnabled(!0), i.setEnabled(this.aHistory.getAction(), !0)), this.aEmail && (this.aEmail.setEnabled(!0), i.setEnabled(this.aEmail.getAction(), !0)), this.aLetter && (this.aLetter.setEnabled(!0), i.setEnabled(this.aLetter.getAction(), !0)), this.aSms && (this.aSms.setEnabled(!0), i.setEnabled(this.aSms.getAction(), !0)), this.aFaxEmail && (this.aFaxEmail.setEnabled(!0), i.setEnabled(this.aFaxEmail.getAction(), !0)), this.aImportMap && (this.aImportMap.setEnabled(!0), i.setEnabled(this.aImportMap.getAction(), !0)), this.aCreateDocument && (this.aCreateDocument.setEnabled(!0), i.setEnabled(this.aCreateDocument.getAction(), !0)), this.aUploadDocument && (this.aUploadDocument.setEnabled(!0), i.setEnabled(this.aUploadDocument.getAction(), !0)), this.aViewDocument && (this.aViewDocument.setEnabled(!0), i.setEnabled(this.aViewDocument.getAction(), !0)), this.aAttachFrom && (this.aAttachFrom.setEnabled(!0), i.setEnabled(this.aAttachFrom.getAction(), !0)), this.aZoomAcross && (this.aZoomAcross.setEnabled(!0), i.setEnabled(this.aZoomAcross.getAction(), !0)), this.aMarkToExport && (this.aMarkToExport.setEnabled(!0), i.setEnabled(this.aMarkToExport.getAction(), !0)), this.aArchive && (this.aArchive.setEnabled(!0), i.setEnabled(this.aArchive.getAction(), !0)), this.aEmailAttach && (this.aEmailAttach.setEnabled(!0), i.setEnabled(this.aEmailAttach.getAction(), !0)), this.aAppointment && (this.aAppointment.setEnabled(!0), i.setEnabled(this.aAppointment.getAction(), !0)), this.aTask && (this.aTask.setEnabled(!0), i.setEnabled(this.aTask.getAction(), !0)), this.aRequest && (this.aRequest.setEnabled(!0), i.setEnabled(this.aRequest.getAction(), !0)), this.aWorkflow && (this.aWorkflow.setEnabled(!0), i.setEnabled(this.aWorkflow.getAction(), !0)), this.aCopy && (this.aCopy.setEnabled(!0), i.setEnabled(this.aCopy.getAction(), !0)), this.aLock && (this.aLock.setEnabled(!0), i.setEnabled(this.aLock.getAction(), !0)), this.aBatchUpdate && (this.aBatchUpdate.setEnabled(!0), i.setEnabled(this.aBatchUpdate.getAction(), !0))); t.getIsInserting() ? this.statusBar.setInfo(null) : this.setStatusInfo(t.getRecord_ID()); this.curWinTab == this.vTabbedPane && (n.context.setContext(this.curWindowNo, "tb_Index", this.curTabIndex), this.curWinTab.evaluate(null), this.curWinTab.notifyDataChanged(t)); this.curTab.getParentTab() && this.aSharedRecord && (this.curTab.loadShared(), this.aSharedRecord.setPressed(this.curTab.hasShared())) }; i.prototype.setStatusInfo = function (t) { !t && this.curTab && (t = this.curTab.getRecord_ID()); var i = this; n.GridTab.prototype.getFooterInfo(this.curTab.getTableName(), n.context, this.curTab.getWindowNo(), this.curTab.getTabNo(), t).then(function (n) { i && i.statusBar && i.statusBar.setInfo(n) }, function (n) { i && i.statusBar && i.statusBar.setInfo(n) }) }; i.prototype.setStatusLine = function (n, t) { this.statusBar.setStatusLine(n, t) }; i.prototype.cmd_refresh = function () { this.curGC.dataRefreshAll() }; i.prototype.cmd_ignore = function () { this.curGC.dataIgnore() }; i.prototype.cmd_help = function () { var t = new n.Apps.help(this.gridWindow) }; i.prototype.cmd_cardDialog = function (t) { var i = new n.CVDialog(this, t); i.show() }; i.prototype.cmd_save = function (n, t) { if (this.curST != null && (n = !1), this.errorDisplayed = !1, this.curST != null) { this.curST.saveData(); this.aSave.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled("SAR", !1); return } var i = this; return i.cmd_save2(n, i.curTab, i.curGC, i, t) }; i.prototype.cmd_save2 = function (t, i, r, u, f) { var o = !0, e; return i.getCommitWarning().length > 0 && i.needSave(!0, !1) && (o = !1, n.ADialog.confirm("SaveChanges?", !0, i.getCommitWarning(), "Confirm", function (n) { if (n) { var i = r.dataSave(t); t && !i && !u.errorDisplayed; r.refreshTabPanelData(u.curTab.getRecord_ID()); t && r.dynamicDisplay(-1); f && f(i) } })), o ? (e = r.dataSave(t), t && !e && !u.errorDisplayed, t && r.dynamicDisplay(-1), f && f(e), r.refreshTabPanelData(i.getRecord_ID()), this.curTab.loadShared(), this.aSharedRecord && this.aSharedRecord.setPressed(this.curTab.hasShared()), e) : void 0 }; i.prototype.cmd_new = function (t) { if (this.curTab.isCurrentRecordShare && t) { n.ADialog.info("ActionNotAllowedHere"); return } this.curTab.getIsInsertRecord() && (this.curGC.setNewRecordLayout(), this.curGC.dataNew(t)) }; i.prototype.cmd_batchUpdatedialog = function () { if (!this.curTab.getIsReadOnly()) { var t = new n.BatchUpdate(this.curWindowNo, this.curTab, this.curGC.getSelectedRows()); t.onClose = function () { }; t.show() } }; i.prototype.cmd_delete = function () { var t, i; if (!this.curTab.getIsReadOnly()) { if (this.curTab.IsSharedReadOnly) { n.ADialog.error("CannotDelete", !0, ""); return } if (t = this.curGC.canDeleteRecords(), t.length > 0) { n.ADialog.error("CannotDelete", !0, " [ " + t.join(",") + "]"); return } i = this; n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && i.curGC.dataDeleteAsync() }) } }; i.prototype.cmd_back = function () { var n = this, t, i; if (this.tabStack.length > 0 && (t = this.tabStack[this.tabStack.length - 1], t.tabView.length > 0 && (this.tabStack[this.tabStack.length - 1].tabView.pop(), i = t.tabView[t.tabView.length - 1], i == "N" ? (n.ShowHideViewIcon(n.aMulti), n.curGC.switchMultiRow()) : i == "Y" ? (n.ShowHideViewIcon(n.aSingle), n.curGC.switchSingleRow(!0)) : i == "C" && (n.ShowHideViewIcon(n.aCard), n.curGC.switchCardRow(!0)))), this.setBackEnable(), this.tabStack.length > 1 && this.tabStack[this.tabStack.length - 1].tabView.length === 0) if (this.tabStack.pop(), t = this.tabStack[this.tabStack.length - 1], t && Object.keys(t).length > 0) { this.curTab.needSave(!0, !1) && this.curTab.needSave(!0, !0) && this.cmd_ignore(); this.onTabChange(t.tabID) } else this.setBackEnable() }; i.prototype.cmd_find = function (n) { if (this.curTab) { if (!this.defaultSearch) { this.defaultSearch = !0; return } this.setBusy(!0); var t = null; n && n.trim() !== "" && (n = "%" + n + "%", t = this.curTab.getSearchQuery(n)); this.findRecords(t) } }; i.prototype.cmd_chat = function () { var o = this.curTab.getRecord_ID(), r, u, f, t, i, e; if (o == -1) { this.aChat.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aChat.getAction(), !1); return } for (r = null, u = null, f = 0; f < this.curTab.getFieldCount(); f++)if (t = this.curTab.getField(f), t.getIsKey() && (r = t.getHeader()), (t.getColumnName().toString() == "Name" || t.getColumnName().toString() == "DocumentNo") && t.getValue() != null && t.getValue() != "" && (u = t.getValue()), r != null && u != null) break; i = this; e = new n.Chat(o, this.curTab.getCM_ChatID(), this.curTab.getAD_Table_ID(), r + ": " + u, this.curWindowNo); e.onClose = function () { i.curTab.loadChats(); i.aChat.setPressed(i.curTab.hasChat()); i = null }; e.show() }; i.prototype.cmd_appointment = function () { var t = this.curTab.getRecord_ID(), i = this.curTab.getAD_Table_ID(); t != -1 && n.AppointmentsForm.init(i, t, 0, 0, !1, !0) }; i.prototype.cmd_task = function () { var t = this.curTab.getRecord_ID(), i = this.curTab.getAD_Table_ID(); t != -1 && n.AppointmentsForm.init(i, t, 0, 0, !0) }; i.prototype.cmd_letter = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aLetter.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aLetter.getAction(), !1); return } i = new n.Email("", this.curTab, this.curGC, r, !1); t = new n.CFrame; t.setName(n.Msg.getMsg("Letter")); t.setTitle(n.Msg.getMsg("Letter")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_email = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aEmail.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aEmail.getAction(), !1); return } i = new n.Email("", this.curTab, this.curGC, r, !0); t = new n.CFrame; t.setName(n.Msg.getMsg("EMail")); t.setTitle(n.Msg.getMsg("EMail")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_report = function () { var i, t, r, u, e, o, f, s, h; if (!n.MRole.getDefault().getIsCanReport(this.curTab.getAD_Table_ID())) { n.ADialog.warn("AccessCannotReport"); return } if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } for (i = null, i = this.curTab.query && this.curTab.query.list.length > 0 ? this.curTab.query : new n.Query(this.curTab.getTableName()), i.tableName = this.curTab.getTableName(), t = this.curTab.getLinkColumnName(), t.length == 0 && (t = this.curTab.getKeyColumnName()), r = null, u = null, e = 0, o = this.curTab.getFieldCount(); e < o; e++)if (f = this.curTab.getField(e), f.getIsKey() && (r = f.getHeader()), (f.getColumnName() == "Name" || f.getColumnName() == "DocumentNo") && f.getValue() != null && (u = f.getValue()), r != null && u != null) break; s = this.curTab.getParentColumnNames().length == 0; t.length != 0 && (s && (this.curTab.getLinkColumnName() == null || this.curTab.getLinkColumnName() == "") || (t.endsWith("_ID") ? r == null && u == null ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t), r, u) : r == null && u == null ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t), r, u))); h = this.curGC.onDemandTree ? this.isSummaryVisible ? new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, this.curGC.treeID, this.curGC.treeNodeID, !0) : new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, this.curGC.treeID, this.curGC.treeNodeID, !1) : new n.AReport(this.curTab.getAD_Table_ID(), i, this.curTab.getAD_Tab_ID(), this.curWindowNo, this.curTab, 0, 0, !1) }; i.prototype.cmd_print = function () { var i = this.curGC.getSelectedRows(), r, u, o, l, h, f, t, c, e; if (i.length == 0) { n.ADialog.info("SelectRecord"); return } if (r = this.curTab.getAD_Process_ID(), r != 0) if (u = "VIS_118", o = [], o[0] = new n.DB.SqlParam("@AD_Process_ID", r), l = s(u, o), u = "VIS_119", h = s(u), i.length > 1 && l > 0 && h && h.toString() > "1.0.0.3") { if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } for (f = "", t = 0; t < i.length; t++)t == 0 ? f = i[t][this.curTab.getKeyColumnName().toLower()] : f += "," + i[t][this.curTab.getKeyColumnName().toLower()]; e = new n.APrint(r, this.curTab.getAD_Table_ID(), 0, this.curWindowNo, f, this.curTab, !0); e.start(this.aPrint.getListItmIT()) } else { if (c = this.curTab.getRecord_ID(), c == -1) { n.ADialog.info(n.Msg.getMsg("SelectRecord")); return } if (this.curTab.needSave(!0, !1)) { this.cmd_save(!0); return } e = new n.APrint(r, this.curTab.getAD_Table_ID(), c, this.curWindowNo, null, this.curTab); e.start(this.aPrint.getListItmIT()) } }; i.prototype.cmd_sms = function () { var r = this.curTab.getRecord_ID(), i, t; if (r == -1) { this.aSms.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aSms.getAction(), !1); return } i = new n.Sms(this.curTab, this.curGC, r, !1); t = new n.CFrame; t.setName(n.Msg.getMsg("Sms")); t.setTitle(n.Msg.getMsg("Sms")); t.hideHeader(!0); t.setContent(i); t.show(); i.initializeComponent() }; i.prototype.cmd_subscribe = function () { var i = this.curTab.getRecord_ID(), t, r; if (i == -1) { this.aSubscribe.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aSubscribe.getAction(), !1); return } t = this; r = function () { t.curTab.loadSubscribe(); t.aSubscribe.setPressed(t.curTab.HasSubscribed()) }; n.dataContext.subscribeUnsubscribeRecords(this.curTab.getCM_SubScribedID(), this.curTab.getAD_Window_ID(), i, this.curTab.getAD_Table_ID(), r) }; i.prototype.cmd_ImportMap = function () { if (window.VDIU) { if (this.curTab.getIsReadOnly()) { n.ADialog.warn("ReadOnly"); return } var i = new VDIU.ImportExcel(this.curTab.getAD_Window_ID(), this.gridWindow.getName()), t = new n.CFrame; t.setName(n.Msg.getMsg("Import")); t.setTitle(n.Msg.getMsg("Import")); t.setContent(i); t.show(); i.initialize() } else n.ADialog.error("PleaseInstallExcelImportModule") }; i.prototype.cmd_attachment = function (t) { if (this.curTab.getRecord_ID() < 1) { this.aAttachment.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aAttachment.getAction(), !1); return } var i = this, r = new n.attachmentForm(this.curTab.getWindowNo(), 0, this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), "", null, null, null, t); r.setIsWindowAction(!0); r.show(); r.onClose = function () { i.curTab.loadAttachments(); i.aAttachment && i.aAttachment.setPressed(i.curTab.hasAttachment()); i = null } }; i.prototype.cmd_history = function () { var t = null, i = 0, r = 0; (Object.keys(this.curGC.getColumnNames()).indexOf("C_BPartner_ID") > 0 || this.curTab.getField("C_BPartner_ID") != null && this.curTab.getField("C_BPartner_ID").getValue() > 0) && (i = this.curTab.getField("C_BPartner_ID").getValue()); (Object.keys(this.curGC.getColumnNames()).indexOf("AD_User_ID") > 0 || this.curTab.getField("AD_User_ID") != null && this.curTab.getField("AD_User_ID").getValue() > 0) && (r = this.curTab.getField("AD_User_ID").getValue()); t = new n.AttachmentHistory(this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID(), i, r, this.curTab.getKeyColumnName()); t.show() }; i.prototype.cmd_RecordShared = function () { var r, i, u, f; if (this.curTab.getRecord_ID() < 1) { this.aSharedRecord.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aSharedRecord.getAction(), !1); return } if (this.curTab.isCurrentRecordShare) { n.ADialog.info("ActionNotAllowedHere"); return } if (this.curGC.getSelectedRows().length > 1) { n.ADialog.info("ShareOneRecordOnly"); return } if (r = "Y", t.ajax({ url: n.Application.contextUrl + "JsonData/CheckAccessForAction", dataType: "json", async: !1, data: { columnName: "ShowSharedRecords", roleID: n.context.getAD_Role_ID() }, error: function () { }, success: function (n) { r = JSON.parse(n) } }), r != "Y") return n.ADialog.info("ActionNotAllowedHere"), !1; if (i = this, u = 0, this.curTab.getParentTab() && (u = this.curTab.getParentTab().getAD_Table_ID(), !this.curTab.getParentTab().hasShared() && this.curTab.getParentTab().getValue("AD_Org_ID") != 0)) { n.ADialog.info("ShareParentFirst", !0, "", ""); this.aSharedRecord.setPressed(!1); return } f = new n.RecordShared(this.curTab.getRecord_ID(), this.curTab.getAD_Table_ID(), this.curTab.getAD_Tab_ID(), this.curTab.getAD_Window_ID(), this.curWindowNo, this.curTab.linkValue, u, this.curTab); f.onClose = function () { i.curTab.loadShared(); i.aSharedRecord.setPressed(i.curTab.hasShared()); i = null }; f.show() }; i.prototype.clearSearchText = function () { this.curGC && (this.curGC.searchCode = "", this.curTab.searchText = "") }; i.prototype.cmd_finddialog = function () { var i = new n.Find(this.curWindowNo, this.curTab, 0), t = this, r = ""; i.onClose = function () { var e, o; if (i.getIsOKPressed() || i.needRefresh()) { t.setAdvancedSerachText(!0, ""); t.clearSearchText(); t.isSummaryVisible ? t.curTab.setShowSummaryNodes(!0) : t.curTab.setShowSummaryNodes(!1); var u = i.getQuery(), s = i.getCurrentDays(), f = i.getIsCreated(); r = i.getSavedQueryName(); t.curTab.userQueryID = i.getSavedID(); i.dispose(); i = null; t.curTab.getTableModel().setCurrentPage(1); u != null && u.getIsActive() ? (t.curTab.setQuery(u), t.curGC.query(0, 0, f)) : u != null && (e = n.MRole.getDefault().getMaxQueryRecords(), t.curTab.setQuery(null), t.curGC.query(s, e, f)); o = t.curTab.getIsQueryActive() || t.curTab.getOnlyCurrentDays() > 0; t.aFind.setPressed(o) } t.refreshSavedASearchList(!1, r); t = null }; i.show() }; i.prototype.cmd_preference = function () { var t = new n.Framework.UserPreference; t.load(); t.showDialog(); t = null }; i.prototype.cmd_infoWindow = function () { n.InfoMenu.show(this.aInfo.getItem()) }; i.prototype.cmd_zoomAcross = function () { var r = this.curTab.getRecord_ID(), i, t, u; r > 0 && (i = new n.Query, t = this.curTab.getKeyColumnName(), t.length == 0 && (t = this.curTab.getLinkColumnName()), t.length != 0 && (t.endsWith("_ID") ? i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContextAsInt(this.curWindowNo, t)) : i.addRestriction(t, n.Query.prototype.EQUAL, n.context.getContext(this.curWindowNo, t))), u = new n.AZoomAcross(this.aZoomAcross, this.curTab.getTableName(), i, this.curTab.getAD_Window_ID(), this, this.aZoomAcross.getListItmIT(), t, r), u.init()) }; i.prototype.cmd_request = function () { var t = this.curTab.getRecord_ID(); if (t > 0) { var r = this.curTab.getAD_Table_ID(), u = this.curTab.getValue("C_BPartner_ID"), i = new n.ARequest(this.aRequest, r, t, u, null, this.aRequest.getListItmIT()); i.getRequests(); i = null } }; i.prototype.cmd_markToExport = function () { var f = this.curTab.getRecord_ID(), e = this.curGC.getSelectedRows(), h = null, o = this.curTab.getAD_Table_ID(), s = this.curTab.getTableName(), c, l, a, i, v, u, r, t; if (f == -1) { if (c = { AD_Table_ID: o }, l = n.dataContext.getJSONData(n.Application.contextUrl + "JsonData/GetKeyColumns", c), l == null) return } else { if (a = s + "_ID", i = "", this.curGC.singleRow) { h = f; r = new n.MarkModule; r.init(h, o, s); r.show(); t = this; r.onClose = function () { t.curTab.loadMarking(); t.aMarkToExport.setPressed(t.curTab.hasMarked()); t = null }; return } if (v = e.length, v == 1) i = f; else { for (u = 0; u < e.length; u++)i += e[u][a.toLowerCase()] + ","; i.endsWith(",") && (i = i.substring(0, i.length - 1)) } r = new n.MarkModule; r.init(i, o, s); r.show(); t = this; r.onClose = function () { t.curTab.loadMarking(); t.aMarkToExport.setPressed(t.curTab.hasMarked()); t = null }; return } }; i.prototype.cmd_lock = function () { var u = !1, i, r; if (this.isPersonalLock && (i = this.curTab.getRecord_ID(), i != -1 && !(i < 0))) { if (r = "Y", t.ajax({ url: n.Application.contextUrl + "JsonData/CheckAccessForAction", dataType: "json", async: !1, data: { columnName: "IsPersonalLock", roleID: n.context.getAD_Role_ID() }, error: function () { }, success: function (n) { r = JSON.parse(n) } }), r != "Y") return n.ADialog.info("ActionNotAllowedHere"), !1; this.curTab.locks(n.context, i, this.aLock.getIsPressed()); this.curTab.loadAttachments(); u = this.curTab.getIsLocked(); this.aLock.setPressed(u) } }; i.prototype.cmd_recAccess = function () { var i = "Y", r; if (t.ajax({ url: n.Application.contextUrl + "JsonData/CheckAccessForAction", dataType: "json", async: !1, data: { columnName: "IsPersonalAccess", roleID: n.context.getAD_Role_ID() }, error: function () { }, success: function (n) { i = JSON.parse(n) } }), i != "Y") return n.ADialog.info("ActionNotAllowedHere"), !1; r = new n.RecordAccessDialog; r.Load(this.curTab.getAD_Table_ID(), this.curTab.getRecord_ID()) }; i.prototype.ShowSummaryNodes = function () { this.isSummaryVisible ? (this.aShowSummaryLevel.setPressed(!1), this.isSummaryVisible = !1) : (this.aShowSummaryLevel.setPressed(!0), this.isSummaryVisible = !0) }; i.prototype.cmd_call = function () { var r = this.curTab.getRecord_ID(), u, i, t; if (r == -1) { this.aCall.setEnabled(!1); this.curGC && this.curGC.vGridPanel.setEnabled(this.aCall.getAction(), !1); return } u = this.curTab.getAD_Table_ID(); VA048 && VA048.Apps ? (i = new VA048.Apps.CallForm, i.initializeComponent(u, r), t = new n.CFrame, t.setName(n.Msg.getMsg("Call")), t.setTitle(n.Msg.getMsg("Call")), t.hideHeader(!0), t.setContent(i), t.show()) : alert(n.Msg.getMsg("Please install Communication module first")) }; i.prototype.getLastView = function () { return this.lastView || (this.lastView = ""), this.lastView }; i.prototype.setBackEnable = function () { this.tabStack.length == 1 && this.tabStack[0].tabView.length <= 1 ? (this.aBack.setEnabled(!1), this.curGC && this.curGC.vGridPanel.setEnabled("BVW", !1)) : (this.aBack.setEnabled(!0), this.curGC && this.curGC.vGridPanel.setEnabled("BVW", !0)) }; i.prototype.dispose = function () { this.aParentDetail && this.aParentDetail.dispose(); this.curST != null && (this.curST.unRegisterAPanel(), this.curST = null); this.vTabbedPane.dispose(); this.vTabbedPane = null; this.gridWindow && (this.gridWindow.dispose(), this.gridWindow = null, this.ctx.setAutoCommit(this.$parentWindow.getWindowNo(), !1), this.ctx.removeWindow(this.$parentWindow.getWindowNo()), n.MLookupCache.cacheReset(this.$parentWindow.getWindowNo())); this.ctx = null; this.$parentWindow = null; this.tabPages = null; this.curGC = null; this.curST = null; this.aParentDetail = null; this.curTab = null; this.disposeComponent() }; n.APanel = i }(VIS, jQuery), function (n, t) { function i(i, r) { function w() { s = u.find(".vis-ad-w-p-t-c-inc-tc"); f = u.find(".vis-ad-w-p-t-c-inc"); h = u.find(".vis-ad-w-p-inc-tabs-oflow").hide(); v = u.find(".vis-ad-w-p-inc-tabs"); u.css("display", "flex"); y = u.find(".vis-ad-w-p-inc-content"); e = u.find(".vis-ad-w-p-inc-tb-lc"); l = u.find(".vis-ad-w-p-inc-tab-a-list"); c = u.find(".vis-ad-w-p-inc-tab-ac-buttons") } function p(n) { n ? u.css("display", "none") : u.css("display", "flex") } var u, o; this.aTabbedPane = i; u = r; this.tabLIObj = []; this.tabItems = []; this.tabIds = []; this.tabs = []; this.headerTab = null; this.aNew = null; this.aSave = null; this.aDelete = null; this.aRefresh = null; var s = null, f = null, h = null, v = null, y = null, e = null, l = null, c = null, a = this; w(); o = function (n) { a.actionPerformed(n) }; h.on("click", function (n) { var e, o; if (n.stopPropagation(), e = t(n.target).data("dir"), e) { var c = f.width(), h = s.width(), i = f.scrollLeft(), r = Math.ceil(c / 2), u = 0; if (e == "r") { if (i + r >= h - r) return; o = h - c; u = i + r; f.animate({ scrollLeft: u > o ? o : u }, 1e3) } else if (e == "b") { if (i == 0) return; u = i - r; f.animate({ scrollLeft: u < 0 ? 0 : u }, 1e3) } if (e == "rl") { if (i + r >= h - r) return; o = h - c; f.animate({ scrollLeft: o }, 500) } else if (e == "bf") { if (i == 0) return; u = i - r; f.animate({ scrollLeft: 0 }, 500) } } }); this.setTabControl = function (n) { var i, t, r; if (this.resetListners(), this.headerTab = n, s.empty(), n.ChildTabsItems.length == 0) { p(!0); return } for (p(), i = 0; i < n.ChildTabsItems.length; i++)t = n.ChildTabsItems[i], r = t.getListItm(), this.tabLIObj[t.action] = r, s.append(r), t.setEnabled(!1), t.onAction = null, n.TabLevel + 1 >= n.ChildTabs[i].getTabLevel() && (t.onAction = this.onTabChange, t.setEnabled(!0)), n.ChildEle[i].addSubTabDataStatusListner(this), this.tabItems.push(n.ChildEle[i]), this.tabIds.push(t.getAction()), this.tabs.push(t), i == 0 && (this.selectedTab = r) }; this.setSelectedTab = function (n) { this.selectedTab && this.selectedTab.removeClass("vis-apanel-tab-selected"); this.selectedTab = this.tabLIObj[n]; this.selectedTab.addClass("vis-apanel-tab-selected") }; this.onTabChange = function (n) { a.tabActionPerformed(n) }; this.getLayout = function () { return y }; this.setTabNavigation = function () { s.width() > f.width() ? n.Application.isMobile || h.show() : h.hide() }; this.createToolBar = function () { var n = this.aTabbedPane.getAPanel(); this.aRefresh = n.addActions(n.ACTION_NAME_REFRESH, null, !0, !0, !1, o, null, "Shct_CV_Refresh", "Refresh"); this.aDelete = n.addActions(n.ACTION_NAME_DELETE, null, !0, !0, !1, o, null, "Shct_CV_Delete", "Delete"); this.aNew = n.addActions(n.ACTION_NAME_NEW, null, !0, !0, !1, o, null, "Shct_CV_New", "New"); this.aIgnore = n.addActions("UNO", null, !0, !0, !1, o, null, "Shct_CV_Ignore", "Ignore"); this.aSave = n.addActions("SAR", null, !0, !0, !1, o, null, "Shct_CV_Save", "Save"); this.aMulti = n.addActions("Multi", null, !1, !0, !0, o, !0, "Shct_CV_MultiRow"); e.append(this.aIgnore.getListItm()); e.append(this.aNew.getListItm()); e.append(this.aDelete.getListItm()); e.append(this.aSave.getListItm()); e.append(this.aRefresh.getListItm()); e.append(this.aMulti.getListItm()) }; this.createToolBar(); this.finishLayout = function () { n.Application.isMobile || f.addClass("vis-ad-w-p-t-c-mob") }; this.setDynamicActions = function (n, t) { if (c.css("display", "none"), n != null) if (t) n.detachDynamicAction(); else { var i = 0, r = []; if (n.leftPaneLinkItems.length > 0) for (r = this.curGC.leftPaneLinkItems, i = 0; i < r.length; i++)l.append(r[i].getControl()); if (i = 0, n.rightPaneLinkItems.length > 0) for (r = this.curGC.rightPaneLinkItems, i = 0; i < r.length; i++)l.append(r[i].getControl()); (n.leftPaneLinkItems.length > 0 || n.rightPaneLinkItems.length > 0) && (c.css("display", "flex"), c.find("span").show()); r = null } }; this.disposeComponents = function () { a = null; u.remove(); $ulToobar = $ulNav = u = s = f = h = v = null; l = c = null } } i.prototype.resetListners = function () { for (var n = 0; n < this.tabItems.length; n++)this.tabItems[n].removeSubTabDataStatusListner(); this.tabLIObj = []; this.tabItems = []; this.tabIds = []; this.tabs = []; this.setDynamicActions(this.curGC, !0); this.curST && this.curST.setVisible(!1); this.curGC && this.curGC.setVisible(!1); this.curST = this.curGC = null; this.curTabIndex = -1 }; i.prototype.getTabElement = function (n) { return this.newTabIndex = this.tabIds.indexOf(n), this.tabItems[this.newTabIndex] }; i.prototype.getIsZoomToHeader = function (n) { return this.curTabIndex == this.tabIds.indexOf(n) ? !0 : !1 }; i.prototype.onParentTabChange = function (n) { n = n.replace("st_", ""); this.aTabbedPane.getAPanel().onTabChange(n) }; i.prototype.tabActionPerformed = function (t) { var h = !1, c = !1, r = this.getTabElement(t), u = this.curST || this.curGC, e = null, i = this, o, s, f; if (h = this.newTabIndex < this.curTabIndex, o = null, s = null, r instanceof n.VSortTab ? (s = r, c = !0) : o = r, f = !0, this.curGC != null) { if (this.curTab.needSave(!0, !1)) if (this.curTab.needSave(!0, !0)) if (n.Env.getCtx().isAutoCommit(this.curWindowNo)) { if (!this.curTab.dataSave(!0)) return this.setBusy(!1, !0), !1 } else f = !1, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { if (!i.curTab.dataSave(!0)) return i.setBusy(!1, !0), !1 } else i.curTab.dataIgnore(); u = i.curGC; e = i.curGC; i.curGC = null; i.tabActionPerformedCallback(t, h, c, r, u, e, o, s) }); else i.curTab.dataIgnore(); f && (u = this.curGC, e = this.curGC, this.curGC = null) } return f && this.curST != null && (this.curST.saveData(), u = this.curST, this.curST = null), f && i.tabActionPerformedCallback(t, h, c, r, u, e, o, s), !0 }; i.prototype.sizeChanged = function () { this.setTabNavigation(); return }; i.prototype.refresh = function () { this.curGC && this.curGC.vTable.resize(); return }; i.prototype.tabActionPerformedCallback = function (t, i, r, u, f, e, o, s) { if (this.setDynamicActions(e, !0), this.getIsZoomToHeader(t)) { console.log("zoom to parent tab"); this.onParentTabChange(t); return !1 } if (this.curTabIndex = this.newTabIndex, r) this.curST = s, s.loadData(); else { if (this.curGC = o, o.activate(e), this.setDynamicActions(this.curGC), this.curTab = o.getMTab(), !o.isZoomAction && this.curTab.getTabLevel() > 0) { var h = new n.Query; this.curTab.query = h } i && this.curTab.getIsCurrent() ? o.dataRefresh() : this.reQuery() } r ? (this.aMulti.setPressed(!1), this.aMulti.setEnabled(!1), this.aNew.setEnabled(!1), this.aDelete.setEnabled(!1), this.aRefresh.setEnabled(!1)) : (this.aMulti.setEnabled(!0), this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()), this.aRefresh.setEnabled(!0)); f && (f.setVisible(!1), f.getRoot().detach()); this.getLayout().append(u.getRoot()); u.setVisible(!0); this.setSelectedTab(t); this.setTabNavigation(); f = u = null }; i.prototype.reQuery = function () { if (this.curTabIndex < 0 && this.tabs.length > 0) { this.onTabChange(this.tabs[0].getAction()); return } this.curGC && (this.curTab.getTableModel().setCurrentPage(1), (!this.curGC.onDemandTree || this.curGC.isZoomAction) && (this.curTab.searchText = "", this.curGC.query(this.curTab.getOnlyCurrentDays(), 0, !1))) }; i.prototype.dataStatusChanged = function (t) { if (t) { $ths = this; t.getIsError() && !t.getIsConfirmed() ? (n.ADialogCallback.error(t.getAD_Message(), t.getInfo(), null, function () { var n = $ths.curTab.getLastFocus(); n && (n.focus(), $ths.curTab.setLastFocus(null)) }), t.setConfirmed(!0), this.errorDisplayed = !0) : t.getIsWarning() && !t.getIsConfirmed() && (n.ADialog.warn(t.getAD_Message(), !0, t.getInfo()), t.setConfirmed(!0)); var r = t.getIsChanged() || t.getIsInserting(), i = this.curTab.getIsReadOnly(), u = !i; u && (u = this.curTab.getIsInsertRecord()); this.aNew.setEnabled(!r && u); this.aRefresh.setEnabled(!r); this.aDelete.setEnabled(!r && !i && t.getCurrentRow() > -1); i && this.curTab.getIsAlwaysUpdateField() && (i = !1); this.aIgnore.setEnabled(r && !i); this.aSave.setEnabled(r && !i); t.getTotalRows() == 0 && u && (this.aNew.setEnabled(!0), this.aDelete.setEnabled(!1)); this.aMulti.setPressed(this.curGC.getIsSingleRow() || this.curGC.getIsMapRow()); this.curTab.getRecord_ID() < 1 && this.aDelete.setEnabled(!1); this.evaluate(null); t.getIsInserting() || this.aTabbedPane.getAPanel().setStatusInfo() } else this.curGC && this.curTab.needSave(!0, !1) && this.curTab.needSave(!0, !0) && this.curGC.dataIgnore(), this.reQuery() }; i.prototype.actionPerformed = function (t) { if (!this.getIsUILocked()) { var i = this; setTimeout(function () { if (t.source instanceof n.Controls.VButton) { i.actionButton(t.source) || i.setBusy(!1, !0); return } i.actionPerformedCallback(i, t) }); this.setBusy(!0) } }; i.prototype.actionPerformedCallback = function (t, i) { if (t.aMulti.getAction() === i) t.aMulti.setPressed(!t.curGC.getIsSingleRow()), t.curGC.switchRowPresentation(); else if (t.aRefresh.getAction() === i) t.cmd_save(!1), t.curGC.dataRefreshAll(); else if (t.aIgnore.getAction() === i) t.curGC.dataIgnore(); else if (t.aSave.getAction() === i) t.cmd_save(!0); else if (t.aNew.getAction() === i) if (this.curGC.aPanel.curTab.needSave()) n.ADialog.warn("VIS_SaveParentFirst"); else { if (!t.curTab.getIsInsertRecord()) return; t.curGC.dataNew(!1) } else t.aDelete.getAction() === i && t.cmd_delete(); t.setBusy(!1); t = null }; i.prototype.cmd_save = function (t, i) { var f, u, r; if (this.curST != null && (t = !1), this.errorDisplayed = !1, this.curST != null) { this.curST.saveData(); this.aSave.setEnabled(!1); return } return f = !0, this.curTab.getCommitWarning().length > 0 && this.curTab.needSave(!0, !1) && (f = !1, u = this, n.ADialog.confirm("SaveChanges?", !0, this.curTab.getCommitWarning(), "Confirm", function (n) { if (n) { var i = u.curGC.dataSave(t); t && !i && !u.errorDisplayed; t && u.curGC.dynamicDisplay(-1) } }), i && i(r)), f ? (r = this.curGC.dataSave(t), t && !r && !this.errorDisplayed, t && this.curGC.dynamicDisplay(-1), i && i(r), r) : void 0 }; i.prototype.cmd_delete = function () { var t, i; if (!this.curTab.getIsReadOnly()) { if (t = this.curGC.canDeleteRecords(), t.length > 0) { n.ADialog.error("CannotDelete", !0, " [ " + t.join(",") + "]"); return } i = this; n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (n) { n && i.curGC.dataDeleteAsync(); i = null }) } }; i.prototype.actionButton = function (n) { this.aTabbedPane.getAPanel().actionButton(n, this) }; i.prototype.keyDown = function (n) { if (n.altKey && n.ctrlKey && this.curGC) { var t = this.aNew.getIsEnabled(); switch (n.keyCode) { case 78: t && this.actionPerformed(this.aNew.getAction()); break; case 68: t && this.actionPerformed(this.aDelete.getAction()); break; case 81: t && this.actionPerformed(this.aRefresh.getAction()); break; case 83: this.actionPerformed(this.aSave.getAction()); break; case 84: this.actionPerformed(this.aMulti.getAction()); break; case 90: t || this.actionPerformed(this.aIgnore.getAction()) }n.preventDefault(); n.stopPropagation() } }; i.prototype.evaluate = function () { for (var i, r, u, t = 0; t < this.tabItems.length; t++)i = this.tabItems[t], i instanceof n.GridController && (r = i, u = this.headerTab.TabLevel + 1 >= this.headerTab.ChildTabs[t].getTabLevel() && r.getIsDisplayed(), this.tabs[t].setEnabled(u)) }; i.prototype.setBusy = function (n) { this.aTabbedPane.getAPanel().setBusy(n) }; i.prototype.getIsUILocked = function () { this.aTabbedPane.getAPanel().getIsUILocked() }; i.prototype.dispose = function () { this.disposeComponents(); this.aNew.dispose(); this.aSave.dispose(); this.aDelete.dispose(); this.aRefresh.dispose(); this.aPanel = null }; n.ContentPane = i }(VIS, jQuery), function (n, t) { function r(t) { return ' <div class="vis-fp-bodycontent vis-formouterwrpdiv">                                                      <div class="vis-fp-viwall" >                                                           <span>' + n.Msg.getMsg("ViewMore") + '<\/span>                                    <\/div>                                                                         <div class="vis-fp-datawrap">      <div class="vis-fp-static-ctrlwrp">                                           <div class="vis-fp-static-ctrlinnerwrp"><\/div>         <\/div>                                                                            <div class="vis-fp-custcolumns" id="accordion_' + t + '"">                         <div class="card">                                                                    <div class="card-header" style="cursor:pointer" data-toggle="collapse" href="#collapseOne_' + t + '">                                                             <span>' + n.Msg.getMsg("CustomCondition") + '<\/span>                                                   <a class="card-link" >                      <i class="vis vis-arrow-up"><\/i>                                              <\/a>                                                                          <\/div>                                                                            <div id="collapseOne_' + t + '"" class="collapse" data-parent="#accordion_' + t + '" >                 <div class="card-body">                                                               <div class="input-group vis-input-wrap">                                              <div class="vis-control-wrap">                                                        <select class="vis-fp-cols">                                                      <\/select>                                                                         <label class="vis-fp-lblcols">' + n.Msg.getMsg("Column") + '<\/label>                                  <\/div>                                                                        <\/div>                                                                            <div class="input-group vis-input-wrap">                                              <div class="vis-control-wrap">                                                        <select class="vis-fp-op">                                                        <\/select>                                                                         <label class="vis-fp-lblop">' + n.Msg.getMsg("Operator") + '<\/label>                                  <\/div>                                                                        <\/div>                                                                            <div class="vis-fp-valueone">                                                     <\/div>                                                                            <div class="vis-fp-valuetwo">                                                     <\/div>                                                                            <div class="vis-fp-valuethree">                                                   <\/div>                                                                            <div class="vis-fp-cc-addbtnwrp">                                                     <span class="vis-fp-cc-addbutton">' + n.Msg.getMsg("ADD") + '<\/span>                                  <\/div>                                                                        <\/div>                                                                        <\/div>                                                                        <\/div>                                                                            <div class="vis-fp-custcoltagswrp">                                                   <div class="vis-fp-custcoltag">                                                   <\/div>                                                                        <\/div><!-- vis-fp-custcoltagswrp -->                                          <\/div>  <\/div>                                                                      <\/div>' } function i(i, u) { function ht(i) { var f = "", s = o.find(".vis-fp-inputgroupseprtr"), h, r, a, v, p, w, u, y; if (s && s.length > 0) for (h = 0; h < s.length; h++) { var b = t(s[h]), c = b.find(".vis-fp-inputvalueforupdate"), l = b.data("columnname"); if (c && c.length > 0) { for (r = "", a = 0; a < c.length; a++)(v = t(c[a]), v[0].type != "checkbox" || v.is(":checked")) && (p = i.parseWhereCondition(l, n.Query.prototype.EQUAL, v.data("id"), null), r += r != "" ? " OR " + p : "(" + p); for (r != "" && (r += ")", f += f != "" ? " AND " + r : r), w = !1, u = 0; u < i.listOfFilterQueries.length; u++)i.listOfFilterQueries[u].columnName == l && (w = !0, r != "" ? i.listOfFilterQueries[u].whereClause = r : i.listOfFilterQueries.splice(u, 1)); w || r == "" || i.listOfFilterQueries.push({ columnName: l, whereClause: r }) } else for (u = 0; u < i.listOfFilterQueries.length; u++)i.listOfFilterQueries[u].columnName == l && i.listOfFilterQueries.splice(u, 1) } return y = e.getDynamicFilter(), y != "" && (f != "" ? f += " AND " + y : f = y), f } function ct(n) { var t = it[0].selectedIndex; if (n) { divYear.hide(); divMonth.hide(); divDay.hide(); return } divYear.show(); divMonth.show(); chkDynamic.is(":checked") ? divDay.show() : divDay.hide(); txtDay.prop("readonly", !1); txtMonth.prop("min", 1); t == 3 || t == 6 ? (txtMonth.prop("min", 0), txtDay.val(0), txtMonth.val(0), txtYear.val(1)) : t == 2 || t == 5 ? (divYear.hide(), txtYear.val(""), txtMonth.val(1), txtDay.val(0)) : t == 1 || t == 4 ? (divYear.hide(), divMonth.hide(), txtDay.val(0)) : t == 0 && (txtDay.prop("readonly", !0), divYear.hide(), divMonth.hide(), txtDay.val(0)) } function rt(n) { var r = b.children()[1], i = null; b.children().length > 2 && (i = b.children()[2]); i ? t(i).prop("disabled", !n).prop("readonly", !n) : r != null && t(r).prop("disabled", !n).prop("readonly", !n) } function nt(n) { var r = h.children()[1], i = null; h.children().length > 2 && (i = h.children()[2]); i ? t(i).prop("disabled", !n).prop("readonly", !n) : r != null && t(r).prop("disabled", !n).prop("readonly", !n) } function d(n) { var t = null; t = n ? y : v; t != null && t.setValue(null) } function tt(i, r) { var s, l, u, o, a; if (i && (v = null), y = null, s = null, l = null, s = i ? b.children()[0] : h.children()[0], s != null && (t(s).remove(), l != null && t(l).remove(), s = null), u = null, u = r != null ? r.getIsKey() ? new n.Controls.VNumTextBox(r.getColumnName(), !1, !1, !0, r.getDisplayLength(), r.getFieldLength(), r.getColumnName()) : n.VControlFactory.getControl(null, r, !0, !0, !1) : new n.Controls.VTextBox("columnName", !1, !0, !1, 20, 20, "format", "GetObscureType", !1), u != null) { u.setMandatory(!1); u.setReadOnly(!1); r.getDisplayType() == n.DisplayType.AmtDimension && (u.hideButton(!1), u.setReadOnlyTextbox(!1)); n.DisplayType.Text == r.getDisplayType() || n.DisplayType.TextLong == r.getDisplayType() ? (u.getControl().attr("rows", "1"), u.getControl().css("width", "100%")) : n.DisplayType.YesNo == r.getDisplayType() ? u.getControl().css("clear", "both") : n.DisplayType.IsDate(r.getDisplayType()) && u.getControl().css("line-height", "1"); var c = null, f = t('<div class="input-group vis-input-wrap">'), e = t('<div class="vis-control-wrap">'); u.getBtnCount() > 0 && !(u instanceof n.Controls.VComboBox) && (c = u.getBtn(0)); i ? (b.append(f), f.append(e), e.append(u.getControl()), v = u, c && (o = t('<div class="input-group-append">'), f.append(o), o.append(c)), r.getDisplayType() == n.DisplayType.YesNo || e.append("<label>" + n.Msg.getMsg("QueryValue") + "<\/label>")) : (h.append(f), f.append(e), e.append(u.getControl()), y = u, c && (o = t('<div class="input-group-append">'), f.append(o), o.append(c)), r.getDisplayType() == n.DisplayType.YesNo || (a = t("<label>" + n.Msg.getMsg("VIS_QueryValueTo") + "<\/label>"), e.append(a))); r.getDisplayType() == n.DisplayType.AmtDimension } } function ut(t) { var i = null; return (i = t ? v : y, i != null) ? i.getDisplayType() == n.DisplayType.YesNo ? i.getValue().toString().toLowerCase() == "true" ? "Y" : "N" : i.displayType == n.DisplayType.AmtDimension ? i.getText() : i.getValue() : "" } function ft(t) { var i = null; return (i = t ? v : y, i != null) ? i.displayType == n.DisplayType.AmtDimension ? i.getText() : i.getDisplay() : "" } function lt() { var i = a.val(), t, r, n, u; if (!i || i == "-1" || (t = a.find("option:selected").text(), r = "", t == null || t.trim().length == 0)) return !1; r = i.toString(); n = s.val(); (n == null || n == undefined) && (n = s.find("option:selected").text()); u = s.val(); at(t, r, n, u, ft(!0), ut(!0), ft(!1), ut(!1), !0) } function at(n, t, i, r, u, o, s, h) { f == null && (f = {}); t in f || (f[t] = []); f[t].push({ Name: n, Value: o, Value2: o, Text: u, Text2: s, Optr: i, Where: e.parseWhereCondition(t, i, o, h) }); et(t) } function vt(n) { f == null && (f = {}); n in f && delete f[n]; et(n) } function et(n) { var u = k.find('[data-id="' + n + '"]'), t, r, i; if (u.length > 0 && u.remove(), n in f) { for (t = [], r = f[n], t.push('<div class="vis-fp-currntrcrds" data-id="' + n + '"><span  class="vis-fp-inputvalueforupdate">'), i = 0; i < r.length; i++)i != 0 ? t.push(" | ") : (t.push(r[i].Name), t.push(r[i].Optr)), t.push(r[i].Text); t.push('<\/span> <i class="vis vis-mark"><\/i><\/div>'); k.append(t.join(" ")) } e.fireValChanged(); d(); d(!0) } var ot = r(i), v, y, f = null, o = t(ot), yt = o.find(".vis-fp-datawrap"), c = o.find(".vis-fp-static-ctrlwrp"), g = o.find(".vis-fp-static-ctrlinnerwrp"), p = o.find(".vis-fp-viwall"), w = t(p.find("span")[0]), l = o.find(".vis-fp-custcolumns"), a = l.find(".vis-fp-cols"), s = l.find(".vis-fp-op"), it = l.find("#drpDynamicOp_" + i), st = l.find(".vis-fp-cc-addbtnwrp"), b = l.find(".vis-fp-valueone"), h = l.find(".vis-fp-valuetwo"), k = l.find(".vis-fp-custcoltag"), e; w.text(n.Msg.getMsg("ViewMore")); this.curGC = u; this.winNo = i; this.selectionfields = null; this.curTabfields = null; this.curTab = null; this.listOfFilterQueries = []; this.ctrlObjects = {}; this.getRoot = function () { return o }; this.setLayout = function () { var e, r, o, f, i, u, c, l; if (this.selectionfields && this.selectionfields.length > 0) for (e = 0; e < this.selectionfields.length; e++) { if (f = this.selectionfields[e], i = {}, n.DisplayType.IsLookup(f.getDisplayType()) || n.DisplayType.ID == f.getDisplayType()) if (i = jQuery.extend(!0, {}, f), i.lookup = jQuery.extend(!0, {}, f.lookup), i.lookup && i.lookup.initialize) i.lookup.initialize(); else continue; else i = f; this.selectionfields[e] = i; r = i.getIsKey() ? new n.Controls.VNumTextBox(i.getColumnName(), !1, !1, !0, i.getDisplayLength(), i.getFieldLength(), i.getColumnName()) : n.VControlFactory.getControl(null, i, !0, !0, !1); r.setReadOnly(!1); r.setMandatory(!1); this.ctrlObjects[i.getColumnName()] = r; var a = t('<div class="vis-fp-inputgroupseprtr" data-ColumnName="' + r.getName() + '" data-cid="' + r.getName() + "_" + this.curTab.getAD_Tab_ID() + '"><\/div>'), s = t('<div class="vis-control-wrap">'), h = t('<div class="input-group vis-input-wrap">'); i.getDisplayType() == n.DisplayType.YesNo ? (u = [], u.push('<div class="vis-fp-lst-searchrcrds">'), u.push('<div class="vis-fp-inputspan">'), u.push('<div class="vis-fp-istagwrap"><input class="vis-fp-chboxInput vis-fp-inputvalueforupdate" type="checkbox" data-column="' + r.getName() + '" data-keyval="' + r.getName() + '_Y" data-id="Y"'), u.push('><span data-id="Y">' + n.Msg.getMsg("Yes") + "<\/span> <\/div>"), u.push("<\/div>"), u.push('<div class="vis-fp-inputspan">'), u.push('<div class="vis-fp-istagwrap"><input class="vis-fp-chboxInput vis-fp-inputvalueforupdate" type="checkbox" data-column="' + r.getName() + '" data-keyval="' + r.getName() + '_N" data-id="N"'), u.push('><span data-id="N">' + n.Msg.getMsg("No") + "<\/span> <\/div>"), u.push("<\/div>"), u.push("<\/div>"), s.append("<label>" + i.getHeader() + "<\/label>"), h.append(s), h.append(u.join(""))) : (o = n.VControlFactory.getLabel(i), r.addVetoableChangeListener(this), s.append(r.getControl()), o && (o.getControl().find("sup").hide(), o && s.append(o.getControl())), h.append(s)); r && r.getBtnCount() > 1 && (c = r.getBtn(0), c && (l = t('<div class="input-group-append">'), l.append(c), h.append(l))); a.append(h); g.append(a); this.getFilterOption(i) } }; this.fireValChanged = function (n) { this.refreshAll(n) }; this.vetoablechange = function (n) { var e = o.find('[data-cid="' + n.propertyName + "_" + this.curTab.getAD_Tab_ID() + '"]'), i = t.grep(this.selectionfields, function (t) { if (t.getColumnName() == n.propertyName) return t }), r, u, f; r = i[0].lookup && i[0].lookup.getDisplay ? i[0].lookup.getDisplay(n.newValue) : n.newValue; this.ctrlObjects[n.propertyName] && this.ctrlObjects[n.propertyName].setValue(n.newValue); u = t('<span data-id="' + n.newValue + '" class="vis-fp-inputvalueforupdate" >' + r + "<\/span>"); f = t('<i data-id="' + n.newValue + '" data-keyval="' + n.propertyName + "_" + n.newValue + '" class="vis vis-mark"><\/i><\/div><\/div>'); e.append(t('<div class="vis-fp-currntrcrdswrap">').append(t('<div class="vis-fp-currntrcrds">').append(u).append(f))); this.ctrlObjects[n.propertyName] && this.ctrlObjects[n.propertyName].setValue(null); this.fireValChanged(n.propertyName) }; this.setFilterOptions = function (n, i) { var u, a = [], f = [], v = c.find('[data-cid="' + i + "_" + this.curTab.getAD_Tab_ID() + '"]'), h, y, e, r, o, l, s; if (v && v.length > 0 && (u = v.find(".vis-fp-lst-searchrcrds"), h = u.find("input"), h && h.length > 0)) for (y = 0; y < h.length; y++)e = t(h[y]), e.is(":checked") && (a.push(e.data("id")), e.parent().parent().find(".vis-fp-spanCount").text("(0)"), f.push(e.parent().parent())), e.parent().parent().remove(); for (u && u.length != 0 || (u = t('<div class="vis-fp-lst-searchrcrds vis-fp-lst-searchrcrdswrp"><\/div>'), v.append(u)), r = 0; r < n.length; r++) { if (o = [], l = n[r].ID, isNaN(l) || (l = parseFloat(l)), s = a.indexOf(l), s > -1) { f[s].find(".vis-fp-spanCount").text("(" + n[r].Count + ")"); u.append(f[s]); f.splice(s, 1); a.splice(s, 1); continue } r < 5 && (o.push('<div class="vis-fp-inputspan">'), o.push('<div class="vis-fp-istagwrap"><input class="vis-fp-chboxInput vis-fp-inputvalueforupdate" type="checkbox" data-column="' + i + '" data-keyval="' + i + "_" + n[r].ID + '" data-id="' + n[r].ID + '"'), o.push('><span data-id="' + n[r].ID + '">' + n[r].Name + '<\/span> <\/div><span class="vis-fp-spanCount">(' + n[r].Count + ")<\/span>"), o.push("<\/div>"), u.append(o.join(""))) } for (r = 0; r < f.length; r++)u.append(f[r]); f = []; a = [] }; this.hardRefreshFilterPanel = function () { c.find(".vis-fp-lst-searchrcrdswrp").remove(); c.find(".vis-fp-currntrcrdswrap").remove(); k.find(".vis-fp-currntrcrds").remove(); f = []; a.val(-1); s.val(-1); d(); d(!0) }; this.getFilterClause = function () { return ht(this) }; this.fillColumns = function (n) { a.append(n) }; e = this; c.on("click", "i", function () { var n = t(this); n.hasClass("vis-mark") && (n.parent().parent().remove(), e.fireValChanged(n.data("keyval"))) }); k.on("click", "i", function () { var n = t(this), i; n.hasClass("vis-mark") && (i = n.parent().data("id"), vt(i)) }); o.on("click", function (n) { if ($target = t(n.target), $target.is("input") && $target.hasClass("vis-fp-chboxInput")) { var i = $target.data("column"); e.fireValChanged(i) } }); st.on("click", function () { lt() }); p.on("click", "span", function () { c.toggleClass("vis-fp-static-ctrlwrp-auto"); w.text() == n.Msg.getMsg("ViewMore") ? w.text(n.Msg.getMsg("ViewLess")) : w.text(n.Msg.getMsg("ViewMore")) }); a.on("change", function () { var t = a.val(), i = e.getTargetMField(t), r; t && t != "-1" && (r = null, r = t.endsWith("_ID") || t.endsWith("_Acct") || t.endsWith("_ID_1") || t.endsWith("_ID_2") || t.endsWith("_ID_3") ? e.getOperatorsQuery(n.Query.prototype.OPERATORS_ID) : t.startsWith("Is") ? e.getOperatorsQuery(n.Query.prototype.OPERATORS_YN) : n.DisplayType.IsDate(i.getDisplayType()) ? e.getOperatorsQuery(n.Query.prototype.OPERATORS) : e.getOperatorsQuery(n.Query.prototype.CVOPERATORS), i != null && n.DisplayType.IsDate(i.getDisplayType()) && n.Query.prototype.BETWEEN.equals(r) && (tt(!1, i), rt(!1), nt(!0)), i.getDisplayType() != n.DisplayType.DateTime, s.html(r), s[0].SelectedIndex = 0, tt(!0, i), s.prop("disabled", !1)); rt(!0); nt(!1); h.hide() }); s.on("change", function () { var t = a.val(), i = e.getTargetMField(t); n.Query.prototype.BETWEEN.equals(s.val()) ? (tt(!1, i), nt(!0), h.show()) : h.hide() }); o.on("mouseover", function () { g.height() > c.parent().height() - 60 && g.height() + 15 >= c.height() ? p.css("visibility", "visible") : p.css("visibility", "hidden") }); o.on("mouseout", function () { w.text() == n.Msg.getMsg("ViewMore") && p.css("visibility", "hidden") }); it.on("change", function () { ct() }); this.disposeComponent = function () { o.remove(); this.listOfFilterQueries = []; e = null }; this.getDynamicFilter = function () { var i = "", u, r, n, t; for (u in f) { for (r = f[u], n = [], t = 0; t < r.length; t++)t == 0 ? (n.push(" ( "), n.push(r[t].Where)) : n.push(" OR " + r[t].Where); n.length > 0 && n.push(" ) "); i != "" && (i += " AND "); i += n.join(" ") } return i } } i.prototype.init = function () { var s, h, r, e, u, t, o, i, f; if (!this.initialzed) { for (this.curTab = this.curGC.getMTab(), s = this.curTab.getFields(), this.selectionfields = [], this.curTabfields = [], h = '<option value="-1"> <\/option>', r = [], e = 0; e < s.length; e++)(u = s[e], t = jQuery.extend(!0, {}, u), u.lookup && (n.DisplayType.IsLookup(u.getDisplayType()) || n.DisplayType.ID == u.getDisplayType()) && (t.lookup = jQuery.extend(!0, {}, u.lookup), t.lookup.initialize && t.lookup.initialize()), this.curTabfields.push(t), t.getIsEncrypted()) || (o = t.getColumnName(), t.getDisplayType() == n.DisplayType.Button && (t.getAD_Reference_Value_ID() == 0 ? t.setDisplayType(n.DisplayType.String) : o.endsWith("_ID") ? t.setDisplayType(n.DisplayType.Table) : (t.setDisplayType(n.DisplayType.List), t.lookup = new n.MLookupFactory.getMLookUp(n.context, this.winNo, t.getAD_Column_ID(), n.DisplayType.List))), i = t.getHeader(), i != null && i.length != 0 || (i = n.Msg.getElement(n.context, o), i != null && i.Length != 0)) && (t.getIsKey() && (i += " (ID)"), (n.DisplayType.IsLookup(t.getDisplayType()) || n.DisplayType.ID == t.getDisplayType()) && !t.lookup || (t.getIsSelectionColumn() ? this.selectionfields.push(t) : r.push({ value: o, text: i }))); for (r.sort(function (n, t) { var i = n.text.toUpperCase(), r = t.text.toUpperCase(); return i > r ? 1 : i < r ? -1 : 0 }), f = 0; f < r.length; f++)h += '<option value="' + r[f].value + '">' + r[f].text + "<\/option>"; this.fillColumns(h); this.selectionfields.sort(function (n, t) { return n.getSelectionSeqNo() - t.getSelectionSeqNo() }); this.getFixedColumns(); this.setLayout(); this.initialzed = !0 } }; i.prototype.getFixedColumns = function () { this.selectionfields && this.selectionfields.length != 0 || (this.selectionfields = t.grep(this.curTabfields, function (n) { if (n.getColumnName() == "Name" || n.getColumnName() == "Value" || n.getColumnName() == "DocumentNo") return n })) }; i.prototype.getFilterOption = function (t, i) { var r, f, e, h, o; if (i || (i = ""), t && t.getShowFilterOption()) { var c = "", l = "", s = "", a = ""; t.getLookup() && t.getLookup().info && (c = t.getLookup().info.keyColumn, l = t.getLookup().info.displayColSubQ, s = n.Env.parseContext(n.Env.getCtx(), this.winNo, this.curTab.getTabNo(), t.getLookup().info.validationCode, !1), a = t.getLookup().info.tableName); r = this.curTab.getWhereClause(); r = n.Env.parseContext(n.Env.getCtx(), this.winNo, this.curTab.getTabNo(), r, !1); f = this.curTab.getLinkWhereClause(); f && f.length > 0 && (i += i != "" ? " AND " + f : " " + f); r && r.length > 0 && (i += i != "" ? " AND " + r : " " + r); e = this.getDynamicFilter(); e && e.length > 0 && (i += i != "" ? " AND " + e : " " + e); h = { ctx: n.context.getWindowCtx(this.winNo), windowNo: this.winNo, column_ID: t.getAD_Column_ID(), AD_Reference_ID: t.getDisplayType(), columnName: t.getColumnName(), AD_Reference_Value_ID: t.getAD_Reference_Value_ID(), validationCode: n.secureEngine.encrypt(s), whereClause: n.secureEngine.encrypt(i), isParent: !1, pTableName: this.curTab.getTableName() }; o = this; u.getFilters(h).then(function (n) { var t = n.keyCol; n = n.list; o.setFilterOptions(n, t); o = null }) } }; i.prototype.refreshFilterOptions = function (n, t) { var i, u, r, f, e; if (t && this.hardRefreshFilterPanel(), this.selectionfields) for (i = 0; i < this.selectionfields.length; i++)if (this.selectionfields[i].getShowFilterOption() && (u = this.selectionfields[i], u.getColumnName() != n)) { for (r = "", f = 0; f < this.listOfFilterQueries.length; f++)e = this.listOfFilterQueries[f], e.columnName != u.getColumnName() && (r.length > 1 && (r += " AND "), r += e.whereClause); this.getFilterOption(u, r) } }; i.prototype.refreshAll = function (t) { var i = new n.Query(this.curTab.getTableName(), !0); this.curGC.applyFilters(i); this.refreshFilterOptions(t) }; i.prototype.getTargetMField = function (n) { var t, i; if (n == null || n.length == 0) return null; for (t = 0; t < this.curTabfields.length; t++)if (i = this.curTabfields[t], n.equals(i.getColumnName())) return i; return null }; i.prototype.parseValue = function (t, i) { var u, r, e, f, o; if (i == null || (u = t.getDisplayType(), r = i.toString(), r == null || r.equals(n.Env.NULLString) || r == "" || r.toUpper() == "NULL")) return null; try { if (u == n.DisplayType.Integer || n.DisplayType.IsID(u) && t.getColumnName().endsWith("_ID")) return parseInt(r); if (n.DisplayType.IsNumeric(u)) return parseFloat(r); if (n.DisplayType.IsDate(u)) { e = ""; try { return new Date(r) } catch (h) { e = "" } try { return Date.Parse(e) } catch (c) { return null } } } catch (s) { return f = s.message, (f == null || f.length == 0) && (f = s.toString()), o = "", o += t.getColumnName() + " = " + r + " - " + f, n.ADialog.error("ValidationError", !0, o.toString()), null } return r }; i.prototype.createDirectSql = function (t, i, r, u, f) { var e = "", o = /(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})/; return typeof t == "string" && isNaN(t) && t.toString().toUpper() != "NULLValue".toUpper() && (e += " UPPER( "), e += this.curTab.getTableName() + "." + r, typeof t == "string" && isNaN(t) && t.toString().toUpper() != "NULLValue".toUpper() && (e += " ) "), t == null || "NULL".equals(t.toString().toUpper()) || "NullValue".toUpper().equals(t.toString().toUpper()) ? e += u.equals(n.Query.prototype.EQUAL) ? " IS NULL " : " IS NOT NULL " : (e += u, (n.Query.prototype.IN.equals(u) || n.Query.prototype.NOT_IN.equals(u)) && (e += "("), t instanceof Date || t && o.test(t.toString()) ? e += n.DB.to_date(t, !1) : "string" == typeof t && isNaN(t) ? f ? (e += " UPPER( ", e += n.DB.to_string(t.toString()), e += " ) ") : e += t.toString() : e += t, n.Query.prototype.BETWEEN.equals(u) ? (e += " AND ", i instanceof Date || i && o.test(i.toString()) ? e += n.DB.to_date(i, !1) : typeof i == "string" ? (e += " UPPER( ", e += n.DB.to_string(i.toString()), e += " ) ") : e += i) : (n.Query.prototype.IN.equals(u) || n.Query.prototype.NOT_IN.equals(u)) && (e += ")")), e }; i.prototype.parseWhereCondition = function (t, i, r, u) { var e = this.getTargetMField(t), v = e.getColumnSQL(), a; r != null && r.length > 0 && n.DisplayType.IsText(e.getDisplayType()) && i == n.Query.prototype.EQUAL && (i = n.Query.prototype.LIKE, r = "%" + r + "%"); var s = "", f = null, o = null; if (r != null && (r.toString().trim().startsWith("adddays") || r.toString().trim().startsWith("@")) || (f = this.parseValue(e, r)), (r == null || r.toString().length < 1) && (f = n.Env.NULLString), n.DisplayType.IsDate(e.getDisplayType()) && n.Query.prototype.BETWEEN.equals(i) && (o = this.parseValue(e, u)), e.getIsVirtualColumn()) v = e.vo.ColumnSQL, t = e.vo.ColumnSQL, n.Query.prototype.BETWEEN.equals(i) ? ((u == null || u.toString().trim().length < 1) && (f = null, o = null), o = this.parseValue(e, u), s = this.createDirectSql(f, o, t, i, !0)) : s = this.createDirectSql(f, o, t, i, !0); else { var c = "C_DimAmt", y = "IsActive", p = "Amount", w = "S", h = "E", b = "L", k = "ECT", d = "F", l = "R", g = "OM", nt = "WH"; if (e.getDisplayType() == n.DisplayType.DateTime && n.Query.prototype.EQUAL.equals(i) && f) { var tt = f.getFullYear(), it = f.getMonth(), rt = f.getDate(); o = new Date(tt, it, rt, 24, 00, 00); f = new Date(tt, it, rt, 00, 00, 00); i = n.Query.prototype.BETWEEN } n.Query.prototype.BETWEEN.equals(i) ? (u = o, (u == null || u.toString().trim().length < 1) && (f = null, o = null), e.getDisplayType() == n.DisplayType.AmtDimension && (a = w + h + b + k + " " + c + "_ID " + d + l + g + " " + c + " " + nt + h + l + h + " " + y + "='Y' AND " + p + " " + i + r + " AND " + u, f = n.MRole.getDefault().addAccessSQL(a.toString(), "C_DimAmt", n.MRole.SQL_NOTQUALIFIED, n.MRole.SQL_RO), i = n.Query.prototype.IN), s = this.createDirectSql(f, o, v, i, !1)) : (e.getDisplayType() == n.DisplayType.AmtDimension && (a = w + h + b + k + " " + c + "_ID " + d + l + g + " " + c + " " + nt + h + l + h + " " + y + "='Y' AND " + p + " " + i + r, f = n.MRole.getDefault().addAccessSQL(a.toString(), "C_DimAmt", n.MRole.SQL_NOTQUALIFIED, n.MRole.SQL_RO), i = n.Query.prototype.IN), f == null && r != null && (r.toString().trim().startsWith("adddays") || r.toString().trim().startsWith("@")) ? (s = t + i + r, e.getDisplayType() == n.DisplayType.AmtDimension && (s = t + n.Query.prototype.IN + "(" + f + ")")) : s = this.createDirectSql(f, o, v, i, !0)) } return s }; i.prototype.dispose = function () { this.disposeComponent(); this.curGC = this.curTab = this.curTabfields = this.selectionfields = null }; i.prototype.getOperatorsQuery = function (t, i) { var u = "", r = ""; for (var f in t) r = t[f], i && (r = n.Msg.getMsg(r)), u += '<option value="' + f + '">' + r + "<\/option>"; return u }; var u = { getFilters: function (i) { return new Promise(function (r) { var u = null; t.ajax({ url: n.Application.contextUrl + "JsonData/GetRecordForFilter", type: "POST", data: { data: JSON.stringify(i) } }).done(function (n) { u = n; u = JSON.parse(u); r(u) }) }) } }; n.FilterPanel = i }(VIS, jQuery), function (n, t) { n.ThemeCnfgtor = function () { function g() { k("0, 152, 247", "255, 255, 255", "238, 238, 238", "51, 51, 51"); r(!0); i.load(n.Application.contextUrl + "Theme/ThemeCnfgtr/?windowNo=" + b, function () { nt(); h() }) } function k(n, t, i, r) { document.documentElement.style.setProperty("--v-c-th-primary", n); document.documentElement.style.setProperty("--v-c-th-on-primary", t); document.documentElement.style.setProperty("--v-c-th-secondary", i); document.documentElement.style.setProperty("--v-c-th-on-secondary", r) } function nt() { d = i.find("#divTheme_" + b); f = i.find(".vis-thed-clrpickerouterwrap"); l = i.find(".vis-thed-botsavesec"); a = f.find('input[name="primary"]'); v = f.find('input[name="onprimary"]'); y = f.find('input[name="secondary"]'); p = f.find('input[name="onsecondary"]'); s = l.find("input"); o = i.find(".vis-thed-savedlistwrap"); f.find("input").on("change", function () { this.name == "primary" ? document.documentElement.style.setProperty("--v-c-th-primary", u(this.value)) : this.name == "onprimary" ? document.documentElement.style.setProperty("--v-c-th-on-primary", u(this.value)) : this.name == "secondary" ? document.documentElement.style.setProperty("--v-c-th-secondary", u(this.value)) : this.name == "onsecondary" && document.documentElement.style.setProperty("--v-c-th-on-secondary", u(this.value)) }); l.find("a").on("click", function () { if (s.val().trim() == "") { n.ADialog.error("EnterName"); return } var i = t(this), f = i.data("action") == "sandd"; r(!0); tt(u(a.val()), u(v.val()), u(y.val()), u(p.val()), f, s.val()) }); o.on("click", "LI", function (i) { r(!0); var u = t(i.currentTarget).data("id"); i.target.className.indexOf("vis-delete") > -1 ? n.ADialog.confirm("DeleteRecord?", !0, "", "Confirm", function (t) { t ? n.dataContext.postJSONData(n.Application.contextUrl + "Theme/Delete", { id: u }, function () { h() }) : r(!1) }) : n.dataContext.postJSONData(n.Application.contextUrl + "Theme/SetDefault", { id: u }, function () { h() }) }) } function r(n) { e[0].style.visibility = n ? "visible" : "hidden" } function tt(t, i, u, f, e, o) { var s = {}; s.Primary = t; s.OnPrimary = i; s.Seconadary = u; s.OnSecondary = f; s.IsDefault = e; s.Name = o; r(!0); n.dataContext.postJSONData(n.Application.contextUrl + "Theme/Save", s, it) } function it(n) { n > 0 ? (h(), s.val("")) : r(!1) } function h() { r(!0); o.empty(); n.dataContext.getJSONData(n.Application.contextUrl + "Theme/GetList", { id: 0 }, function (n) { for (var t, i = [], u = 0; u < n.length; u++)t = n[u], i.push('<li class="vis-thed-savedlistitem'), t.IsDefault && i.push(" vis-thed-selectedlistitem"), i.push('" data-id="' + t.Id + '">'), i.push('<div class="vis-theme-rec" style="width:80px">'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.Primary + ',1)"><\/span>'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.OnPrimary + ',1)"><\/span>'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.Seconadary + ',1)"><\/span>'), i.push('<span class="vis-theme-color" style="background-color:rgba(' + t.OnSecondary + ',1)"><\/span>'), i.push("<\/div>"), i.push('<a class="vis-thed-themename">' + t.Name + "<\/a>"), t.IsDefault && i.push('<i class="vis vis-markx"><\/i>'), i.push('<span style="margin:0 3px 0 3px" class="vis vis-delete"><\/span>'), i.push("<\/li>"), t.IsDefault && (a.val(c(t.Primary)), v.val(c(t.OnPrimary)), y.val(c(t.Seconadary)), p.val(c(t.OnSecondary)), k(t.Primary, t.OnPrimary, t.Seconadary, t.OnSecondary)); o.append(i.join(" ")); r(!1) }) } function rt(n, t, i) { var r = i | t << 8 | n << 16; return "#" + (16777216 + r).toString(16).slice(1) } function c(n) { var n = n.split(","); return rt(n[0], n[1], n[2]) } function u(n) { var t = ut(n); return t ? t.r + "," + t.g + "," + t.b : t } function ut(n) { var t; return n = n.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (n, t, i, r) { return t + t + i + i + r + r }), t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n), t ? { r: parseInt(t[1], 16), g: parseInt(t[2], 16), b: parseInt(t[3], 16) } : null } function ft() { var u = t(window).width() - 150, f = t(window).height() - 10, r; e.height(f); e.width(u); i.append(e); r = new n.ChildDialog; r.setContent(i); r.setWidth(u); r.setHeight(f); r.setTitle(n.Msg.getMsg("ThemeConfig")); r.setModal(!0); r.onClose = function () { w.dispose(); t("#ui-datepicker-div").remove(); i = null; w = null }; r.show(); r.hideButtons() } var i = t("<div class='vis-forms-container'>"), e = t("<div class='vis-apanel-busy'>"), b = n.Env.getWindowNo(), d = null, f = null, l = null, o = null, a = null, v = null, y = null, p = null, s = null, w = this; this.show = function () { g(); ft() }; this.dispose = function () { i.remove(); i = null; w = null } } }(VIS, jQuery), function (n, t) { function i(i, r) { this.bufferList = []; this.grid; var f = this, o = t("<div id='TabDialog' style='width:100%;height:100%'>"), s = n.Application.contextUrl, e = null, u = i.gTab; this.show = function () { ch = new n.ChildDialog; ch.setContent(o); ch.setHeight(500); ch.setWidth("80%"); ch.setTitle(u.getName()); ch.setModal(!0); ch.onClose = function () { f.grid.destroy(); o.empty(); o = null }; ch.show(); f.gridSetup(i.getMTab().gridTable.gridFields, o, "TabDialog", i.getMTab(), i) }; this.gridSetup = function (i, o, h, c, l) { var b, g, w, y, a, it, st, rt, k, ut; if (!c.getIsDisplayed(!0)) return 0; this.id = h; this.$container = o; var v = [], p = null, ht = i.length, nt = 0, tt = i.slice(0); for (tt.sort(function (n, t) { return n.getMRSeqNo() - t.getMRSeqNo() }), b = -1, g = 0; g < tt.length; g++)if (p = tt[g], p != null) { w = p.getColumnName(); y = p.getDisplayType(); ++b; p.getIsKey() ? this.indexKeyColumn = b : w.equals("IsActive") ? this.indexActiveColumn = b : w.equals("Processed") ? this.indexProcessedColumn = b : w.equals("AD_Client_ID") ? this.indexClientColumn = b : w.equals("AD_Org_ID") && (this.indexOrgColumn = b); var d = p.getIsDisplayedMR ? p.getIsDisplayedMR() : p.getIsDisplayed(), ft = p.getIsMandatory(!1), et = p.getIsReadOnly(), ot = p.getIsEditable(!1); p.getIsHeading() || (a = { resizable: !0, selfCellStyleRender: !1 }, a.gridField = p, (et || !ot) && (a.readOnly = !0), a.caption = p.getHeader(), ft && (a.caption += '<sup style="color:red;font-size: 11px;top: 0;">*<\/sup>'), a.field = w.toLowerCase(), a.hidden = !d, it = a.gridField.getColumnWidth(), a.size = it ? it + "px" : "100px", p.getIsIdentifier() && p.getDisplayType() != n.DisplayType.Image && this.hyperLinkCell == null ? a.hidden == !1 && (this.hyperLinkCell = w, a.style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; cursor:pointer") : p.getDisplayType() == n.DisplayType.TelePhone && a.hidden == !1 && (a.style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; "), y == n.DisplayType.Amount ? (a.sortable = !0, a.customFormat = n.DisplayType.GetNumberFormat(y), a.render = function (n, t, i) { var u = v[i].field, r = n[u]; return r || (r = 0), r = parseFloat(r).toLocaleString(undefined, { minimumFractionDigits: v[i].customFormat.getMinFractionDigit(), maximumFractionDigits: v[i].customFormat.getMaxFractionDigit() }), '<div data-type="int">' + r + "<\/div>" }) : y == n.DisplayType.Integer ? (a.sortable = !0, a.customFormat = n.DisplayType.GetNumberFormat(y), a.render = function (n, t, i) { var u = v[i].field, r = n[u]; if (r) return '<div data-type="int">' + r + "<\/div>" }) : y == n.DisplayType.ProgressBar ? (a.sortable = !0, a.selfCellStyleRender = !0, a.render = function (n, t, i) { var e = v[i].field, o = v[i].gridField, r = "", u; return o.getStyleLogic() != "" && (r = f.evaluateStyleLogic(t, o.getStyleLogic())), r || (r = ""), u = n[e], n.changes && typeof n.changes[e] != "undefined" && (u = n.changes[e]), '<div class="vis-progress-gridbar" style="' + r + '"><div class="vis-progress-percent-bar" style = "width:' + (u || 0) + "%;" + r + '" ><\/div><div class="vis-progress-gridoutput" > ' + (u || "") + "<\/div><\/div >" }) : n.DisplayType.IsNumeric(y) ? (a.sortable = !0, a.customFormat = n.DisplayType.GetNumberFormat(y), a.render = function (n, t, i) { var u = v[i].field, r = n[u]; if (r) return r = parseFloat(r).toLocaleString(undefined, { minimumFractionDigits: v[i].customFormat.getMinFractionDigit(), maximumFractionDigits: v[i].customFormat.getMaxFractionDigit() }), '<div data-type="int">' + r + "<\/div>" }) : y == n.DisplayType.YesNo ? (a.sortable = !0, st = w.toLowerCase(), a.gridField.getIsSwitch() && (a.render = "switch"), a.editable = { type: "checkbox" }) : y == n.DisplayType.String || y == n.DisplayType.Text || y == n.DisplayType.TextLong || y == n.DisplayType.Memo ? (a.sortable = !0, a.render = p.getIsEncryptedField() ? function (n, t, i) { var u = v[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r = n[v[i].field], r || r === 0) ? r.replace(/\w|\W/g, "*") : "" } : p.getObscureType() ? function (t, i, r) { var u = t[v[r].field]; return u || u === 0 ? n.Env.getObscureValue(v[r].gridField.getObscureType(), u) : "" } : function (n, t, i) { var u = v[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }) : n.DisplayType.IsLookup(y) || y == n.DisplayType.ID ? (a.sortable = !0, a.lookup = p.getLookup(), d && (a.render = function (i, r, u) { var s = v[u].lookup, rt = v[u].field, a = i[rt], ut = v[u].gridField.getGridImageStyle(), ft = v[u].gridField.getWindowNo(), k, d, f, tt, p, g, et, y, e, b, l, o, c, h; if (v[u].customClass = "", ut && (k = v[u].customClass, k || (v[u].customClass = "vis-grd-custom-" + v[u].gridField.getAD_Column_ID() + ft, k = ".vis-grd-custom-" + v[u].gridField.getAD_Column_ID() + ft + "{" + ut + "}", d = document.createElement("style"), d.type = "text/css", d.innerHTML = k, t(t("head")[0]).append(d))), i.changes && typeof i.changes[rt] != "undefined", s) if (s.displayType == n.DisplayType.MultiKey) if (a) { for (tt = a.toString().split(","), p = "", g = 0, et = tt.length; g < et; g++) { if (y = tt[g], isNaN(y) || (y = Number(y)), p.length == 0) { p += s.getDisplay(y); continue } p += ", " + s.getDisplay(y) } f = p } else f = s.getDisplay(a, !0, !0); else f = s.getDisplay(a, !0, !0); if (e = "", s && n.DisplayType.List == s.displayType) { var ot = Math.floor(Math.random() * 360) + 0, st = 60, nt = "hsl(" + ot + ", 100%," + st + "%)", it = s.getLovIconType(a, !0), w = s.getLOVIconElement(a, !0), o = ""; if (w || (o.length == 0 && (h = f.trim().split(" ")), o = h[0].substring(0, 1).toUpper(), h.length > 1 ? o += h[h.length - 1].substring(0, 1).toUpper() : o = h[0].substring(0, 2).toUpper()), it == "B") e = "<div class='vis-grid-td-icon-grp'>", e += w ? "<div class='" + v[u].customClass + " vis-grid-row-td-icon'> " + w + "<\/div> " : "<div style='background-color:" + nt + "' class='" + v[u].customClass + " vis-grid-row-td-icon'><span>" + o + "<\/span><\/div>", e += "<span> " + f + "<\/span ><div>"; else { if (it == "T") return f; it == "I" && (e = "<div class='vis-grid-td-icon-grp' style='Justify-Content:center'>", e += w ? "<div class='" + v[u].customClass + " vis-grid-row-td-icon'> " + w + "<\/div> " : "<div style='background-color:" + nt + "' class='" + v[u].customClass + " vis-grid-row-td-icon'><span>" + o + "<\/span><\/div>", e += "<div>") } } else if (s && s.gethasImageIdentifier()) { if (b = f.indexOf("Images/"), b == -1) return f; for (l = f.substring(b + 7, f.lastIndexOf("^^")), l = n.Application.contextUrl + "Images/Thumb32x32/" + l, f = f.replace("^^" + f.substring(b, f.lastIndexOf("^^") + 2), "^^^"), f.indexOf("Images/") > -1 && (f = f.replace(f.substring(b, f.lastIndexOf("^^") + 2), "^^^")), f = f.split("^^^"), e = "<div class='vis-grid-td-icon-grp'>", o = "", c = 0; c < f.length; c++) { var ot = Math.floor(Math.random() * 360) + 0, st = 60, nt = "hsl(" + ot + ", 100%," + st + "%)"; f[c].trim().length > 0 && (o.length == 0 && (h = f[c].trim().split(" ")), o = h[0].substring(0, 1).toUpper(), h.length > 1 ? o += h[h.length - 1].substring(0, 1).toUpper() : o = h[0].substring(0, 2).toUpper(), c > 0 && l.indexOf("nothing.png") > -1 && o.length > 0 && (e += "<div style='background-color:" + nt + "' class='" + v[u].customClass + " vis-grid-row-td-icon' ><span>" + o + "<\/span><\/div>"), e += "<span>" + f[c] + "<\/span>"); (c == 0 || l.indexOf("nothing.png") > -1) && l.indexOf("nothing.png") == -1 && (e += "<div style='background-color:" + nt + "' class='" + v[u].customClass + " vis-grid-row-td-icon' > <img src='" + l + "'><\/div > ") } +"</div > " } return e == "" ? f : e })) : n.DisplayType.IsDate(y) ? (a.sortable = !0, a.displayType = y, a.render = function (t, i, r) { var o = v[r], e = v[r].field, u = t[e], f; return t.changes && typeof t.changes[e] != "undefined" && (u = t.changes[e]), u ? o.displayType == n.DisplayType.Date ? (f = new Date(u), f.setMinutes(f.getTimezoneOffset() + f.getMinutes()), u = f.toLocaleDateString()) : u = o.displayType == n.DisplayType.DateTime ? new Date(u).toLocaleString() : new Date(u).toTimeString() : u = "", u }) : y == n.DisplayType.Location || y == n.DisplayType.Locator ? (a.sortable = !0, a.lookup = p.getLookup(), d && (a.render = function (n, t, i) { var f = v[i].lookup, u = v[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : y == n.DisplayType.AmtDimension ? (a.sortable = !0, a.lookup = p.getLookup(), d && (a.render = function (n, t, i) { var f = v[i].lookup, u = v[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : y == n.DisplayType.ProductContainer ? (a.sortable = !0, a.lookup = p.getLookup(), d && (a.render = function (n, t, i) { var f = v[i].lookup, u = v[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : y == n.DisplayType.Account || y == n.DisplayType.PAttribute ? (a.sortable = !0, a.lookup = p.getLookup(), d && (a.render = function (n, t, i) { var f = v[i].lookup, u = v[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), f && (r = f.getDisplay(r, !0), r = w2utils.encodeTags(r)), r })) : y == n.DisplayType.PAttribute ? (a.sortable = !0, a.render = "int") : y == n.DisplayType.Button ? a.sortable = !0 : y == n.DisplayType.Image ? (a.sortable = !0, a.render = function (i, r, u) { var s = v[u].field, h = v[u].gridField.getGridImageStyle(), c = v[u].gridField.getWindowNo(), e, o, f; return (h && (e = v[u].customClass, e || (v[u].customClass = "vis-grd-custom-" + v[u].gridField.getAD_Column_ID() + c, e = ".vis-grd-custom-" + v[u].gridField.getAD_Column_ID() + c + "{" + h + "}", o = document.createElement("style"), o.type = "text/css", o.innerHTML = e, t(t("head")[0]).append(o))), f = i["imgurlcolumn" + s], i.changes && typeof i.changes[s] != "undefined" && (f = i.changes[s]), !f) ? '<div class="vis-grid-row-td-icon-center">-<\/div>' : (f = f.toString().replace("Images/", "Images/Thumb32x32/"), e ? '<div class="vis-grid-row-td-icon-center"><div class="' + v[u].customClass + ' vis-grid-row-td-icon"><img src="' + n.Application.contextUrl + f + '"><\/div><\/div>' : '<div class="vis-grid-row-td-icon-center"><div class="vis-grid-row-td-icon"><img src="' + n.Application.contextUrl + f + '"><\/div><\/div>') }) : n.DisplayType.IsLOB(y) ? (a.sortable = !0, a.render = function (n, t, i) { var u = v[i].field, r = n[u]; return n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || (r = ""), "#" + r.toString().length }) : n.DisplayType.TelePhone == y ? (a.sortable = !0, a.render = function (t, i, r) { var u = v[r].field, f = t[u]; return (t.changes && typeof t.changes[u] != "undefined" && (f = t.changes[u]), f) ? n.VTelePhoneInstance.getHtml(f, !0) : "" }) : n.DisplayType.Color == y ? (a.sortable = !0, a.render = function (n, t, i) { var r = v[i].field, u = n[r]; return (n.changes && typeof n.changes[r] != "undefined" && (u = n.changes[r]), u) ? '<div style="background-color:' + u + ';" ><\/div>' : "" }) : (a.sortable = !0, a.render = function (n, t, i) { var u = v[i].field, r = n[u]; return (n.changes && typeof n.changes[u] != "undefined" && (r = n.changes[u]), r || r == 0) ? w2utils.encodeTags(r) : "" }), p.getHtmlStyle() != "" && (a.style = p.getHtmlStyle()), a.hidden || nt++, v.push(a), a.columnName = w) } if (nt > 0) { rt = Math.floor(100 / nt); for (k in v) v[k].hidden || (!v[k].size < 0 && (v[k].size = rt + "%", v[k].min = 100), this.hyperLinkCell == null && (this.hyperLinkCell = v[k].columnName, v[k].style = "text-decoration:underline; color:rgba(var(--v-c-primary), 1) !important; cursor:pointer")) } ut = { page: 0, pageSize: 0, treeID: 0, treeNode_ID: 0, card_ID: 0, ad_Tab_ID: u.getAD_Tab_ID(), tableName: u.getTableName() }; t.ajax({ url: s + "Window/GetWindowRecords", type: "post", data: { ctx: n.context.getWindowCtx(l.windowNo), Columns: Object.keys(l.getColumnNames()), TableName: u.getTableName(), WhereClause: n.secureEngine.encrypt(r), ObscureFields: [], sqlIn: ut, AD_Window_ID: u.getAD_Window_ID(), WindowNo: l.windowNo, AD_Tab_ID: u.getAD_Tab_ID(), SummaryOnly: !1, Encryptedfields: [], AD_Table_ID: u.getAD_Table_ID(), MaxRows: 0, DoPaging: !1 }, success: function (t) { var a = JSON.parse(t), c, p, y, s, i, r, o; try { if (c = null, a && (e = (new n.DB.DataSet).toJson(a.Tables), c = a.LookupDirect), e != null) { if (p = 0, e.getTables().length != 0) for (y = e.getTable(0).getRows(), s = e.getTable(0).getColumnsName(), i = 0; i < y.length; i++) { for (r = y[i].getJSCells(), o = 0; o < s.length; o++)r[s[o]] = u.gridTable.readDataOfColumn(s[o], r[s[o]]); r.recid = i + 1; r.editable = !1; f.bufferList[i] = r; p++ } e.dispose(); e = null; c && n.MLookupCache.addRecordLookup(l.windowNo, u.getTabNo(), c); f.grid = f.$container.w2grid({ name: h, columns: v, records: f.bufferList, editable: !1, show: { toolbar: !1, columnHeaders: !0, lineNumbers: !1, selectColumn: !0, toolbarReload: !1, toolbarColumns: !0, toolbarSearch: !1, toolbarAdd: !1, toolbarDelete: !1, toolbarSave: !1, selectionBorder: !1, recordTitles: !1 }, recordHeight: 41 }) } } catch (w) { } }, error: function () { } }) } } n.TabMngr = { show: function (n, t, r) { var u = t + "=" + r, f = new i(n, u); f.show() } } }(VIS, jQuery)